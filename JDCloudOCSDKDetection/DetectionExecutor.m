
/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

JCLOUD DETECTION SUBSCRIBE API
detection API

OpenAPI spec version: v2
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/

#import <Foundation/Foundation.h>

#import <JDCloudOCSDKDetection/DetectionExecutor.h>


/// 检测站点监控地址是否有效
@implementation  DetectionValidateSiteMonitorAddressExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/siteMonitorAddress:validate";
    return self;
}
@end

/// 测试站点监控参数
@implementation  DetectionTestSiteMonitorExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/testSiteMonitor";
    return self;
}
@end

/// 创建可用性监控任务
@implementation  DetectionCreateProbeTaskExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/probeTask";
    return self;
}
@end

/// 启停站点监控任务
@implementation  DetectionEnableSiteMonitorExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"PUT";
    self.url = @"/siteMonitor:switch";
    return self;
}
@end

/// 修改可用性监控任务
@implementation  DetectionUpdateProbeTaskExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"PATCH";
    self.url = @"/probeTask/{probeTaskID}";
    return self;
}
@end

/// 查询可用性监控任务的指定探测源的异常探测历史
@implementation  DetectionDescribeProbeHistoryExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/probeTask/{probeTaskID}/probe/{probeID}";
    return self;
}
@end

/// 删除可用性监控任务
@implementation  DetectionDeleteProbeTaskExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/probeTask";
    return self;
}
@end

/// 删除站点监控任务
@implementation  DetectionDeleteSiteMonitorExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/siteMonitor";
    return self;
}
@end

/// 获取站点监控探针列表
@implementation  DetectionGetSiteMonitorSourceExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/siteMonitorSource";
    return self;
}
@end

/// 查询可用性监控任务信息
@implementation  DetectionDescribeProbeTaskExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/probeTask/{probeTaskID}";
    return self;
}
@end

/// 查询可用性监控agent状态
@implementation  DetectionDescribeAgentStatusExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/amAgentStatus";
    return self;
}
@end

/// 创建站点监控任务
@implementation  DetectionCreateSiteMonitorExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/siteMonitor";
    return self;
}
@end

/// 查询可用性监控任务的探测源列表
@implementation  DetectionDiscribeProbesExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/probeTask/{probeTaskID}/probeList";
    return self;
}
@end

/// 查看可用性监控任务的监控数据
@implementation  DetectionDescribeMetricDataAmExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/amMetricData";
    return self;
}
@end

/// 获取站点监控任务信息
@implementation  DetectionGetSiteMonitorExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/siteMonitor";
    return self;
}
@end

/// 启用、禁用可用性监控任务
@implementation  DetectionProbeTaskEnableExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/probeTask:switch";
    return self;
}
@end

/// 修改站点监控任务
@implementation  DetectionUpdateSiteMonitorExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"PUT";
    self.url = @"/siteMonitor";
    return self;
}
@end

/// 获取站点监控数据
@implementation  DetectionGetSiteMonitorDataPointsExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/siteMonitorDataPoints";
    return self;
}
@end

/// 查询可用性监控任务列表
@implementation  DetectionDescribeProbeTasksExecutor

-(id) initWithJDCloudClient:(DetectionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/probeTaskList";
    return self;
}
@end
