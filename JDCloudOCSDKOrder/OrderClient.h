/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

JDCLOUD ORDER instance API
API related to ORDER instances

OpenAPI spec version: v2
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/


#ifndef OrderClient_h
#define OrderClient_h


#import <JDCloudOCSDKCore/JDCloudOCSDKCore.h>
#import <JDCloudOCSDKOrder/OrderApiModel.h>

@interface OrderClient : NSObject<JDCloudClient>{
    @private
    NSString* _userAgent;
    NSString* _serviceName;
    NSString* _version;
    }

    @property (strong,readonly,nonatomic) NSString* userAgent;

    @property (strong,readonly,nonatomic) NSString* serviceName;

    @property (strong,readonly,nonatomic) NSString* version;

    @property (strong,nonatomic) NSString* contentType;

    @property (strong,nonatomic) Credential* credential;

    @property (strong,nonatomic) SDKEnvironment* sdkEnvironment;

    @property (strong,nonatomic) NSMutableDictionary* customHeader;

    @property  (strong,nonatomic) NSString* httpRequestProtocol;

    -(void) addCustomerHeaderWithKey:(NSString*) key
    value:(NSString*) value;

    -(id)initWithGlobalConfig;

    -(id)initWithCredential:(Credential*)credential
    sdkEnvironment:(SDKEnvironment*)sdkEnvironment;
    -(id)initWithCredential:(Credential*)credential;
    /**
    queryOrder sync request
    @param queryOrderRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `queryOrderResponse` the request response data model
    */
    -(NSDictionary*) queryOrderSyncWithRequest:(OrderQueryOrderRequest*) queryOrderRequest;

    -(void)queryOrderAsyncWithRequest:(OrderQueryOrderRequest*) queryOrderRequest
    completionHandler:(void(^)(int statusCode,OrderQueryOrderResponse* _Nullable queryOrderResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    queryOrders sync request
    @param queryOrdersRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `queryOrdersResponse` the request response data model
    */
    -(NSDictionary*) queryOrdersSyncWithRequest:(OrderQueryOrdersRequest*) queryOrdersRequest;

    -(void)queryOrdersAsyncWithRequest:(OrderQueryOrdersRequest*) queryOrdersRequest
    completionHandler:(void(^)(int statusCode,OrderQueryOrdersResponse* _Nullable queryOrdersResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    payOrder sync request
    @param payOrderRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `payOrderResponse` the request response data model
    */
    -(NSDictionary*) payOrderSyncWithRequest:(OrderPayOrderRequest*) payOrderRequest;

    -(void)payOrderAsyncWithRequest:(OrderPayOrderRequest*) payOrderRequest
    completionHandler:(void(^)(int statusCode,OrderPayOrderResponse* _Nullable payOrderResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    /**
    order common sync request
    @param  jdcloudDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
    */
    -(NSDictionary*) orderCommonSyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                           url:(NSString*) url
                                        method:(NSString*) method;

    -(void)orderCommonAsyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                  url:(NSString*) url
                               method:(NSString*) method
                    completionHandler:(void(^)(int statusCode, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    @end


    #endif /* OrderClient_h */
