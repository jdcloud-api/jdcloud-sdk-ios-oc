
/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

JCLOUD IoT Hub API
API related to IoT Hub

OpenAPI spec version: v2
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/

#import <Foundation/Foundation.h>

#import <JDCloudOCSDKIothub/IothubExecutor.h>


/// 修改设备详情
@implementation  IothubUpdateDeviceExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/regions/{regionId}/device/{deviceId}:update";
    return self;
}
@end

/// 查看产品功能列表接口
@implementation  IothubListProductAbilitiesExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/abilities";
    return self;
}
@end

/// 删除产品
@implementation  IothubDeleteProductExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/products/{productKey}";
    return self;
}
@end

/// 删除设备
@implementation  IothubRemoveDeviceByIdExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/regions/{regionId}/device/{deviceId}:deleteById";
    return self;
}
@end

/// 导出物模型
@implementation  IothubExportThingModelExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/abilities:exportThingModel";
    return self;
}
@end

/// 设备服务调用
@implementation  IothubInvokeThingServiceExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/regions/{regionId}/products/{productKey}/devices/{identifier}/services";
    return self;
}
@end

/// 删除设备
@implementation  IothubRemoveDeviceExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/regions/{regionId}/products/{productKey}/device/{deviceName}:delete";
    return self;
}
@end

/// 导入物模型
@implementation  IothubImportThingModelExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"PUT";
    self.url = @"/regions/{regionId}/abilities:importThingModel";
    return self;
}
@end

/// 更新设备影子的期望值
@implementation  IothubUpdateThingShadowExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"PATCH";
    self.url = @"/regions/{regionId}/regions/{regionId}/products/{productKey}/devices/{identifier}/shadow";
    return self;
}
@end

/// 查看产品
@implementation  IothubDescribeProductExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/products/{productKey}";
    return self;
}
@end

/// 查看设备影子
@implementation  IothubDescribeThingShadowExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/regions/{regionId}/products/{productKey}/devices/{identifier}/shadow";
    return self;
}
@end

/// 注册单个设备并返回秘钥信息
@implementation  IothubAddDeviceExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/regions/{regionId}/device:add";
    return self;
}
@end

/// 查看产品列表接口
@implementation  IothubListProductsExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/products";
    return self;
}
@end

/// 查询设备详情
@implementation  IothubQueryDeviceDetailExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/regions/{regionId}/products/{productKey}/device/{deviceName}:detail";
    return self;
}
@end

/// 分页查询设备信息,支持一个或多个条件
@implementation  IothubQueryDevicePageExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/regions/{regionId}/devices:queryPage";
    return self;
}
@end

/// 新建产品
@implementation  IothubCreateProductExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/products";
    return self;
}
@end

/// 修改产品
@implementation  IothubUpdateProductExecutor

-(id) initWithJDCloudClient:(IothubClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"PATCH";
    self.url = @"/regions/{regionId}/products/{productKey}";
    return self;
}
@end
