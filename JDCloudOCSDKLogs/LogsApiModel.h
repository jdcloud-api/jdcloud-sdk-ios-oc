/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Logtopic APIs
日志服务日志主题相关的管理控制接口

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/


#ifndef LogsApiModel_h
#define LogsApiModel_h
#import <JDCloudOCSDKCore/JDCloudOCSDKCore.h>
#import <JDCloudOCSDKLogs/LogsModel.h>


@interface LogsSearchLogContextRequest:JDCloudRequest

/// 查询anchor,基于该值偏移进行上下文检索
@property (strong,nonatomic,nonnull)  NSArray<NSObject*>*  anchor;
/// 搜索方向,默认both,可取值:up,down,both
@property (strong,nonatomic,nonnull)  NSString*  direction;
/// 日志记录ID
@property (strong,nonatomic,nonnull)  NSString*  idValue;
/// 查看上下文行数大小，最大支持200
@property (strong,nonatomic,nonnull)  NSNumber*  lineSize;
/// 查询日志时返回的时间戳
@property (strong,nonatomic,nonnull)  NSNumber*  time;
/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
-(id) initWithRegion:(NSString *)regionId
anchor:(NSArray<NSObject*>*)anchor
direction:(NSString*)direction
idValue:(NSString*)idValue
lineSize:(NSNumber*)lineSize
time:(NSNumber*)time
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
anchor:(NSArray<NSObject*>*)anchor
direction:(NSString*)direction
idValue:(NSString*)idValue
lineSize:(NSNumber*)lineSize
time:(NSNumber*)time
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

@end

@interface LogsSearchLogContextResult : NSObject
/// 结果条目 map[string]interface{} key包含:content,id,anchor
 @property (strong,nonatomic,nonnull)  NSArray<NSMutableDictionary<NSString*,NSObject*>*>*  data;
/// 总数
 @property (strong,nonatomic,nonnull)  NSNumber*  total;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithData:(NSArray<NSMutableDictionary<NSString*,NSObject*>*>*) data

    total:(NSNumber*)total;
@end

@interface LogsSearchLogContextResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsSearchLogContextResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsSearchLogContextResult*) result;
@end

@interface LogsSearchResult : NSObject
/// 结果条目 map[string]interface{} key包含:content,id,anchor
 @property (strong,nonatomic,nonnull)  NSArray<NSMutableDictionary<NSString*,NSObject*>*>*  data;
/// 总数
 @property (strong,nonatomic,nonnull)  NSNumber*  total;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithData:(NSArray<NSMutableDictionary<NSString*,NSObject*>*>*) data

    total:(NSNumber*)total;
@end

@interface LogsSearchResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsSearchResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsSearchResult*) result;
@end

@interface LogsSearchRequest:JDCloudRequest

/// &quot;preview&quot;表示预览, &quot;fulltext&quot;表示全文检索, &quot;advance&quot;表示按照搜索语句检索
@property (strong,nonatomic,nonnull)  NSString*  action;
/// Base64编码的搜索表达式,
@property (strong,nonatomic,nonnull)  NSString*  expr;
/// 搜索关键字大小写敏感， 默认false
@property (strong,nonatomic,nonnull)  NSNumber*  caseSensitive;
/// 开始时间。格式 “YYYY-MM-DDThh:mm:ssTZD”, 比如 “2018-11-09T15:34:46+0800”
@property (strong,nonatomic,nonnull)  NSString*  startTime;
/// 结束时间。格式 “YYYY-MM-DDThh:mm:ssTZD”, 比如 “2018-11-09T15:34:46+0800”
@property (strong,nonatomic,nonnull)  NSString*  endTime;
/// 页数。 最小为1，最大为99
@property (strong,nonatomic,nonnull)  NSNumber*  pageNumber;
/// 每页个数。默认为10，最大100
@property (strong,nonatomic,nonnull)  NSNumber*  pageSize;
/// 日志集ID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题ID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
-(id) initWithRegion:(NSString *)regionId
action:(NSString*)action
expr:(NSString*)expr
caseSensitive:(NSNumber*)caseSensitive
startTime:(NSString*)startTime
endTime:(NSString*)endTime
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
action:(NSString*)action
expr:(NSString*)expr
caseSensitive:(NSNumber*)caseSensitive
startTime:(NSString*)startTime
endTime:(NSString*)endTime
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

@end

@interface LogsPutResult : NSObject

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
@end

@interface LogsPutResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsPutResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsPutResult*) result;
@end

@interface LogsPutRequest:JDCloudRequest

/// 全局 strean 日志流标识符（建议起能唯一界定一个文件的名字，如 /i-iqnvqpinkjiq/app.log），不传则写入default日志流中（会导致很多文件混合在一起，不推荐）
@property (strong,nonatomic,nonnull)  NSString*  stream;
/// 全局时间戳，UTC格式，最多支持到纳秒级别，不传入则取服务器时间。如 2019-04-08T03:08:04.437670934Z、2019-04-08T03:08:04Z、2019-04-08T03:08:04.123Z
@property (strong,nonatomic,nonnull)  NSString*  timestamp;
/// 日志数据
@property (strong,nonatomic,nonnull)  NSArray<Entry*>*  entries;
/// 日志主题uid
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
-(id) initWithRegion:(NSString *)regionId
stream:(NSString*)stream
timestamp:(NSString*)timestamp
entries:(NSArray<Entry*>*)entries
logtopicUID:(NSString*)logtopicUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
stream:(NSString*)stream
timestamp:(NSString*)timestamp
entries:(NSArray<Entry*>*)entries
logtopicUID:(NSString*)logtopicUID;

@end

@interface LogsTestMetricTaskResult : NSObject
/// Lines
 @property (strong,nonatomic,nonnull)  NSArray<NSString*>*  lines;
/// 监控值
 @property (strong,nonatomic,nonnull)  NSNumber*  value;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithLines:(NSArray<NSString*>*) lines

    value:(NSNumber*)value;
@end

@interface LogsTestMetricTaskResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsTestMetricTaskResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsTestMetricTaskResult*) result;
@end

@interface LogsUpdateMetricTaskResult : NSObject
/// Suc
 @property (strong,nonatomic,nonnull)  NSString*  suc;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithSuc:(NSString*) suc;
@end

@interface LogsUpdateMetricTaskResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsUpdateMetricTaskResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsUpdateMetricTaskResult*) result;
@end

@interface LogsDescribeMetricTaskRequest:JDCloudRequest

/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
/// LogmetrictaskUID
@property (strong,nonatomic,nonnull)  NSString*  logmetrictaskUID;
-(id) initWithRegion:(NSString *)regionId
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID
logmetrictaskUID:(NSString*)logmetrictaskUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID
logmetrictaskUID:(NSString*)logmetrictaskUID;

@end

@interface LogsCreateMetricTaskResult : NSObject
/// UID
 @property (strong,nonatomic,nonnull)  NSString*  idValue;
/// Suc
 @property (strong,nonatomic,nonnull)  NSString*  suc;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithId:(NSString*) idValue

    suc:(NSString*)suc;
@end

@interface LogsDescribeMetricTaskResult : NSObject
/// Data
 @property (strong,nonatomic,nonnull)  MetrictaskDetailEnd*  data;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithData:(MetrictaskDetailEnd*) data;
@end

@interface LogsDescribeMetricTaskResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeMetricTaskResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeMetricTaskResult*) result;
@end

@interface LogsTestMetricTaskRequest:JDCloudRequest

/// 聚合函数,支持 count sum max min avg
@property (strong,nonatomic,nonnull)  NSString*  aggregate;
/// 测试内容
@property (strong,nonatomic,nonnull)  NSArray<NSString*>*  content;
/// 查询字段,支持 英文字母 数字 下划线 中划线 点（中文日志原文和各产品线的key）
@property (strong,nonatomic,nonnull)  NSString*  dataField;
/// 过滤语法，可以为空
@property (strong,nonatomic,nonnull)  NSString*  filterContent;
/// 是否打开过滤
@property (strong,nonatomic,nonnull)  NSString*  filterOpen;
/// 过滤类型，只能是fulltext和 advance
@property (strong,nonatomic,nonnull)  NSString*  filterType;
/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
-(id) initWithRegion:(NSString *)regionId
aggregate:(NSString*)aggregate
content:(NSArray<NSString*>*)content
dataField:(NSString*)dataField
filterContent:(NSString*)filterContent
filterOpen:(NSString*)filterOpen
filterType:(NSString*)filterType
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
aggregate:(NSString*)aggregate
content:(NSArray<NSString*>*)content
dataField:(NSString*)dataField
filterContent:(NSString*)filterContent
filterOpen:(NSString*)filterOpen
filterType:(NSString*)filterType
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

@end

@interface LogsCreateMetricTaskRequest:JDCloudRequest

/// 聚合函数,支持 count sum max min avg
@property (strong,nonatomic,nonnull)  NSString*  aggregate;
/// 自定义单位
@property (strong,nonatomic,nonnull)  NSString*  customUnit;
/// 查询字段,支持 英文字母 数字 下划线 中划线 点（中文日志原文和各产品线的key）
@property (strong,nonatomic,nonnull)  NSString*  dataField;
/// 过滤语法，可以为空
@property (strong,nonatomic,nonnull)  NSString*  filterContent;
/// 是否打开过滤
@property (strong,nonatomic,nonnull)  NSString*  filterOpen;
/// 过滤类型，只能是fulltext和 advance
@property (strong,nonatomic,nonnull)  NSString*  filterType;
/// 时间周期，固定60s
@property (strong,nonatomic,nonnull)  NSNumber*  interval;
/// 监控项 , 支持大小写英文字母 下划线 数字 点，且不超过255byte（不支持中划线）
@property (strong,nonatomic,nonnull)  NSString*  metric;
/// 监控任务名称,同一个日志主题下唯一，支持中文 大小写英文字母 下划线 中划线 数字，且不超过32字符
@property (strong,nonatomic,nonnull)  NSString*  name;
/// 单位
@property (strong,nonatomic,nonnull)  NSString*  unit;
/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
-(id) initWithRegion:(NSString *)regionId
aggregate:(NSString*)aggregate
customUnit:(NSString*)customUnit
dataField:(NSString*)dataField
filterContent:(NSString*)filterContent
filterOpen:(NSString*)filterOpen
filterType:(NSString*)filterType
interval:(NSNumber*)interval
metric:(NSString*)metric
name:(NSString*)name
unit:(NSString*)unit
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
aggregate:(NSString*)aggregate
customUnit:(NSString*)customUnit
dataField:(NSString*)dataField
filterContent:(NSString*)filterContent
filterOpen:(NSString*)filterOpen
filterType:(NSString*)filterType
interval:(NSNumber*)interval
metric:(NSString*)metric
name:(NSString*)name
unit:(NSString*)unit
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

@end

@interface LogsDescribeMetricTasksRequest:JDCloudRequest

/// 当前所在页，默认为1
   /// in: query
@property (strong,nonatomic,nonnull)  NSNumber*  pageNumber;
/// 页面大小，默认为20；取值范围[1, 100]
   /// in: query
@property (strong,nonatomic,nonnull)  NSNumber*  pageSize;
/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID;

@end

@interface LogsDeleteMetricTaskResult : NSObject
/// Suc
 @property (strong,nonatomic,nonnull)  NSString*  suc;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithSuc:(NSString*) suc;
@end

@interface LogsDeleteMetricTaskResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDeleteMetricTaskResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDeleteMetricTaskResult*) result;
@end

@interface LogsUpdateMetricTaskRequest:JDCloudRequest

/// 自定义单位
@property (strong,nonatomic,nonnull)  NSString*  customUnit;
/// 过滤语法，可以为空
@property (strong,nonatomic,nonnull)  NSString*  filterContent;
/// 是否打开过滤
@property (strong,nonatomic,nonnull)  NSString*  filterOpen;
/// 过滤类型，只能是fulltext和 advance
@property (strong,nonatomic,nonnull)  NSString*  filterType;
/// 监控任务名称,同一日志主题下唯一，支持中文 大小写英文字母 下划线 中划线 数字，且不超过32
@property (strong,nonatomic,nonnull)  NSString*  name;
/// 单位
@property (strong,nonatomic,nonnull)  NSString*  unit;
/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
/// LogmetrictaskUID
@property (strong,nonatomic,nonnull)  NSString*  logmetrictaskUID;
-(id) initWithRegion:(NSString *)regionId
customUnit:(NSString*)customUnit
filterContent:(NSString*)filterContent
filterOpen:(NSString*)filterOpen
filterType:(NSString*)filterType
name:(NSString*)name
unit:(NSString*)unit
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID
logmetrictaskUID:(NSString*)logmetrictaskUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
customUnit:(NSString*)customUnit
filterContent:(NSString*)filterContent
filterOpen:(NSString*)filterOpen
filterType:(NSString*)filterType
name:(NSString*)name
unit:(NSString*)unit
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID
logmetrictaskUID:(NSString*)logmetrictaskUID;

@end

@interface LogsDescribeMetricTasksResult : NSObject
/// Data
 @property (strong,nonatomic,nonnull)  NSArray<MetrictaskDetailEnd*>*  data;
/// 总页数
 @property (strong,nonatomic,nonnull)  NSNumber*  numberPages;
/// 总记录数
 @property (strong,nonatomic,nonnull)  NSNumber*  numberRecords;
/// 当前页码
 @property (strong,nonatomic,nonnull)  NSNumber*  pageNumber;
/// 分页大小
 @property (strong,nonatomic,nonnull)  NSNumber*  pageSize;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithData:(NSArray<MetrictaskDetailEnd*>*) data

    numberPages:(NSNumber*)numberPages

    numberRecords:(NSNumber*)numberRecords

    pageNumber:(NSNumber*)pageNumber

    pageSize:(NSNumber*)pageSize;
@end

@interface LogsDescribeMetricTasksResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeMetricTasksResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeMetricTasksResult*) result;
@end

@interface LogsCreateMetricTaskResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsCreateMetricTaskResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsCreateMetricTaskResult*) result;
@end

@interface LogsDeleteMetricTaskRequest:JDCloudRequest

/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
/// LogmetrictaskUID
@property (strong,nonatomic,nonnull)  NSString*  logmetrictaskUID;
-(id) initWithRegion:(NSString *)regionId
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID
logmetrictaskUID:(NSString*)logmetrictaskUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
logsetUID:(NSString*)logsetUID
logtopicUID:(NSString*)logtopicUID
logmetrictaskUID:(NSString*)logmetrictaskUID;

@end

@interface LogsDescribeLogsetsResult : NSObject
/// Data
 @property (strong,nonatomic,nonnull)  NSArray<LogsetEnd*>*  data;
/// 总页数
 @property (strong,nonatomic,nonnull)  NSNumber*  numberPages;
/// 总记录数
 @property (strong,nonatomic,nonnull)  NSNumber*  numberRecords;
/// 当前页码
 @property (strong,nonatomic,nonnull)  NSNumber*  pageNumber;
/// 分页大小
 @property (strong,nonatomic,nonnull)  NSNumber*  pageSize;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithData:(NSArray<LogsetEnd*>*) data

    numberPages:(NSNumber*)numberPages

    numberRecords:(NSNumber*)numberRecords

    pageNumber:(NSNumber*)pageNumber

    pageSize:(NSNumber*)pageSize;
@end

@interface LogsCreateLogsetRequest:JDCloudRequest

/// 日志集名称
@property (strong,nonatomic,nonnull)  NSString*  name;
/// 日志集描述
@property (strong,nonatomic,nonnull)  NSString*  descriptionValue;
/// 保存周期，只能是 7， 15， 30
@property (strong,nonatomic,nonnull)  NSNumber*  lifeCycle;
-(id) initWithRegion:(NSString *)regionId
name:(NSString*)name
descriptionValue:(NSString*)descriptionValue
lifeCycle:(NSNumber*)lifeCycle;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
name:(NSString*)name
descriptionValue:(NSString*)descriptionValue
lifeCycle:(NSNumber*)lifeCycle;

@end

@interface LogsUpdateLogsetResult : NSObject

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
@end

@interface LogsUpdateLogsetResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsUpdateLogsetResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsUpdateLogsetResult*) result;
@end

@interface LogsDeleteLogsetResult : NSObject

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
@end

@interface LogsDeleteLogsetResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDeleteLogsetResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDeleteLogsetResult*) result;
@end

@interface LogsDescribeLogsetResult : NSObject
/// UID
 @property (strong,nonatomic,nonnull)  NSString*  uID;
/// 创建时间
 @property (strong,nonatomic,nonnull)  NSString*  createTime;
/// 描述信息
 @property (strong,nonatomic,nonnull)  NSString*  descriptionValue;
/// 是否存在日志主题
 @property (strong,nonatomic,nonnull)  NSNumber*  hasTopic;
/// 保存周期
 @property (strong,nonatomic,nonnull)  NSNumber*  lifeCycle;
/// 日志集名称
 @property (strong,nonatomic,nonnull)  NSString*  name;
/// 地域信息
 @property (strong,nonatomic,nonnull)  NSString*  region;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithUID:(NSString*) uID

    createTime:(NSString*)createTime

    descriptionValue:(NSString*)descriptionValue

    hasTopic:(NSNumber*)hasTopic

    lifeCycle:(NSNumber*)lifeCycle

    name:(NSString*)name

    region:(NSString*)region;
@end

@interface LogsDescribeLogsetRequest:JDCloudRequest

/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
-(id) initWithRegion:(NSString *)regionId
logsetUID:(NSString*)logsetUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
logsetUID:(NSString*)logsetUID;

@end

@interface LogsDescribeLogsetResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeLogsetResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeLogsetResult*) result;
@end

@interface LogsDescribeLogsetsResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeLogsetsResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeLogsetsResult*) result;
@end

@interface LogsCreateLogsetResult : NSObject
/// UID
 @property (strong,nonatomic,nonnull)  NSString*  uID;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithUID:(NSString*) uID;
@end

@interface LogsUpdateLogsetRequest:JDCloudRequest

/// 日志集描述
@property (strong,nonatomic,nonnull)  NSString*  descriptionValue;
/// 保存周期，只能是 7， 15， 30
@property (strong,nonatomic,nonnull)  NSNumber*  lifeCycle;
/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
-(id) initWithRegion:(NSString *)regionId
descriptionValue:(NSString*)descriptionValue
lifeCycle:(NSNumber*)lifeCycle
logsetUID:(NSString*)logsetUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
descriptionValue:(NSString*)descriptionValue
lifeCycle:(NSNumber*)lifeCycle
logsetUID:(NSString*)logsetUID;

@end

@interface LogsDeleteLogsetRequest:JDCloudRequest

/// 日志集ID，多个日志集ID以逗号分割
@property (strong,nonatomic,nonnull)  NSString*  logsetUIDs;
-(id) initWithRegion:(NSString *)regionId
logsetUIDs:(NSString*)logsetUIDs;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
logsetUIDs:(NSString*)logsetUIDs;

@end

@interface LogsCreateLogsetResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsCreateLogsetResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsCreateLogsetResult*) result;
@end

@interface LogsDescribeLogsetsRequest:JDCloudRequest

/// 当前所在页，默认为1
@property (strong,nonatomic,nonnull)  NSNumber*  pageNumber;
/// 页面大小，默认为20；取值范围[1, 100]
@property (strong,nonatomic,nonnull)  NSNumber*  pageSize;
/// 日志集名称
@property (strong,nonatomic,nonnull)  NSString*  name;
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
name:(NSString*)name;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
name:(NSString*)name;

@end

@interface LogsDescribeInstanceCollectConfsRequest:JDCloudRequest

/// instanceId
@property (strong,nonatomic,nonnull)  NSString*  instanceId;
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId;

@end

@interface LogsDescribeInstanceCollectConfsResult : NSObject
/// Confs
 @property (strong,nonatomic,nonnull)  NSArray<CollectConf*>*  confs;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithConfs:(NSArray<CollectConf*>*) confs;
@end

@interface LogsDescribeLogdCARequest:JDCloudRequest

/// instanceId
@property (strong,nonatomic,nonnull)  NSString*  instanceId;
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId;

@end

@interface LogsDescribeInstanceCollectConfsResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeInstanceCollectConfsResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeInstanceCollectConfsResult*) result;
@end

@interface LogsDescribeLogdCAResult : NSObject
/// public 证书
 @property (strong,nonatomic,nonnull)  NSString*  cert;
/// expiryDate 证书到期日
 @property (strong,nonatomic,nonnull)  NSNumber*  expiryDate;
/// 私钥
 @property (strong,nonatomic,nonnull)  NSString*  privateKey;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithCert:(NSString*) cert

    expiryDate:(NSNumber*)expiryDate

    privateKey:(NSString*)privateKey;
@end

@interface LogsDescribeLogdCAResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeLogdCAResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeLogdCAResult*) result;
@end

@interface LogsUpdateCollectResourcesResult : NSObject

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
@end

@interface LogsUpdateCollectResourcesResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsUpdateCollectResourcesResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsUpdateCollectResourcesResult*) result;
@end

@interface LogsCreateCollectInfoResult : NSObject
/// UID
 @property (strong,nonatomic,nonnull)  NSString*  uID;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithUID:(NSString*) uID;
@end

@interface LogsDescribeCollectResourcesResult : NSObject
/// Data
 @property (strong,nonatomic,nonnull)  NSArray<ResourceEnd*>*  data;
/// 总页数
 @property (strong,nonatomic,nonnull)  NSNumber*  numberPages;
/// 总记录数
 @property (strong,nonatomic,nonnull)  NSNumber*  numberRecords;
/// 当前页码
 @property (strong,nonatomic,nonnull)  NSNumber*  pageNumber;
/// 分页大小
 @property (strong,nonatomic,nonnull)  NSNumber*  pageSize;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithData:(NSArray<ResourceEnd*>*) data

    numberPages:(NSNumber*)numberPages

    numberRecords:(NSNumber*)numberRecords

    pageNumber:(NSNumber*)pageNumber

    pageSize:(NSNumber*)pageSize;
@end

@interface LogsUpdateCollectInfoResult : NSObject

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
@end

@interface LogsUpdateCollectInfoResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsUpdateCollectInfoResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsUpdateCollectInfoResult*) result;
@end

@interface LogsUpdateCollectInfoRequest:JDCloudRequest

/// 采集状态，0-禁用，1-启用
@property (strong,nonatomic,nonnull)  NSNumber*  enabled;
/// 采集实例类型, 只能是 all/part  当选择all时，传入的实例列表无效
@property (strong,nonatomic,nonnull)  NSString*  resourceType;
/// 采集实例列表（存在上限限制20）
@property (strong,nonatomic,nonnull)  NSArray<Resource*>*  resources;
/// 日志路径。当appcode为custom时为必填。目前仅支持对 Linux 云主机上的日志进行采集，路径支持通配符“*”和“？”，文件路径应符合 Linux 的文件路径规则
@property (strong,nonatomic,nonnull)  NSString*  logPath;
/// 日志文件名。当appcode为custom时为必填。日志文件名支持正则表达式。
@property (strong,nonatomic,nonnull)  NSString*  logFile;
/// 过滤器。设置过滤器后可根据用户设定的关键词采集部分日志，如仅采集 Error 的日志。目前最大允许5个。
@property (strong,nonatomic,nonnull)  NSArray<NSString*>*  logFilters;
/// 过滤器是否启用。当appcode为custom时必填
@property (strong,nonatomic,nonnull)  NSNumber*  filterEnabled;
/// 采集配置 UID
@property (strong,nonatomic,nonnull)  NSString*  collectInfoUID;
-(id) initWithRegion:(NSString *)regionId
enabled:(NSNumber*)enabled
resourceType:(NSString*)resourceType
resources:(NSArray<Resource*>*)resources
logPath:(NSString*)logPath
logFile:(NSString*)logFile
logFilters:(NSArray<NSString*>*)logFilters
filterEnabled:(NSNumber*)filterEnabled
collectInfoUID:(NSString*)collectInfoUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
enabled:(NSNumber*)enabled
resourceType:(NSString*)resourceType
resources:(NSArray<Resource*>*)resources
logPath:(NSString*)logPath
logFile:(NSString*)logFile
logFilters:(NSArray<NSString*>*)logFilters
filterEnabled:(NSNumber*)filterEnabled
collectInfoUID:(NSString*)collectInfoUID;

@end

@interface LogsDescribeCollectInfoRequest:JDCloudRequest

/// 采集配置 UID
@property (strong,nonatomic,nonnull)  NSString*  collectInfoUID;
-(id) initWithRegion:(NSString *)regionId
collectInfoUID:(NSString*)collectInfoUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
collectInfoUID:(NSString*)collectInfoUID;

@end

@interface LogsDescribeCollectInfoResult : NSObject
/// UID
 @property (strong,nonatomic,nonnull)  NSString*  uID;
/// 日志来源
 @property (strong,nonatomic,nonnull)  NSString*  appCode;
/// Detail
 @property (strong,nonatomic,nonnull)  CollectTempalteEnd*  detail;
/// Enabled
 @property (strong,nonatomic,nonnull)  NSNumber*  enabled;
/// 是否存在资源
 @property (strong,nonatomic,nonnull)  NSNumber*  hasResource;
/// 日志集 UID
 @property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题 UID
 @property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
/// 采集实例类型, 只能是 all/part
 @property (strong,nonatomic,nonnull)  NSString*  resourceType;
/// 产品线
 @property (strong,nonatomic,nonnull)  NSString*  serviceCode;
/// 日志类型名称
 @property (strong,nonatomic,nonnull)  NSString*  templateName;
/// 日志类型
 @property (strong,nonatomic,nonnull)  NSString*  templateUID;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithUID:(NSString*) uID

    appCode:(NSString*)appCode

    detail:(CollectTempalteEnd*)detail

    enabled:(NSNumber*)enabled

    hasResource:(NSNumber*)hasResource

    logsetUID:(NSString*)logsetUID

    logtopicUID:(NSString*)logtopicUID

    resourceType:(NSString*)resourceType

    serviceCode:(NSString*)serviceCode

    templateName:(NSString*)templateName

    templateUID:(NSString*)templateUID;
@end

@interface LogsDescribeCollectResourcesResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeCollectResourcesResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeCollectResourcesResult*) result;
@end

@interface LogsUpdateCollectResourcesRequest:JDCloudRequest

/// action
@property (strong,nonatomic,nonnull)  NSString*  action;
/// 采集实例列表（系统日志存在上限限制20）
@property (strong,nonatomic,nonnull)  NSArray<Resource*>*  resources;
/// 采集配置 UID
@property (strong,nonatomic,nonnull)  NSString*  collectInfoUID;
-(id) initWithRegion:(NSString *)regionId
action:(NSString*)action
resources:(NSArray<Resource*>*)resources
collectInfoUID:(NSString*)collectInfoUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
action:(NSString*)action
resources:(NSArray<Resource*>*)resources
collectInfoUID:(NSString*)collectInfoUID;

@end

@interface LogsCreateCollectInfoRequest:JDCloudRequest

/// 采集状态，0-禁用，1-启用
@property (strong,nonatomic,nonnull)  NSNumber*  enabled;
/// 日志来源，只能是 custom/jdcloud
@property (strong,nonatomic,nonnull)  NSString*  appCode;
/// 产品线,当日志来源为jdcloud时，必填
@property (strong,nonatomic,nonnull)  NSString*  serviceCode;
/// 采集实例类型, 只能是 all/part  当选择all时，传入的实例列表无效；custom类型的采集配置目前仅支持part方式，即用户指定实例列表；
@property (strong,nonatomic,nonnull)  NSString*  resourceType;
/// 采集实例列表：jdcloud类型最多添加20个资源；custom类型支持的资源数量不限；
@property (strong,nonatomic,nonnull)  NSArray<Resource*>*  resources;
/// 日志类型。当appcode为jdcloud时为必填
@property (strong,nonatomic,nonnull)  NSString*  templateUID;
/// 日志路径。当appcode为custom时为必填。目前仅支持对 Linux 云主机上的日志进行采集，路径支持通配符“*”和“？”，文件路径应符合 Linux 的文件路径规则
@property (strong,nonatomic,nonnull)  NSString*  logPath;
/// 日志文件名。当appcode为custom时为必填。日志文件名支持正则表达式。
@property (strong,nonatomic,nonnull)  NSString*  logFile;
/// 过滤器。设置过滤器后可根据用户设定的关键词采集部分日志，如仅采集 Error 的日志。目前最大允许5个。
@property (strong,nonatomic,nonnull)  NSArray<NSString*>*  logFilters;
/// 过滤器是否启用。当appcode为custom时必填
@property (strong,nonatomic,nonnull)  NSNumber*  filterEnabled;
/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
-(id) initWithRegion:(NSString *)regionId
enabled:(NSNumber*)enabled
appCode:(NSString*)appCode
serviceCode:(NSString*)serviceCode
resourceType:(NSString*)resourceType
resources:(NSArray<Resource*>*)resources
templateUID:(NSString*)templateUID
logPath:(NSString*)logPath
logFile:(NSString*)logFile
logFilters:(NSArray<NSString*>*)logFilters
filterEnabled:(NSNumber*)filterEnabled
logtopicUID:(NSString*)logtopicUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
enabled:(NSNumber*)enabled
appCode:(NSString*)appCode
serviceCode:(NSString*)serviceCode
resourceType:(NSString*)resourceType
resources:(NSArray<Resource*>*)resources
templateUID:(NSString*)templateUID
logPath:(NSString*)logPath
logFile:(NSString*)logFile
logFilters:(NSArray<NSString*>*)logFilters
filterEnabled:(NSNumber*)filterEnabled
logtopicUID:(NSString*)logtopicUID;

@end

@interface LogsDescribeCollectResourcesRequest:JDCloudRequest

/// 当前所在页，默认为1
@property (strong,nonatomic,nonnull)  NSNumber*  pageNumber;
/// 页面大小，默认为20；取值范围[1, 100]
@property (strong,nonatomic,nonnull)  NSNumber*  pageSize;
/// 采集配置 UID
@property (strong,nonatomic,nonnull)  NSString*  collectInfoUID;
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
collectInfoUID:(NSString*)collectInfoUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
collectInfoUID:(NSString*)collectInfoUID;

@end

@interface LogsDescribeCollectInfoResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeCollectInfoResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeCollectInfoResult*) result;
@end

@interface LogsCreateCollectInfoResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsCreateCollectInfoResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsCreateCollectInfoResult*) result;
@end

@interface LogsDeleteLogtopicResult : NSObject

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
@end

@interface LogsDeleteLogtopicResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDeleteLogtopicResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDeleteLogtopicResult*) result;
@end

@interface LogsDeleteLogtopicRequest:JDCloudRequest

/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题ID，多个日志主题ID以逗号分割
@property (strong,nonatomic,nonnull)  NSString*  logtopicUIDs;
-(id) initWithRegion:(NSString *)regionId
logsetUID:(NSString*)logsetUID
logtopicUIDs:(NSString*)logtopicUIDs;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
logsetUID:(NSString*)logsetUID
logtopicUIDs:(NSString*)logtopicUIDs;

@end

@interface LogsDescribeLogtopicResult : NSObject
/// UID
 @property (strong,nonatomic,nonnull)  NSString*  uID;
/// 日志来源,只在查询单个日志主题并且创建了采集配置时返回值
 @property (strong,nonatomic,nonnull)  NSString*  appCode;
/// 采集配置UID
 @property (strong,nonatomic,nonnull)  NSString*  collectInfoUID;
/// 创建时间
 @property (strong,nonatomic,nonnull)  NSString*  createTime;
/// 描述信息
 @property (strong,nonatomic,nonnull)  NSString*  descriptionValue;
/// 所属日志集名称
 @property (strong,nonatomic,nonnull)  NSString*  logsetName;
/// 所属日志集
 @property (strong,nonatomic,nonnull)  NSString*  logsetUID;
/// 日志主题名称
 @property (strong,nonatomic,nonnull)  NSString*  name;
/// 地域信息
 @property (strong,nonatomic,nonnull)  NSString*  region;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithUID:(NSString*) uID

    appCode:(NSString*)appCode

    collectInfoUID:(NSString*)collectInfoUID

    createTime:(NSString*)createTime

    descriptionValue:(NSString*)descriptionValue

    logsetName:(NSString*)logsetName

    logsetUID:(NSString*)logsetUID

    name:(NSString*)name

    region:(NSString*)region;
@end

@interface LogsUpdateLogtopicRequest:JDCloudRequest

/// 日志主题描述
@property (strong,nonatomic,nonnull)  NSString*  descriptionValue;
/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
-(id) initWithRegion:(NSString *)regionId
descriptionValue:(NSString*)descriptionValue
logtopicUID:(NSString*)logtopicUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
descriptionValue:(NSString*)descriptionValue
logtopicUID:(NSString*)logtopicUID;

@end

@interface LogsCreateLogtopicRequest:JDCloudRequest

/// 日志主题名称
@property (strong,nonatomic,nonnull)  NSString*  name;
/// 日志集描述
@property (strong,nonatomic,nonnull)  NSString*  descriptionValue;
/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
-(id) initWithRegion:(NSString *)regionId
name:(NSString*)name
descriptionValue:(NSString*)descriptionValue
logsetUID:(NSString*)logsetUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
name:(NSString*)name
descriptionValue:(NSString*)descriptionValue
logsetUID:(NSString*)logsetUID;

@end

@interface LogsUpdateLogtopicResult : NSObject

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
@end

@interface LogsUpdateLogtopicResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsUpdateLogtopicResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsUpdateLogtopicResult*) result;
@end

@interface LogsDescribeLogtopicRequest:JDCloudRequest

/// 日志主题 UID
@property (strong,nonatomic,nonnull)  NSString*  logtopicUID;
-(id) initWithRegion:(NSString *)regionId
logtopicUID:(NSString*)logtopicUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
logtopicUID:(NSString*)logtopicUID;

@end

@interface LogsDescribeLogtopicsRequest:JDCloudRequest

/// 当前所在页，默认为1
@property (strong,nonatomic,nonnull)  NSNumber*  pageNumber;
/// 页面大小，默认为20；取值范围[1, 100]
@property (strong,nonatomic,nonnull)  NSNumber*  pageSize;
/// 日志主题名称
@property (strong,nonatomic,nonnull)  NSString*  name;
/// 日志集 UID
@property (strong,nonatomic,nonnull)  NSString*  logsetUID;
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
name:(NSString*)name
logsetUID:(NSString*)logsetUID;

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
name:(NSString*)name
logsetUID:(NSString*)logsetUID;

@end

@interface LogsDescribeLogtopicsResult : NSObject
/// Data
 @property (strong,nonatomic,nonnull)  NSArray<LogtopicDetailEnd*>*  data;
/// 总页数
 @property (strong,nonatomic,nonnull)  NSNumber*  numberPages;
/// 总记录数
 @property (strong,nonatomic,nonnull)  NSNumber*  numberRecords;
/// 当前页码
 @property (strong,nonatomic,nonnull)  NSNumber*  pageNumber;
/// 分页大小
 @property (strong,nonatomic,nonnull)  NSNumber*  pageSize;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithData:(NSArray<LogtopicDetailEnd*>*) data

    numberPages:(NSNumber*)numberPages

    numberRecords:(NSNumber*)numberRecords

    pageNumber:(NSNumber*)pageNumber

    pageSize:(NSNumber*)pageSize;
@end

@interface LogsDescribeLogtopicsResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeLogtopicsResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeLogtopicsResult*) result;
@end

@interface LogsDescribeLogtopicResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsDescribeLogtopicResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsDescribeLogtopicResult*) result;
@end

@interface LogsCreateLogtopicResult : NSObject
/// UID
 @property (strong,nonatomic,nonnull)  NSString*  uID;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;
-(id) initWithUID:(NSString*) uID;
@end

@interface LogsCreateLogtopicResponse : NSObject

@property NSString* requestId;

@property ServiceError* error;

@property LogsCreateLogtopicResult* result;

-(NSMutableDictionary*) dictionary;

-(id) initWithDic:(NSDictionary*)dictionary;

-(id) initWithRequestId:(NSString*) requestId
        error:(ServiceError*) error
        result:(LogsCreateLogtopicResult*) result;
@end

#endif /* LogsApiModel_h */
