/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

操作列表
云解析OpenAPI操作列表接口

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/

#import <Foundation/Foundation.h>
#import <JDCloudOCSDKClouddnsservice/ClouddnsserviceApiModel.h>


@implementation ClouddnsserviceDelDomainRequest
-(id) initWithRegion:(NSString *)regionId
domainId:(NSNumber*)domainId { 
    self.regionId = regionId;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
domainId:(NSNumber*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceGetDomainsRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
domainName:(NSString*)domainName { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.domainName = domainName;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
domainName:(NSString*)domainName { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.domainName = domainName;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self domainName])
    {
        [result setValue:[self domainName] forKey:@"domainName"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.domainName = [dictionary objectForKey:@"domainName"];
    return self;
} 

@end
@implementation ClouddnsserviceGetDomainQueryTrafficResult
-(id) initWithTime:(NSArray<NSNumber*>*) time
        unit:(NSString*)unit
        traffic:(NSArray<NSNumber*>*)traffic { 
    self.time = time;               
    self.unit = unit;               
    self.traffic = traffic;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self time])
    {
        [result setValue:[self time] forKey:@"time"];
    }
    if([self unit])
    {
        [result setValue:[self unit] forKey:@"unit"];
    }
    if([self traffic])
    {
        [result setValue:[self traffic] forKey:@"traffic"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.time = [dictionary objectForKey:@"time"];
    self.unit = [dictionary objectForKey:@"unit"];
    self.traffic = [dictionary objectForKey:@"traffic"];
    return self;
} 

@end
@implementation ClouddnsserviceAddDomainRequest
-(id) initWithRegion:(NSString *)regionId
packId:(NSNumber*)packId
domainName:(NSString*)domainName
domainId:(NSNumber*)domainId
buyType:(NSNumber*)buyType
timeSpan:(NSNumber*)timeSpan
timeUnit:(NSNumber*)timeUnit
billingType:(NSNumber*)billingType { 
    self.regionId = regionId;
    self.packId = packId;
    self.domainName = domainName;
    self.domainId = domainId;
    self.buyType = buyType;
    self.timeSpan = timeSpan;
    self.timeUnit = timeUnit;
    self.billingType = billingType;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
packId:(NSNumber*)packId
domainName:(NSString*)domainName
domainId:(NSNumber*)domainId
buyType:(NSNumber*)buyType
timeSpan:(NSNumber*)timeSpan
timeUnit:(NSNumber*)timeUnit
billingType:(NSNumber*)billingType { 
    self.regionId = regionId;
    self.version = version;
    self.packId = packId;
    self.domainName = domainName;
    self.domainId = domainId;
    self.buyType = buyType;
    self.timeSpan = timeSpan;
    self.timeUnit = timeUnit;
    self.billingType = billingType;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self packId])
    {
        [result setValue:[self packId] forKey:@"packId"];
    }
    if([self domainName])
    {
        [result setValue:[self domainName] forKey:@"domainName"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    if([self buyType])
    {
        [result setValue:[self buyType] forKey:@"buyType"];
    }
    if([self timeSpan])
    {
        [result setValue:[self timeSpan] forKey:@"timeSpan"];
    }
    if([self timeUnit])
    {
        [result setValue:[self timeUnit] forKey:@"timeUnit"];
    }
    if([self billingType])
    {
        [result setValue:[self billingType] forKey:@"billingType"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.packId = [dictionary objectForKey:@"packId"];
    self.domainName = [dictionary objectForKey:@"domainName"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    self.buyType = [dictionary objectForKey:@"buyType"];
    self.timeSpan = [dictionary objectForKey:@"timeSpan"];
    self.timeUnit = [dictionary objectForKey:@"timeUnit"];
    self.billingType = [dictionary objectForKey:@"billingType"];
    return self;
} 

@end
@implementation ClouddnsserviceGetDomainQueryTrafficRequest
-(id) initWithRegion:(NSString *)regionId
domainName:(NSString*)domainName
start:(NSString*)start
end:(NSString*)end
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.domainName = domainName;
    self.start = start;
    self.end = end;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
domainName:(NSString*)domainName
start:(NSString*)start
end:(NSString*)end
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.domainName = domainName;
    self.start = start;
    self.end = end;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self domainName])
    {
        [result setValue:[self domainName] forKey:@"domainName"];
    }
    if([self start])
    {
        [result setValue:[self start] forKey:@"start"];
    }
    if([self end])
    {
        [result setValue:[self end] forKey:@"end"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.domainName = [dictionary objectForKey:@"domainName"];
    self.start = [dictionary objectForKey:@"start"];
    self.end = [dictionary objectForKey:@"end"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceGetDomainQueryCountResult
-(id) initWithTime:(NSArray<NSNumber*>*) time
        traffic:(NSArray<NSNumber*>*)traffic { 
    self.time = time;               
    self.traffic = traffic;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self time])
    {
        [result setValue:[self time] forKey:@"time"];
    }
    if([self traffic])
    {
        [result setValue:[self traffic] forKey:@"traffic"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.time = [dictionary objectForKey:@"time"];
    self.traffic = [dictionary objectForKey:@"traffic"];
    return self;
} 

@end
@implementation ClouddnsserviceUpdateDomainRequest
-(id) initWithRegion:(NSString *)regionId
domainName:(NSString*)domainName
idValue:(NSNumber*)idValue { 
    self.regionId = regionId;
    self.domainName = domainName;
    self.idValue = idValue;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
domainName:(NSString*)domainName
idValue:(NSNumber*)idValue { 
    self.regionId = regionId;
    self.version = version;
    self.domainName = domainName;
    self.idValue = idValue;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self domainName])
    {
        [result setValue:[self domainName] forKey:@"domainName"];
    }
    if([self idValue])
    {
        [result setValue:[self idValue] forKey:@"id"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.domainName = [dictionary objectForKey:@"domainName"];
    self.idValue = [dictionary objectForKey:@"id"];
    return self;
} 

@end
@implementation ClouddnsserviceGetDomainQueryCountRequest
-(id) initWithRegion:(NSString *)regionId
domainName:(NSString*)domainName
start:(NSString*)start
end:(NSString*)end
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.domainName = domainName;
    self.start = start;
    self.end = end;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
domainName:(NSString*)domainName
start:(NSString*)start
end:(NSString*)end
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.domainName = domainName;
    self.start = start;
    self.end = end;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self domainName])
    {
        [result setValue:[self domainName] forKey:@"domainName"];
    }
    if([self start])
    {
        [result setValue:[self start] forKey:@"start"];
    }
    if([self end])
    {
        [result setValue:[self end] forKey:@"end"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.domainName = [dictionary objectForKey:@"domainName"];
    self.start = [dictionary objectForKey:@"start"];
    self.end = [dictionary objectForKey:@"end"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceOperateMonitorRequest
-(id) initWithRegion:(NSString *)regionId
action:(NSString*)action
ids:(NSArray<NSNumber*>*)ids
switchTarget:(NSString*)switchTarget
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.action = action;
    self.ids = ids;
    self.switchTarget = switchTarget;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
action:(NSString*)action
ids:(NSArray<NSNumber*>*)ids
switchTarget:(NSString*)switchTarget
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.action = action;
    self.ids = ids;
    self.switchTarget = switchTarget;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self action])
    {
        [result setValue:[self action] forKey:@"action"];
    }
    if([self ids])
    {
        [result setValue:[self ids] forKey:@"ids"];
    }
    if([self switchTarget])
    {
        [result setValue:[self switchTarget] forKey:@"switchTarget"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.action = [dictionary objectForKey:@"action"];
    self.ids = [dictionary objectForKey:@"ids"];
    self.switchTarget = [dictionary objectForKey:@"switchTarget"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceGetMonitorRequest
-(id) initWithRegion:(NSString *)regionId
pageIndex:(NSNumber*)pageIndex
pageSize:(NSNumber*)pageSize
searchValue:(NSString*)searchValue
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.pageIndex = pageIndex;
    self.pageSize = pageSize;
    self.searchValue = searchValue;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageIndex:(NSNumber*)pageIndex
pageSize:(NSNumber*)pageSize
searchValue:(NSString*)searchValue
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.pageIndex = pageIndex;
    self.pageSize = pageSize;
    self.searchValue = searchValue;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageIndex])
    {
        [result setValue:[self pageIndex] forKey:@"pageIndex"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self searchValue])
    {
        [result setValue:[self searchValue] forKey:@"searchValue"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageIndex = [dictionary objectForKey:@"pageIndex"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.searchValue = [dictionary objectForKey:@"searchValue"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceGetMonitorAlarmInfoRequest
-(id) initWithRegion:(NSString *)regionId
pageIndex:(NSNumber*)pageIndex
pageSize:(NSNumber*)pageSize
searchValue:(NSString*)searchValue
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.pageIndex = pageIndex;
    self.pageSize = pageSize;
    self.searchValue = searchValue;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageIndex:(NSNumber*)pageIndex
pageSize:(NSNumber*)pageSize
searchValue:(NSString*)searchValue
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.pageIndex = pageIndex;
    self.pageSize = pageSize;
    self.searchValue = searchValue;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageIndex])
    {
        [result setValue:[self pageIndex] forKey:@"pageIndex"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self searchValue])
    {
        [result setValue:[self searchValue] forKey:@"searchValue"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageIndex = [dictionary objectForKey:@"pageIndex"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.searchValue = [dictionary objectForKey:@"searchValue"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceGetTargetsRequest
-(id) initWithRegion:(NSString *)regionId
subDomainName:(NSString*)subDomainName
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.subDomainName = subDomainName;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
subDomainName:(NSString*)subDomainName
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.subDomainName = subDomainName;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self subDomainName])
    {
        [result setValue:[self subDomainName] forKey:@"subDomainName"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.subDomainName = [dictionary objectForKey:@"subDomainName"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceAddMonitorRequest
-(id) initWithRegion:(NSString *)regionId
subDomainName:(NSString*)subDomainName
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.subDomainName = subDomainName;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
subDomainName:(NSString*)subDomainName
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.subDomainName = subDomainName;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self subDomainName])
    {
        [result setValue:[self subDomainName] forKey:@"subDomainName"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.subDomainName = [dictionary objectForKey:@"subDomainName"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceGetTargetsResult
-(id) initWithData:(NSArray<NSString*>*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[self data] forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [dictionary objectForKey:@"data"];
    return self;
} 

@end
@implementation ClouddnsserviceAddMonitorTargetRequest
-(id) initWithRegion:(NSString *)regionId
subDomainName:(NSString*)subDomainName
targets:(NSArray<NSString*>*)targets
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.subDomainName = subDomainName;
    self.targets = targets;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
subDomainName:(NSString*)subDomainName
targets:(NSArray<NSString*>*)targets
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.subDomainName = subDomainName;
    self.targets = targets;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self subDomainName])
    {
        [result setValue:[self subDomainName] forKey:@"subDomainName"];
    }
    if([self targets])
    {
        [result setValue:[self targets] forKey:@"targets"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.subDomainName = [dictionary objectForKey:@"subDomainName"];
    self.targets = [dictionary objectForKey:@"targets"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceBatchSetDnsResolveResult
-(id) initWithData:(NSArray<NSString*>*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[self data] forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [dictionary objectForKey:@"data"];
    return self;
} 

@end
@implementation ClouddnsserviceGetViewTreeRequest
-(id) initWithRegion:(NSString *)regionId
loadMode:(NSNumber*)loadMode
packId:(NSNumber*)packId
viewId:(NSNumber*)viewId
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.loadMode = loadMode;
    self.packId = packId;
    self.viewId = viewId;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
loadMode:(NSNumber*)loadMode
packId:(NSNumber*)packId
viewId:(NSNumber*)viewId
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.loadMode = loadMode;
    self.packId = packId;
    self.viewId = viewId;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self loadMode])
    {
        [result setValue:[self loadMode] forKey:@"loadMode"];
    }
    if([self packId])
    {
        [result setValue:[self packId] forKey:@"packId"];
    }
    if([self viewId])
    {
        [result setValue:[self viewId] forKey:@"viewId"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.loadMode = [dictionary objectForKey:@"loadMode"];
    self.packId = [dictionary objectForKey:@"packId"];
    self.viewId = [dictionary objectForKey:@"viewId"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceSearchRRRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceOperateRRRequest
-(id) initWithRegion:(NSString *)regionId
ids:(NSArray<NSNumber*>*)ids
action:(NSString*)action
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.ids = ids;
    self.action = action;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
ids:(NSArray<NSNumber*>*)ids
action:(NSString*)action
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.ids = ids;
    self.action = action;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self ids])
    {
        [result setValue:[self ids] forKey:@"ids"];
    }
    if([self action])
    {
        [result setValue:[self action] forKey:@"action"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.ids = [dictionary objectForKey:@"ids"];
    self.action = [dictionary objectForKey:@"action"];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceGetUserViewRequest
-(id) initWithRegion:(NSString *)regionId
domainId:(NSNumber*)domainId
viewId:(NSNumber*)viewId
viewName:(NSString*)viewName
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.domainId = domainId;
    self.viewId = viewId;
    self.viewName = viewName;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
domainId:(NSNumber*)domainId
viewId:(NSNumber*)viewId
viewName:(NSString*)viewName
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.version = version;
    self.domainId = domainId;
    self.viewId = viewId;
    self.viewName = viewName;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    if([self viewId])
    {
        [result setValue:[self viewId] forKey:@"viewId"];
    }
    if([self viewName])
    {
        [result setValue:[self viewName] forKey:@"viewName"];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.domainId = [dictionary objectForKey:@"domainId"];
    self.viewId = [dictionary objectForKey:@"viewId"];
    self.viewName = [dictionary objectForKey:@"viewName"];
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    return self;
} 

@end
@implementation ClouddnsserviceGetUserViewIPResult
-(id) initWithDataList:(NSArray<NSString*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
        [result setValue:[self dataList] forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.dataList = [dictionary objectForKey:@"dataList"];
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
@implementation ClouddnsserviceGetUserViewIPRequest
-(id) initWithRegion:(NSString *)regionId
domainId:(NSNumber*)domainId
viewId:(NSNumber*)viewId
viewName:(NSString*)viewName
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.domainId = domainId;
    self.viewId = viewId;
    self.viewName = viewName;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
domainId:(NSNumber*)domainId
viewId:(NSNumber*)viewId
viewName:(NSString*)viewName
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.version = version;
    self.domainId = domainId;
    self.viewId = viewId;
    self.viewName = viewName;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    if([self viewId])
    {
        [result setValue:[self viewId] forKey:@"viewId"];
    }
    if([self viewName])
    {
        [result setValue:[self viewName] forKey:@"viewName"];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.domainId = [dictionary objectForKey:@"domainId"];
    self.viewId = [dictionary objectForKey:@"viewId"];
    self.viewName = [dictionary objectForKey:@"viewName"];
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    return self;
} 

@end
@implementation ClouddnsserviceGetActionLogRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
startTime:(NSString*)startTime
endTime:(NSString*)endTime
keyWord:(NSString*)keyWord
success:(NSNumber*)success
type:(NSNumber*)type { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.startTime = startTime;
    self.endTime = endTime;
    self.keyWord = keyWord;
    self.success = success;
    self.type = type;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
startTime:(NSString*)startTime
endTime:(NSString*)endTime
keyWord:(NSString*)keyWord
success:(NSNumber*)success
type:(NSNumber*)type { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.startTime = startTime;
    self.endTime = endTime;
    self.keyWord = keyWord;
    self.success = success;
    self.type = type;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self startTime])
    {
        [result setValue:[self startTime] forKey:@"startTime"];
    }
    if([self endTime])
    {
        [result setValue:[self endTime] forKey:@"endTime"];
    }
    if([self keyWord])
    {
        [result setValue:[self keyWord] forKey:@"keyWord"];
    }
    if([self success])
    {
        [result setValue:[self success] forKey:@"success"];
    }
    if([self type])
    {
        [result setValue:[self type] forKey:@"type"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.startTime = [dictionary objectForKey:@"startTime"];
    self.endTime = [dictionary objectForKey:@"endTime"];
    self.keyWord = [dictionary objectForKey:@"keyWord"];
    self.success = [dictionary objectForKey:@"success"];
    self.type = [dictionary objectForKey:@"type"];
    return self;
} 

@end
  
@implementation ClouddnsserviceGetDomainQueryCountResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetDomainQueryCountResult* result = [[ClouddnsserviceGetDomainQueryCountResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetDomainQueryCountResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceAddDomainResult
-(id) initWithData:(DomainAdded*) data
        order:(NSString*)order { 
    self.data = data;               
    self.order = order;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    if([self order])
    {
        [result setValue:[self order] forKey:@"order"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[DomainAdded alloc]initWithDic:[dictionary objectForKey:@"data"]];
    self.order = [dictionary objectForKey:@"order"];
    return self;
} 

@end
@implementation ClouddnsserviceDelDomainResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
@implementation ClouddnsserviceUpdateDomainResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation ClouddnsserviceUpdateDomainResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceUpdateDomainResult* result = [[ClouddnsserviceUpdateDomainResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceUpdateDomainResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceGetDomainsResult
-(id) initWithDataList:(NSArray<Domain*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            Domain* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        Domain* item = [[Domain alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation ClouddnsserviceGetDomainQueryTrafficResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetDomainQueryTrafficResult* result = [[ClouddnsserviceGetDomainQueryTrafficResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetDomainQueryTrafficResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation ClouddnsserviceAddDomainResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceAddDomainResult* result = [[ClouddnsserviceAddDomainResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceAddDomainResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation ClouddnsserviceDelDomainResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceDelDomainResult* result = [[ClouddnsserviceDelDomainResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceDelDomainResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation ClouddnsserviceGetDomainsResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetDomainsResult* result = [[ClouddnsserviceGetDomainsResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetDomainsResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceAddMonitorResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation ClouddnsserviceAddMonitorResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceAddMonitorResult* result = [[ClouddnsserviceAddMonitorResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceAddMonitorResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceUpdateMonitorRequest
-(id) initWithRegion:(NSString *)regionId
updateMonitor:(UpdateMonitor*)updateMonitor
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.updateMonitor = updateMonitor;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
updateMonitor:(UpdateMonitor*)updateMonitor
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.updateMonitor = updateMonitor;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self updateMonitor])
    {
        [result setValue:[[self updateMonitor] dictionary]forKey:@"updateMonitor"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.updateMonitor = [[UpdateMonitor alloc]initWithDic:[dictionary objectForKey:@"updateMonitor"]];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceAddMonitorTargetResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation ClouddnsserviceAddMonitorTargetResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceAddMonitorTargetResult* result = [[ClouddnsserviceAddMonitorTargetResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceAddMonitorTargetResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceGetMonitorResult
-(id) initWithCurrentCount:(NSNumber*) currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage
        dataList:(NSArray<Monitor*>*)dataList { 
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    self.dataList = dataList;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            Monitor* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        Monitor* item = [[Monitor alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    return self;
} 

@end
  
@implementation ClouddnsserviceGetMonitorResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetMonitorResult* result = [[ClouddnsserviceGetMonitorResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetMonitorResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceOperateMonitorResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation ClouddnsserviceGetTargetsResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetTargetsResult* result = [[ClouddnsserviceGetTargetsResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetTargetsResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceUpdateMonitorResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation ClouddnsserviceUpdateMonitorResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceUpdateMonitorResult* result = [[ClouddnsserviceUpdateMonitorResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceUpdateMonitorResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceGetMonitorAlarmInfoResult
-(id) initWithCurrentCount:(NSNumber*) currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage
        dataList:(NSArray<MonitorAlarmInfo*>*)dataList { 
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    self.dataList = dataList;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            MonitorAlarmInfo* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        MonitorAlarmInfo* item = [[MonitorAlarmInfo alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    return self;
} 

@end
  
@implementation ClouddnsserviceGetMonitorAlarmInfoResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetMonitorAlarmInfoResult* result = [[ClouddnsserviceGetMonitorAlarmInfoResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetMonitorAlarmInfoResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation ClouddnsserviceOperateMonitorResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceOperateMonitorResult* result = [[ClouddnsserviceOperateMonitorResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceOperateMonitorResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceUpdateRRResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
@implementation ClouddnsserviceAddRRRequest
-(id) initWithRegion:(NSString *)regionId
req:(AddRR*)req
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.req = req;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
req:(AddRR*)req
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.req = req;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self req])
    {
        [result setValue:[[self req] dictionary]forKey:@"req"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.req = [[AddRR alloc]initWithDic:[dictionary objectForKey:@"req"]];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
@implementation ClouddnsserviceAddRRResult
-(id) initWithDataList:(RR*) dataList { 
    self.dataList = dataList;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
        [result setValue:[[self dataList] dictionary]forKey:@"dataList"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.dataList = [[RR alloc]initWithDic:[dictionary objectForKey:@"dataList"]];
    return self;
} 

@end
  
@implementation ClouddnsserviceAddRRResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceAddRRResult* result = [[ClouddnsserviceAddRRResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceAddRRResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceGetViewTreeResult
-(id) initWithData:(NSArray<ViewTree*>*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self data] count]; i++) {
            ViewTree* item = [[self data] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataArray = [dictionary objectForKey:@"data"];
    if(dataArray&&![dataArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataArray count];i++)
        {
        ViewTree* item = [[ViewTree alloc]initWithDic:[dataArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.data = propertyArray;
    }
    return self;
} 

@end
  
@implementation ClouddnsserviceGetViewTreeResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetViewTreeResult* result = [[ClouddnsserviceGetViewTreeResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetViewTreeResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceSearchRRResult
-(id) initWithDataList:(NSArray<RR*>*) dataList
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage
        currentCount:(NSNumber*)currentCount { 
    self.dataList = dataList;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    self.currentCount = currentCount;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            RR* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        RR* item = [[RR alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    return self;
} 

@end
  
@implementation ClouddnsserviceSearchRRResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceSearchRRResult* result = [[ClouddnsserviceSearchRRResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceSearchRRResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation ClouddnsserviceBatchSetDnsResolveResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceBatchSetDnsResolveResult* result = [[ClouddnsserviceBatchSetDnsResolveResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceBatchSetDnsResolveResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceUpdateRRRequest
-(id) initWithRegion:(NSString *)regionId
req:(UpdateRR*)req
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.req = req;
    self.domainId = domainId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
req:(UpdateRR*)req
domainId:(NSString*)domainId { 
    self.regionId = regionId;
    self.version = version;
    self.req = req;
    self.domainId = domainId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self req])
    {
        [result setValue:[[self req] dictionary]forKey:@"req"];
    }
    if([self domainId])
    {
        [result setValue:[self domainId] forKey:@"domainId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.req = [[UpdateRR alloc]initWithDic:[dictionary objectForKey:@"req"]];
    self.domainId = [dictionary objectForKey:@"domainId"];
    return self;
} 

@end
  
@implementation ClouddnsserviceUpdateRRResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceUpdateRRResult* result = [[ClouddnsserviceUpdateRRResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceUpdateRRResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceBatchSetDnsResolveRequest
-(id) initWithRegion:(NSString *)regionId
req:(NSArray<BatchSetDNS*>*)req { 
    self.regionId = regionId;
    self.req = req;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
req:(NSArray<BatchSetDNS*>*)req { 
    self.regionId = regionId;
    self.version = version;
    self.req = req;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self req])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self req] count]; i++) {
            BatchSetDNS* item = [[self req] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"req"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* reqArray = [dictionary objectForKey:@"req"];
    if(reqArray&&![reqArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [reqArray count];i++)
        {
        BatchSetDNS* item = [[BatchSetDNS alloc]initWithDic:[reqArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.req = propertyArray;
    }
    return self;
} 

@end
@implementation ClouddnsserviceOperateRRResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation ClouddnsserviceOperateRRResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceOperateRRResult* result = [[ClouddnsserviceOperateRRResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceOperateRRResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceAddUserViewIPResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
@implementation ClouddnsserviceAddUserViewResult
-(id) initWithData:(Userview*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[Userview alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
@implementation ClouddnsserviceAddUserViewIPRequest
-(id) initWithRegion:(NSString *)regionId
req:(AddViewIP*)req { 
    self.regionId = regionId;
    self.req = req;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
req:(AddViewIP*)req { 
    self.regionId = regionId;
    self.version = version;
    self.req = req;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self req])
    {
        [result setValue:[[self req] dictionary]forKey:@"req"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.req = [[AddViewIP alloc]initWithDic:[dictionary objectForKey:@"req"]];
    return self;
} 

@end
@implementation ClouddnsserviceDelUserViewIPResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation ClouddnsserviceDelUserViewIPResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceDelUserViewIPResult* result = [[ClouddnsserviceDelUserViewIPResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceDelUserViewIPResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation ClouddnsserviceGetUserViewIPResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetUserViewIPResult* result = [[ClouddnsserviceGetUserViewIPResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetUserViewIPResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceDelUserViewRequest
-(id) initWithRegion:(NSString *)regionId
req:(DelView*)req { 
    self.regionId = regionId;
    self.req = req;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
req:(DelView*)req { 
    self.regionId = regionId;
    self.version = version;
    self.req = req;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self req])
    {
        [result setValue:[[self req] dictionary]forKey:@"req"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.req = [[DelView alloc]initWithDic:[dictionary objectForKey:@"req"]];
    return self;
} 

@end
@implementation ClouddnsserviceDelUserViewResult
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation ClouddnsserviceDelUserViewResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceDelUserViewResult* result = [[ClouddnsserviceDelUserViewResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceDelUserViewResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceAddUserViewRequest
-(id) initWithRegion:(NSString *)regionId
req:(AddView*)req { 
    self.regionId = regionId;
    self.req = req;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
req:(AddView*)req { 
    self.regionId = regionId;
    self.version = version;
    self.req = req;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self req])
    {
        [result setValue:[[self req] dictionary]forKey:@"req"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.req = [[AddView alloc]initWithDic:[dictionary objectForKey:@"req"]];
    return self;
} 

@end
@implementation ClouddnsserviceGetUserViewResult
-(id) initWithDataList:(NSArray<UserViewInput*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            UserViewInput* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        UserViewInput* item = [[UserViewInput alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation ClouddnsserviceGetUserViewResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetUserViewResult* result = [[ClouddnsserviceGetUserViewResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetUserViewResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceDelUserViewIPRequest
-(id) initWithRegion:(NSString *)regionId
req:(DelViewIP*)req { 
    self.regionId = regionId;
    self.req = req;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
req:(DelViewIP*)req { 
    self.regionId = regionId;
    self.version = version;
    self.req = req;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self req])
    {
        [result setValue:[[self req] dictionary]forKey:@"req"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.req = [[DelViewIP alloc]initWithDic:[dictionary objectForKey:@"req"]];
    return self;
} 

@end
  
@implementation ClouddnsserviceAddUserViewResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceAddUserViewResult* result = [[ClouddnsserviceAddUserViewResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceAddUserViewResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation ClouddnsserviceAddUserViewIPResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceAddUserViewIPResult* result = [[ClouddnsserviceAddUserViewIPResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceAddUserViewIPResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation ClouddnsserviceGetActionLogResult
-(id) initWithDataList:(NSArray<Actionlog*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            Actionlog* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        Actionlog* item = [[Actionlog alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation ClouddnsserviceGetActionLogResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
ClouddnsserviceGetActionLogResult* result = [[ClouddnsserviceGetActionLogResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(ClouddnsserviceGetActionLogResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
 
