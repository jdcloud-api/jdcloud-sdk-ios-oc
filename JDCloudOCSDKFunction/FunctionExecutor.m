
/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

京东云function接口
function相关接口

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/

#import <Foundation/Foundation.h>

#import <JDCloudOCSDKFunction/FunctionExecutor.h>


/// 获取版本详情
@implementation  FunctionGetVersionExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/functions/{functionName}/versions/{versionName}";
    return self;
}
@end

/// 创建别名
@implementation  FunctionCreateAliasExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/functions/{functionName}/aliases";
    return self;
}
@end

/// 创建函数
@implementation  FunctionCreateFunctionExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/functions";
    return self;
}
@end

/// 删除别名
@implementation  FunctionDeleteAliasExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/functions/{functionName}/aliases/{aliasName}";
    return self;
}
@end

/// 创建版本
@implementation  FunctionCreateVersionExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/functions/{functionName}/versions";
    return self;
}
@end

/// 查询函数详情
@implementation  FunctionGetFunctionExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/functions/{functionName}";
    return self;
}
@end

/// 查询版本列表
@implementation  FunctionListVersionExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/functions/{functionName}/versions";
    return self;
}
@end

/// 控制台测试执行函数
@implementation  FunctionInvokeExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/functions/{functionName}/versions/{versionName}:invoke";
    return self;
}
@end

/// 更新别名
@implementation  FunctionUpdateAliasExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"PUT";
    self.url = @"/regions/{regionId}/functions/{functionName}/aliases/{aliasName}";
    return self;
}
@end

/// 异步测试执行函数
@implementation  FunctionAsyncInvokeExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/functions/{functionName}/versions/{versionName}:asyncinvoke";
    return self;
}
@end

/// 获取触发器详情
@implementation  FunctionGetTriggerExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/functions/{functionName}/versions/{versionName}:gettrigger";
    return self;
}
@end

/// 删除版本
@implementation  FunctionDeleteVersionExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/functions/{functionName}/versions/{versionName}";
    return self;
}
@end

/// 删除函数
@implementation  FunctionDeleteFunctionExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/functions/{functionName}";
    return self;
}
@end

/// 查询函数列表
@implementation  FunctionListFunctionExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/functions";
    return self;
}
@end

/// 查询别名列表
@implementation  FunctionListAliasExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/functions/{functionName}/aliases";
    return self;
}
@end

/// 查询别名详情
@implementation  FunctionGetAliasExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/functions/{functionName}/aliases/{aliasName}";
    return self;
}
@end

/// 更新函数
@implementation  FunctionUpdateFunctionExecutor

-(id) initWithJDCloudClient:(FunctionClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"PUT";
    self.url = @"/regions/{regionId}/functions/{functionName}";
    return self;
}
@end
