/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

oss openapi
oss openapi

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/


#ifndef OssopenapiClient_h
#define OssopenapiClient_h


#import <JDCloudOCSDKCore/JDCloudOCSDKCore.h>
#import <JDCloudOCSDKOssopenapi/OssopenapiApiModel.h>

@interface OssopenapiClient : NSObject<JDCloudClient>{
    @private
    NSString* _userAgent;
    NSString* _serviceName;
    NSString* _version;
    }

    @property (strong,readonly,nonatomic) NSString* userAgent;

    @property (strong,readonly,nonatomic) NSString* serviceName;

    @property (strong,readonly,nonatomic) NSString* version;

    @property (strong,nonatomic) NSString* contentType;

    @property (strong,nonatomic) Credential* credential;

    @property (strong,nonatomic) SDKEnvironment* sdkEnvironment;

    @property (strong,nonatomic) NSMutableDictionary* customHeader;

    @property  (strong,nonatomic) NSString* httpRequestProtocol;

    -(void) addCustomerHeaderWithKey:(NSString*) key
    value:(NSString*) value;

    -(id)initWithGlobalConfig;

    -(id)initWithCredential:(Credential*)credential
    sdkEnvironment:(SDKEnvironment*)sdkEnvironment;
    -(id)initWithCredential:(Credential*)credential;
    /**
    getSingleBucketCapacity sync request
    @param getSingleBucketCapacityRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `getSingleBucketCapacityResponse` the request response data model
    */
    -(NSDictionary*) getSingleBucketCapacitySyncWithRequest:(OssopenapiGetSingleBucketCapacityRequest*) getSingleBucketCapacityRequest;

    -(void)getSingleBucketCapacityAsyncWithRequest:(OssopenapiGetSingleBucketCapacityRequest*) getSingleBucketCapacityRequest
    completionHandler:(void(^)(int statusCode,OssopenapiGetSingleBucketCapacityResponse* _Nullable getSingleBucketCapacityResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    getBackSourceConfiguration sync request
    @param getBackSourceConfigurationRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `getBackSourceConfigurationResponse` the request response data model
    */
    -(NSDictionary*) getBackSourceConfigurationSyncWithRequest:(OssopenapiGetBackSourceConfigurationRequest*) getBackSourceConfigurationRequest;

    -(void)getBackSourceConfigurationAsyncWithRequest:(OssopenapiGetBackSourceConfigurationRequest*) getBackSourceConfigurationRequest
    completionHandler:(void(^)(int statusCode,OssopenapiGetBackSourceConfigurationResponse* _Nullable getBackSourceConfigurationResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    putBackSourceConfiguration sync request
    @param putBackSourceConfigurationRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `putBackSourceConfigurationResponse` the request response data model
    */
    -(NSDictionary*) putBackSourceConfigurationSyncWithRequest:(OssopenapiPutBackSourceConfigurationRequest*) putBackSourceConfigurationRequest;

    -(void)putBackSourceConfigurationAsyncWithRequest:(OssopenapiPutBackSourceConfigurationRequest*) putBackSourceConfigurationRequest
    completionHandler:(void(^)(int statusCode,OssopenapiPutBackSourceConfigurationResponse* _Nullable putBackSourceConfigurationResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteBackSourceConfiguration sync request
    @param deleteBackSourceConfigurationRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteBackSourceConfigurationResponse` the request response data model
    */
    -(NSDictionary*) deleteBackSourceConfigurationSyncWithRequest:(OssopenapiDeleteBackSourceConfigurationRequest*) deleteBackSourceConfigurationRequest;

    -(void)deleteBackSourceConfigurationAsyncWithRequest:(OssopenapiDeleteBackSourceConfigurationRequest*) deleteBackSourceConfigurationRequest
    completionHandler:(void(^)(int statusCode,OssopenapiDeleteBackSourceConfigurationResponse* _Nullable deleteBackSourceConfigurationResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    /**
    ossopenapi common sync request
    @param  jdcloudDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
    */
    -(NSDictionary*) ossopenapiCommonSyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                           url:(NSString*) url
                                        method:(NSString*) method;

    -(void)ossopenapiCommonAsyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                  url:(NSString*) url
                               method:(NSString*) method
                    completionHandler:(void(^)(int statusCode, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    @end


    #endif /* OssopenapiClient_h */
