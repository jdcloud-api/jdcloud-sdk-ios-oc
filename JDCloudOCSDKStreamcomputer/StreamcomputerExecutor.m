
/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

JDCLOUD流计算API
提供流计算操作的相关接口。

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/

#import <Foundation/Foundation.h>

#import <JDCloudOCSDKStreamcomputer/StreamcomputerExecutor.h>


/// 查询某个应用详情
@implementation  StreamcomputerQueryNamespaceDetailExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/namespaceDetail";
    return self;
}
@end

/// 查询指定作业详情
@implementation  StreamcomputerDescribeJobExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/job";
    return self;
}
@end

/// 查询指定输入
@implementation  StreamcomputerDescribeStorageExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/storage";
    return self;
}
@end

/// 删除作业
@implementation  StreamcomputerDeleteJobExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/job";
    return self;
}
@end

/// 添加或者更新job
@implementation  StreamcomputerAddOrUpdateJobExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/job";
    return self;
}
@end

/// 查询租户下的应用列表
@implementation  StreamcomputerQueryNamespacesExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/namespaces";
    return self;
}
@end

/// 运行job
@implementation  StreamcomputerStartJobExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/job:start";
    return self;
}
@end

/// 创建或者更新storage
@implementation  StreamcomputerAddOrUpdateStorageExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/storage";
    return self;
}
@end

/// 查询指定应用下的所有job
@implementation  StreamcomputerGetJobListExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/jobList";
    return self;
}
@end

/// 删除namespace,如果旗下关联有其他资源，不允许删除
@implementation  StreamcomputerDeleteNamespaceExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/namespace";
    return self;
}
@end

/// 停止作业运行job
@implementation  StreamcomputerStopJobExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/job:stop";
    return self;
}
@end

/// 创建namespace
@implementation  StreamcomputerCreateNamespaceExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/namespace";
    return self;
}
@end

/// 创建或者更新storage
@implementation  StreamcomputerGetStorageListExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/storageList";
    return self;
}
@end

/// 更新namespace
@implementation  StreamcomputerUpdateNamespaceExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"PUT";
    self.url = @"/regions/{regionId}/namespace";
    return self;
}
@end

/// 删除指定输入
@implementation  StreamcomputerDeleteStorageExecutor

-(id) initWithJDCloudClient:(StreamcomputerClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/storage";
    return self;
}
@end
