/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

IP Sets
IP 黑白名单库, 预定义的 IP 黑白名单绑定到转发规则的黑名单或白名单后生效

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/

#import <Foundation/Foundation.h>
#import <JDCloudOCSDKIpanti/IpantiApiModel.h>


@implementation IpantiDescribeCCProtectionRulesOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiEnableWebRuleBlackListRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiEnableWebRuleCCObserverModeResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeWebRuleBlackListUsageRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDeleteWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDisableWebRuleBlackListRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiModifyCCProtectionConfigOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeWhiteListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webWhiteListRuleId])
    {
        [result setValue:[self webWhiteListRuleId] forKey:@"webWhiteListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webWhiteListRuleId = [dictionary objectForKey:@"webWhiteListRuleId"];
    return self;
} 

@end
@implementation IpantiDisableWebRuleCCResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeWhiteListRulesOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDisableWebRuleWhiteListResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDisableBlackListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webBlackListRuleId])
    {
        [result setValue:[self webBlackListRuleId] forKey:@"webBlackListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webBlackListRuleId = [dictionary objectForKey:@"webBlackListRuleId"];
    return self;
} 

@end
@implementation IpantiEnableWebRuleCCObserverModeRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiModifyBlackListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDeleteBlackListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDeleteWhiteListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webWhiteListRuleId])
    {
        [result setValue:[self webWhiteListRuleId] forKey:@"webWhiteListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webWhiteListRuleId = [dictionary objectForKey:@"webWhiteListRuleId"];
    return self;
} 

@end
@implementation IpantiEnableWhiteListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webWhiteListRuleId])
    {
        [result setValue:[self webWhiteListRuleId] forKey:@"webWhiteListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webWhiteListRuleId = [dictionary objectForKey:@"webWhiteListRuleId"];
    return self;
} 

@end
@implementation IpantiDisableCCProtectionRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self ccProtectionRuleId])
    {
        [result setValue:[self ccProtectionRuleId] forKey:@"ccProtectionRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.ccProtectionRuleId = [dictionary objectForKey:@"ccProtectionRuleId"];
    return self;
} 

@end
@implementation IpantiCreateBlackListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeCCProtectionDefaultConfigOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiSwitchWebRuleOriginResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDeleteCCProtectionRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiEnableWebRuleWhiteListResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiCreateCCProtectionRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeCCProtectionRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self ccProtectionRuleId])
    {
        [result setValue:[self ccProtectionRuleId] forKey:@"ccProtectionRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.ccProtectionRuleId = [dictionary objectForKey:@"ccProtectionRuleId"];
    return self;
} 

@end
@implementation IpantiDisableBlackListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeWebRuleWhiteListUsageRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiEnableWhiteListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiEnableWebRuleWhiteListRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiSwitchWebRuleProtectRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiEnableWebRuleCCResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiCreateWhiteListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiCreateWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeWebRuleWhiteListUsageResult
-(id) initWithAllocatedNum:(NSNumber*) ipantiAllocatedNum
        activeNum:(NSNumber*)activeNum
        surplusAllocateNum:(NSNumber*)surplusAllocateNum
        maxAllocateNum:(NSNumber*)maxAllocateNum { 
    self.ipantiAllocatedNum = ipantiAllocatedNum;               
    self.activeNum = activeNum;               
    self.surplusAllocateNum = surplusAllocateNum;               
    self.maxAllocateNum = maxAllocateNum;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self ipantiAllocatedNum])
    {
        [result setValue:[self ipantiAllocatedNum] forKey:@"allocatedNum"];
    }
    if([self activeNum])
    {
        [result setValue:[self activeNum] forKey:@"activeNum"];
    }
    if([self surplusAllocateNum])
    {
        [result setValue:[self surplusAllocateNum] forKey:@"surplusAllocateNum"];
    }
    if([self maxAllocateNum])
    {
        [result setValue:[self maxAllocateNum] forKey:@"maxAllocateNum"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.ipantiAllocatedNum = [dictionary objectForKey:@"allocatedNum"];
    self.activeNum = [dictionary objectForKey:@"activeNum"];
    self.surplusAllocateNum = [dictionary objectForKey:@"surplusAllocateNum"];
    self.maxAllocateNum = [dictionary objectForKey:@"maxAllocateNum"];
    return self;
} 

@end
@implementation IpantiDisableWebRuleBlackListResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiEnableCCProtectionRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self ccProtectionRuleId])
    {
        [result setValue:[self ccProtectionRuleId] forKey:@"ccProtectionRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.ccProtectionRuleId = [dictionary objectForKey:@"ccProtectionRuleId"];
    return self;
} 

@end
@implementation IpantiEnableWebRuleCCRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDeleteWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDeleteCCProtectionRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self ccProtectionRuleId])
    {
        [result setValue:[self ccProtectionRuleId] forKey:@"ccProtectionRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.ccProtectionRuleId = [dictionary objectForKey:@"ccProtectionRuleId"];
    return self;
} 

@end
@implementation IpantiEnableCCProtectionRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiSwitchWebRuleOriginRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDisableWhiteListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDisableWebRuleCCRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDeleteWhiteListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeWebRulesRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
searchType:(NSString*)searchType
searchValue:(NSString*)searchValue
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.searchType = searchType;
    self.searchValue = searchValue;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
searchType:(NSString*)searchType
searchValue:(NSString*)searchValue
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.searchType = searchType;
    self.searchValue = searchValue;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self searchType])
    {
        [result setValue:[self searchType] forKey:@"searchType"];
    }
    if([self searchValue])
    {
        [result setValue:[self searchValue] forKey:@"searchValue"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.searchType = [dictionary objectForKey:@"searchType"];
    self.searchValue = [dictionary objectForKey:@"searchValue"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDisableWebRuleWhiteListRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiModifyWhiteListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeCCProtectionConfigOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiModifyCertInfoResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDisableWebRuleCCObserverModeResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDeleteBlackListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webBlackListRuleId])
    {
        [result setValue:[self webBlackListRuleId] forKey:@"webBlackListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webBlackListRuleId = [dictionary objectForKey:@"webBlackListRuleId"];
    return self;
} 

@end
@implementation IpantiSwitchWebRuleProtectResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiModifyCCProtectionRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeBlackListRulesOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiEnableWebRuleBlackListResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDisableCCProtectionRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiEnableBlackListRuleOfWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiModifyWebRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiEnableBlackListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webBlackListRuleId])
    {
        [result setValue:[self webBlackListRuleId] forKey:@"webBlackListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webBlackListRuleId = [dictionary objectForKey:@"webBlackListRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeBlackListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webBlackListRuleId])
    {
        [result setValue:[self webBlackListRuleId] forKey:@"webBlackListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webBlackListRuleId = [dictionary objectForKey:@"webBlackListRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeWebRuleBlackListUsageResult
-(id) initWithAllocatedNum:(NSNumber*) ipantiAllocatedNum
        activeNum:(NSNumber*)activeNum
        surplusAllocateNum:(NSNumber*)surplusAllocateNum
        maxAllocateNum:(NSNumber*)maxAllocateNum { 
    self.ipantiAllocatedNum = ipantiAllocatedNum;               
    self.activeNum = activeNum;               
    self.surplusAllocateNum = surplusAllocateNum;               
    self.maxAllocateNum = maxAllocateNum;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self ipantiAllocatedNum])
    {
        [result setValue:[self ipantiAllocatedNum] forKey:@"allocatedNum"];
    }
    if([self activeNum])
    {
        [result setValue:[self activeNum] forKey:@"activeNum"];
    }
    if([self surplusAllocateNum])
    {
        [result setValue:[self surplusAllocateNum] forKey:@"surplusAllocateNum"];
    }
    if([self maxAllocateNum])
    {
        [result setValue:[self maxAllocateNum] forKey:@"maxAllocateNum"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.ipantiAllocatedNum = [dictionary objectForKey:@"allocatedNum"];
    self.activeNum = [dictionary objectForKey:@"activeNum"];
    self.surplusAllocateNum = [dictionary objectForKey:@"surplusAllocateNum"];
    self.maxAllocateNum = [dictionary objectForKey:@"maxAllocateNum"];
    return self;
} 

@end
@implementation IpantiDisableWhiteListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webWhiteListRuleId])
    {
        [result setValue:[self webWhiteListRuleId] forKey:@"webWhiteListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webWhiteListRuleId = [dictionary objectForKey:@"webWhiteListRuleId"];
    return self;
} 

@end
@implementation IpantiDisableWebRuleCCObserverModeRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeForwardRulesRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
searchType:(NSString*)searchType
searchValue:(NSString*)searchValue
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.searchType = searchType;
    self.searchValue = searchValue;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
searchType:(NSString*)searchType
searchValue:(NSString*)searchValue
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.searchType = searchType;
    self.searchValue = searchValue;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self searchType])
    {
        [result setValue:[self searchType] forKey:@"searchType"];
    }
    if([self searchValue])
    {
        [result setValue:[self searchValue] forKey:@"searchValue"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.searchType = [dictionary objectForKey:@"searchType"];
    self.searchValue = [dictionary objectForKey:@"searchValue"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiModifyForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeWhiteListRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiEnableWhiteListRuleOfForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiEnableBlackListRuleOfForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiModifyProtectionRuleOfForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiEnableWhiteListRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiEnableBlackListRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiDeleteForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiSwitchForwardRuleOriginRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiSwitchForwardRuleOriginResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiCreateForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiSwitchForwardRuleProtectRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeBlackListRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiSwitchForwardRuleProtectResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiModifyBlackListRuleOfForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDeleteForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiModifyWhiteListRuleOfForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeProtectionRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiDisableWhiteListRuleOfForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDisableBlackListRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiDisableBlackListRuleOfForwardRuleResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDisableWhiteListRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeCCAttackLogDetailsRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSString*)instanceId
subDomain:(NSArray<NSString*>*)subDomain
attackId:(NSString*)attackId { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    self.subDomain = subDomain;
    self.attackId = attackId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSString*)instanceId
subDomain:(NSArray<NSString*>*)subDomain
attackId:(NSString*)attackId { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    self.subDomain = subDomain;
    self.attackId = attackId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self startTime])
    {
        [result setValue:[self startTime] forKey:@"startTime"];
    }
    if([self endTime])
    {
        [result setValue:[self endTime] forKey:@"endTime"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self subDomain])
    {
        [result setValue:[self subDomain] forKey:@"subDomain"];
    }
    if([self attackId])
    {
        [result setValue:[self attackId] forKey:@"attackId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.startTime = [dictionary objectForKey:@"startTime"];
    self.endTime = [dictionary objectForKey:@"endTime"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.subDomain = [dictionary objectForKey:@"subDomain"];
    self.attackId = [dictionary objectForKey:@"attackId"];
    return self;
} 

@end
@implementation IpantiDescribeCCAttackLogsRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self startTime])
    {
        [result setValue:[self startTime] forKey:@"startTime"];
    }
    if([self endTime])
    {
        [result setValue:[self endTime] forKey:@"endTime"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.startTime = [dictionary objectForKey:@"startTime"];
    self.endTime = [dictionary objectForKey:@"endTime"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeAttackStatisticsRequest
-(id) initWithRegion:(NSString *)regionId
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId
type:(NSNumber*)type { 
    self.regionId = regionId;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    self.type = type;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId
type:(NSNumber*)type { 
    self.regionId = regionId;
    self.version = version;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    self.type = type;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self startTime])
    {
        [result setValue:[self startTime] forKey:@"startTime"];
    }
    if([self endTime])
    {
        [result setValue:[self endTime] forKey:@"endTime"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self type])
    {
        [result setValue:[self type] forKey:@"type"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.startTime = [dictionary objectForKey:@"startTime"];
    self.endTime = [dictionary objectForKey:@"endTime"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.type = [dictionary objectForKey:@"type"];
    return self;
} 

@end
@implementation IpantiDescribeAttackStatisticsResult
-(id) initWithFlow:(NSNumber*) flow
        count:(NSNumber*)count
        unit:(NSString*)unit { 
    self.flow = flow;               
    self.count = count;               
    self.unit = unit;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self flow])
    {
        [result setValue:[self flow] forKey:@"flow"];
    }
    if([self count])
    {
        [result setValue:[self count] forKey:@"count"];
    }
    if([self unit])
    {
        [result setValue:[self unit] forKey:@"unit"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.flow = [dictionary objectForKey:@"flow"];
    self.count = [dictionary objectForKey:@"count"];
    self.unit = [dictionary objectForKey:@"unit"];
    return self;
} 

@end
@implementation IpantiDescribeAttackTypeCountRequest
-(id) initWithRegion:(NSString *)regionId
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self startTime])
    {
        [result setValue:[self startTime] forKey:@"startTime"];
    }
    if([self endTime])
    {
        [result setValue:[self endTime] forKey:@"endTime"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.startTime = [dictionary objectForKey:@"startTime"];
    self.endTime = [dictionary objectForKey:@"endTime"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeDDoSAttackLogsRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self startTime])
    {
        [result setValue:[self startTime] forKey:@"startTime"];
    }
    if([self endTime])
    {
        [result setValue:[self endTime] forKey:@"endTime"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.startTime = [dictionary objectForKey:@"startTime"];
    self.endTime = [dictionary objectForKey:@"endTime"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeCpsIpListRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    return self;
} 

@end
@implementation IpantiCreateInstanceResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiCheckNameRequest
-(id) initWithRegion:(NSString *)regionId
name:(NSString*)name { 
    self.regionId = regionId;
    self.name = name;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
name:(NSString*)name { 
    self.regionId = regionId;
    self.version = version;
    self.name = name;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self name])
    {
        [result setValue:[self name] forKey:@"name"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.name = [dictionary objectForKey:@"name"];
    return self;
} 

@end
@implementation IpantiModifyInstanceNameResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiModifyAlarmConfigResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiModifyEPBResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeInstancesRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
name:(NSString*)name { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.name = name;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
name:(NSString*)name { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.name = name;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self name])
    {
        [result setValue:[self name] forKey:@"name"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.name = [dictionary objectForKey:@"name"];
    return self;
} 

@end
@implementation IpantiDescribeInstanceRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiCheckNameResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeVpcIpListRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    return self;
} 

@end
@implementation IpantiDescribeNameListRequest
-(id) initWithRegion:(NSString *)regionId
idValue:(NSString*)idValue
name:(NSString*)name
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.idValue = idValue;
    self.name = name;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
idValue:(NSString*)idValue
name:(NSString*)name
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize { 
    self.regionId = regionId;
    self.version = version;
    self.idValue = idValue;
    self.name = name;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self idValue])
    {
        [result setValue:[self idValue] forKey:@"id"];
    }
    if([self name])
    {
        [result setValue:[self name] forKey:@"name"];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.idValue = [dictionary objectForKey:@"id"];
    self.name = [dictionary objectForKey:@"name"];
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    return self;
} 

@end
@implementation IpantiDescribeAlarmConfigRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeFwdGraphResult
-(id) initWithForwardRecord:(NSArray<NSNumber*>*) forwardRecord
        time:(NSArray<NSString*>*)time
        unit:(NSString*)unit { 
    self.forwardRecord = forwardRecord;               
    self.time = time;               
    self.unit = unit;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self forwardRecord])
    {
        [result setValue:[self forwardRecord] forKey:@"forwardRecord"];
    }
    if([self time])
    {
        [result setValue:[self time] forKey:@"time"];
    }
    if([self unit])
    {
        [result setValue:[self unit] forKey:@"unit"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.forwardRecord = [dictionary objectForKey:@"forwardRecord"];
    self.time = [dictionary objectForKey:@"time"];
    self.unit = [dictionary objectForKey:@"unit"];
    return self;
} 

@end
@implementation IpantiDescribeCCGraphRequest
-(id) initWithRegion:(NSString *)regionId
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId
subDomain:(NSArray<NSString*>*)subDomain { 
    self.regionId = regionId;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    self.subDomain = subDomain;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId
subDomain:(NSArray<NSString*>*)subDomain { 
    self.regionId = regionId;
    self.version = version;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    self.subDomain = subDomain;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self startTime])
    {
        [result setValue:[self startTime] forKey:@"startTime"];
    }
    if([self endTime])
    {
        [result setValue:[self endTime] forKey:@"endTime"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self subDomain])
    {
        [result setValue:[self subDomain] forKey:@"subDomain"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.startTime = [dictionary objectForKey:@"startTime"];
    self.endTime = [dictionary objectForKey:@"endTime"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.subDomain = [dictionary objectForKey:@"subDomain"];
    return self;
} 

@end
@implementation IpantiDescribeFwdGraphRequest
-(id) initWithRegion:(NSString *)regionId
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self startTime])
    {
        [result setValue:[self startTime] forKey:@"startTime"];
    }
    if([self endTime])
    {
        [result setValue:[self endTime] forKey:@"endTime"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.startTime = [dictionary objectForKey:@"startTime"];
    self.endTime = [dictionary objectForKey:@"endTime"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeCCGraphResult
-(id) initWithPostProtect:(NSArray<NSNumber*>*) postProtect
        preProtect:(NSArray<NSNumber*>*)preProtect
        time:(NSArray<NSString*>*)time
        unit:(NSString*)unit { 
    self.postProtect = postProtect;               
    self.preProtect = preProtect;               
    self.time = time;               
    self.unit = unit;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self postProtect])
    {
        [result setValue:[self postProtect] forKey:@"postProtect"];
    }
    if([self preProtect])
    {
        [result setValue:[self preProtect] forKey:@"preProtect"];
    }
    if([self time])
    {
        [result setValue:[self time] forKey:@"time"];
    }
    if([self unit])
    {
        [result setValue:[self unit] forKey:@"unit"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.postProtect = [dictionary objectForKey:@"postProtect"];
    self.preProtect = [dictionary objectForKey:@"preProtect"];
    self.time = [dictionary objectForKey:@"time"];
    self.unit = [dictionary objectForKey:@"unit"];
    return self;
} 

@end
@implementation IpantiDescribeDDoSGraphResult
-(id) initWithPreProtect:(NSArray<NSNumber*>*) preProtect
        postProtect:(NSArray<NSNumber*>*)postProtect
        time:(NSArray<NSString*>*)time
        unit:(NSString*)unit { 
    self.preProtect = preProtect;               
    self.postProtect = postProtect;               
    self.time = time;               
    self.unit = unit;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self preProtect])
    {
        [result setValue:[self preProtect] forKey:@"preProtect"];
    }
    if([self postProtect])
    {
        [result setValue:[self postProtect] forKey:@"postProtect"];
    }
    if([self time])
    {
        [result setValue:[self time] forKey:@"time"];
    }
    if([self unit])
    {
        [result setValue:[self unit] forKey:@"unit"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.preProtect = [dictionary objectForKey:@"preProtect"];
    self.postProtect = [dictionary objectForKey:@"postProtect"];
    self.time = [dictionary objectForKey:@"time"];
    self.unit = [dictionary objectForKey:@"unit"];
    return self;
} 

@end
@implementation IpantiDescribeDDoSGraphRequest
-(id) initWithRegion:(NSString *)regionId
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
startTime:(NSString*)startTime
endTime:(NSString*)endTime
instanceId:(NSArray<NSString*>*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.startTime = startTime;
    self.endTime = endTime;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self startTime])
    {
        [result setValue:[self startTime] forKey:@"startTime"];
    }
    if([self endTime])
    {
        [result setValue:[self endTime] forKey:@"endTime"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.startTime = [dictionary objectForKey:@"startTime"];
    self.endTime = [dictionary objectForKey:@"endTime"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeIpSetRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
ipSetId:(NSString*)ipSetId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.ipSetId = ipSetId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
ipSetId:(NSString*)ipSetId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.ipSetId = ipSetId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self ipSetId])
    {
        [result setValue:[self ipSetId] forKey:@"ipSetId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.ipSetId = [dictionary objectForKey:@"ipSetId"];
    return self;
} 

@end
@implementation IpantiDescribeIpSetUsageRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeIpSetsRequest
-(id) initWithRegion:(NSString *)regionId
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
pageNumber:(NSNumber*)pageNumber
pageSize:(NSNumber*)pageSize
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.pageNumber = pageNumber;
    self.pageSize = pageSize;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self pageNumber])
    {
        [result setValue:[self pageNumber] forKey:@"pageNumber"];
    }
    if([self pageSize])
    {
        [result setValue:[self pageSize] forKey:@"pageSize"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.pageNumber = [dictionary objectForKey:@"pageNumber"];
    self.pageSize = [dictionary objectForKey:@"pageSize"];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDeleteIpSetRequest
-(id) initWithRegion:(NSString *)regionId
instanceId:(NSString*)instanceId
ipSetId:(NSString*)ipSetId { 
    self.regionId = regionId;
    self.instanceId = instanceId;
    self.ipSetId = ipSetId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceId:(NSString*)instanceId
ipSetId:(NSString*)ipSetId { 
    self.regionId = regionId;
    self.version = version;
    self.instanceId = instanceId;
    self.ipSetId = ipSetId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self ipSetId])
    {
        [result setValue:[self ipSetId] forKey:@"ipSetId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.ipSetId = [dictionary objectForKey:@"ipSetId"];
    return self;
} 

@end
@implementation IpantiCreateIpSetResult
-(id) initWithCode:(NSNumber*) code
        message:(NSString*)message { 
    self.code = code;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self code])
    {
        [result setValue:[self code] forKey:@"code"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.code = [dictionary objectForKey:@"code"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation IpantiDescribeIpSetUsageResult
-(id) initWithAllocatedNum:(NSNumber*) ipantiAllocatedNum
        surplusAllocateNum:(NSNumber*)surplusAllocateNum
        maxAllocateNum:(NSNumber*)maxAllocateNum { 
    self.ipantiAllocatedNum = ipantiAllocatedNum;               
    self.surplusAllocateNum = surplusAllocateNum;               
    self.maxAllocateNum = maxAllocateNum;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self ipantiAllocatedNum])
    {
        [result setValue:[self ipantiAllocatedNum] forKey:@"allocatedNum"];
    }
    if([self surplusAllocateNum])
    {
        [result setValue:[self surplusAllocateNum] forKey:@"surplusAllocateNum"];
    }
    if([self maxAllocateNum])
    {
        [result setValue:[self maxAllocateNum] forKey:@"maxAllocateNum"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.ipantiAllocatedNum = [dictionary objectForKey:@"allocatedNum"];
    self.surplusAllocateNum = [dictionary objectForKey:@"surplusAllocateNum"];
    self.maxAllocateNum = [dictionary objectForKey:@"maxAllocateNum"];
    return self;
} 

@end
@implementation IpantiCreateWhiteListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
webWhiteListRuleSpec:(WebWhiteListRuleSpec*)webWhiteListRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.webWhiteListRuleSpec = webWhiteListRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
webWhiteListRuleSpec:(WebWhiteListRuleSpec*)webWhiteListRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.webWhiteListRuleSpec = webWhiteListRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self webWhiteListRuleSpec])
    {
        [result setValue:[[self webWhiteListRuleSpec] dictionary]forKey:@"webWhiteListRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.webWhiteListRuleSpec = [[WebWhiteListRuleSpec alloc]initWithDic:[dictionary objectForKey:@"webWhiteListRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
  
@implementation IpantiEnableWebRuleCCObserverModeResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiEnableWebRuleCCObserverModeResult* result = [[IpantiEnableWebRuleCCObserverModeResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiEnableWebRuleCCObserverModeResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDisableWebRuleCCObserverModeResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDisableWebRuleCCObserverModeResult* result = [[IpantiDisableWebRuleCCObserverModeResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDisableWebRuleCCObserverModeResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiModifyCCProtectionConfigOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyCCProtectionConfigOfWebRuleResult* result = [[IpantiModifyCCProtectionConfigOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyCCProtectionConfigOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeWebRuleResult
-(id) initWithData:(WebRule*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[WebRule alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiEnableCCProtectionRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiEnableCCProtectionRuleOfWebRuleResult* result = [[IpantiEnableCCProtectionRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiEnableCCProtectionRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiCreateBlackListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
webBlackListRuleSpec:(WebBlackListRuleSpec*)webBlackListRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.webBlackListRuleSpec = webBlackListRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
webBlackListRuleSpec:(WebBlackListRuleSpec*)webBlackListRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.webBlackListRuleSpec = webBlackListRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self webBlackListRuleSpec])
    {
        [result setValue:[[self webBlackListRuleSpec] dictionary]forKey:@"webBlackListRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.webBlackListRuleSpec = [[WebBlackListRuleSpec alloc]initWithDic:[dictionary objectForKey:@"webBlackListRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeBlackListRuleOfWebRuleResult
-(id) initWithData:(WebBlackListRule*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[WebBlackListRule alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
@implementation IpantiCreateCCProtectionRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
ccProtectionRuleSpec:(CCProtectionRuleSpec*)ccProtectionRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.ccProtectionRuleSpec = ccProtectionRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
ccProtectionRuleSpec:(CCProtectionRuleSpec*)ccProtectionRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.ccProtectionRuleSpec = ccProtectionRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self ccProtectionRuleSpec])
    {
        [result setValue:[[self ccProtectionRuleSpec] dictionary]forKey:@"ccProtectionRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.ccProtectionRuleSpec = [[CCProtectionRuleSpec alloc]initWithDic:[dictionary objectForKey:@"ccProtectionRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeWhiteListRuleOfWebRuleResult
-(id) initWithData:(WebWhiteListRule*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[WebWhiteListRule alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiEnableWhiteListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiEnableWhiteListRuleOfWebRuleResult* result = [[IpantiEnableWhiteListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiEnableWhiteListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeWebRulesResult
-(id) initWithDataList:(NSArray<WebRule*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            WebRule* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        WebRule* item = [[WebRule alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiDescribeWebRulesResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeWebRulesResult* result = [[IpantiDescribeWebRulesResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeWebRulesResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiModifyCCProtectionRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
ccProtectionRuleSpec:(CCProtectionRuleSpec*)ccProtectionRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.ccProtectionRuleSpec = ccProtectionRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
ccProtectionRuleSpec:(CCProtectionRuleSpec*)ccProtectionRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
ccProtectionRuleId:(NSString*)ccProtectionRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.ccProtectionRuleSpec = ccProtectionRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.ccProtectionRuleId = ccProtectionRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self ccProtectionRuleSpec])
    {
        [result setValue:[[self ccProtectionRuleSpec] dictionary]forKey:@"ccProtectionRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self ccProtectionRuleId])
    {
        [result setValue:[self ccProtectionRuleId] forKey:@"ccProtectionRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.ccProtectionRuleSpec = [[CCProtectionRuleSpec alloc]initWithDic:[dictionary objectForKey:@"ccProtectionRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.ccProtectionRuleId = [dictionary objectForKey:@"ccProtectionRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeWebRuleBlackListGeoAreasResult
-(id) initWithDataList:(NSArray<Country*>*) dataList { 
    self.dataList = dataList;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            Country* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        Country* item = [[Country alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    return self;
} 

@end
@implementation IpantiModifyCertInfoRequest
-(id) initWithRegion:(NSString *)regionId
certInfoModifySpec:(CertInfoModifySpec*)certInfoModifySpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.certInfoModifySpec = certInfoModifySpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
certInfoModifySpec:(CertInfoModifySpec*)certInfoModifySpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.certInfoModifySpec = certInfoModifySpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self certInfoModifySpec])
    {
        [result setValue:[[self certInfoModifySpec] dictionary]forKey:@"certInfoModifySpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.certInfoModifySpec = [[CertInfoModifySpec alloc]initWithDic:[dictionary objectForKey:@"certInfoModifySpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
  
@implementation IpantiDeleteBlackListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDeleteBlackListRuleOfWebRuleResult* result = [[IpantiDeleteBlackListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDeleteBlackListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDeleteCCProtectionRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDeleteCCProtectionRuleOfWebRuleResult* result = [[IpantiDeleteCCProtectionRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDeleteCCProtectionRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiModifyCertInfoResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyCertInfoResult* result = [[IpantiModifyCertInfoResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyCertInfoResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeWebRuleWhiteListGeoAreasResult
-(id) initWithDataList:(NSArray<Country*>*) dataList { 
    self.dataList = dataList;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            Country* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        Country* item = [[Country alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    return self;
} 

@end
  
@implementation IpantiDescribeWebRuleWhiteListGeoAreasResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeWebRuleWhiteListGeoAreasResult* result = [[IpantiDescribeWebRuleWhiteListGeoAreasResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeWebRuleWhiteListGeoAreasResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeCCProtectionRulesOfWebRuleResult
-(id) initWithDataList:(NSArray<CCProtectionRule*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            CCProtectionRule* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        CCProtectionRule* item = [[CCProtectionRule alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiEnableWebRuleWhiteListResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiEnableWebRuleWhiteListResult* result = [[IpantiEnableWebRuleWhiteListResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiEnableWebRuleWhiteListResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDisableWebRuleBlackListResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDisableWebRuleBlackListResult* result = [[IpantiDisableWebRuleBlackListResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDisableWebRuleBlackListResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeWhiteListRulesOfWebRuleResult
-(id) initWithDataList:(NSArray<WebWhiteListRule*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            WebWhiteListRule* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        WebWhiteListRule* item = [[WebWhiteListRule alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiDescribeWhiteListRulesOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeWhiteListRulesOfWebRuleResult* result = [[IpantiDescribeWhiteListRulesOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeWhiteListRulesOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDisableCCProtectionRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDisableCCProtectionRuleOfWebRuleResult* result = [[IpantiDisableCCProtectionRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDisableCCProtectionRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDeleteWhiteListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDeleteWhiteListRuleOfWebRuleResult* result = [[IpantiDeleteWhiteListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDeleteWhiteListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiCreateWhiteListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiCreateWhiteListRuleOfWebRuleResult* result = [[IpantiCreateWhiteListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiCreateWhiteListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiModifyWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyWebRuleResult* result = [[IpantiModifyWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDisableWebRuleCCResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDisableWebRuleCCResult* result = [[IpantiDisableWebRuleCCResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDisableWebRuleCCResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeWebRuleBlackListGeoAreasResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeWebRuleBlackListGeoAreasResult* result = [[IpantiDescribeWebRuleBlackListGeoAreasResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeWebRuleBlackListGeoAreasResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiModifyBlackListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
webBlackListRuleSpec:(WebBlackListRuleSpec*)webBlackListRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.webBlackListRuleSpec = webBlackListRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
webBlackListRuleSpec:(WebBlackListRuleSpec*)webBlackListRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webBlackListRuleId:(NSString*)webBlackListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.webBlackListRuleSpec = webBlackListRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webBlackListRuleId = webBlackListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self webBlackListRuleSpec])
    {
        [result setValue:[[self webBlackListRuleSpec] dictionary]forKey:@"webBlackListRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webBlackListRuleId])
    {
        [result setValue:[self webBlackListRuleId] forKey:@"webBlackListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.webBlackListRuleSpec = [[WebBlackListRuleSpec alloc]initWithDic:[dictionary objectForKey:@"webBlackListRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webBlackListRuleId = [dictionary objectForKey:@"webBlackListRuleId"];
    return self;
} 

@end
  
@implementation IpantiModifyBlackListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyBlackListRuleOfWebRuleResult* result = [[IpantiModifyBlackListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyBlackListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDisableWhiteListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDisableWhiteListRuleOfWebRuleResult* result = [[IpantiDisableWhiteListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDisableWhiteListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiModifyWhiteListRuleOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
webWhiteListRuleSpec:(WebWhiteListRuleSpec*)webWhiteListRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.webWhiteListRuleSpec = webWhiteListRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
webWhiteListRuleSpec:(WebWhiteListRuleSpec*)webWhiteListRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId
webWhiteListRuleId:(NSString*)webWhiteListRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.webWhiteListRuleSpec = webWhiteListRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    self.webWhiteListRuleId = webWhiteListRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self webWhiteListRuleSpec])
    {
        [result setValue:[[self webWhiteListRuleSpec] dictionary]forKey:@"webWhiteListRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    if([self webWhiteListRuleId])
    {
        [result setValue:[self webWhiteListRuleId] forKey:@"webWhiteListRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.webWhiteListRuleSpec = [[WebWhiteListRuleSpec alloc]initWithDic:[dictionary objectForKey:@"webWhiteListRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    self.webWhiteListRuleId = [dictionary objectForKey:@"webWhiteListRuleId"];
    return self;
} 

@end
@implementation IpantiModifyWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
webRuleSpec:(WebRuleSpec*)webRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.webRuleSpec = webRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
webRuleSpec:(WebRuleSpec*)webRuleSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.webRuleSpec = webRuleSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self webRuleSpec])
    {
        [result setValue:[[self webRuleSpec] dictionary]forKey:@"webRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.webRuleSpec = [[WebRuleSpec alloc]initWithDic:[dictionary objectForKey:@"webRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeCCProtectionConfigOfWebRuleResult
-(id) initWithData:(CCProtectionConfig*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[CCProtectionConfig alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDeleteWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDeleteWebRuleResult* result = [[IpantiDeleteWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDeleteWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiCreateWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
webRuleSpec:(WebRuleSpec*)webRuleSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.webRuleSpec = webRuleSpec;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
webRuleSpec:(WebRuleSpec*)webRuleSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.webRuleSpec = webRuleSpec;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self webRuleSpec])
    {
        [result setValue:[[self webRuleSpec] dictionary]forKey:@"webRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.webRuleSpec = [[WebRuleSpec alloc]initWithDic:[dictionary objectForKey:@"webRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeWebRuleBlackListGeoAreasRequest
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
@implementation IpantiDescribeWebRuleWhiteListGeoAreasRequest
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation IpantiCreateBlackListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiCreateBlackListRuleOfWebRuleResult* result = [[IpantiCreateBlackListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiCreateBlackListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeCCProtectionConfigOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeCCProtectionConfigOfWebRuleResult* result = [[IpantiDescribeCCProtectionConfigOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeCCProtectionConfigOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeBlackListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeBlackListRuleOfWebRuleResult* result = [[IpantiDescribeBlackListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeBlackListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeWebRuleWhiteListUsageResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeWebRuleWhiteListUsageResult* result = [[IpantiDescribeWebRuleWhiteListUsageResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeWebRuleWhiteListUsageResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiModifyCCProtectionConfigOfWebRuleRequest
-(id) initWithRegion:(NSString *)regionId
ccProtectionConfigSpec:(CCProtectionConfigSpec*)ccProtectionConfigSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.ccProtectionConfigSpec = ccProtectionConfigSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
ccProtectionConfigSpec:(CCProtectionConfigSpec*)ccProtectionConfigSpec
instanceId:(NSString*)instanceId
webRuleId:(NSString*)webRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.ccProtectionConfigSpec = ccProtectionConfigSpec;
    self.instanceId = instanceId;
    self.webRuleId = webRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self ccProtectionConfigSpec])
    {
        [result setValue:[[self ccProtectionConfigSpec] dictionary]forKey:@"ccProtectionConfigSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self webRuleId])
    {
        [result setValue:[self webRuleId] forKey:@"webRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.ccProtectionConfigSpec = [[CCProtectionConfigSpec alloc]initWithDic:[dictionary objectForKey:@"ccProtectionConfigSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.webRuleId = [dictionary objectForKey:@"webRuleId"];
    return self;
} 

@end
  
@implementation IpantiCreateWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiCreateWebRuleResult* result = [[IpantiCreateWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiCreateWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeCCProtectionRuleOfWebRuleResult
-(id) initWithData:(CCProtectionRule*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[CCProtectionRule alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDescribeCCProtectionRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeCCProtectionRuleOfWebRuleResult* result = [[IpantiDescribeCCProtectionRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeCCProtectionRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeCCProtectionDefaultConfigOfWebRuleResult
-(id) initWithData:(CCProtectionDefaultConfig*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[CCProtectionDefaultConfig alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDescribeCCProtectionDefaultConfigOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeCCProtectionDefaultConfigOfWebRuleResult* result = [[IpantiDescribeCCProtectionDefaultConfigOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeCCProtectionDefaultConfigOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeWhiteListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeWhiteListRuleOfWebRuleResult* result = [[IpantiDescribeWhiteListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeWhiteListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiModifyWhiteListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyWhiteListRuleOfWebRuleResult* result = [[IpantiModifyWhiteListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyWhiteListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDisableBlackListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDisableBlackListRuleOfWebRuleResult* result = [[IpantiDisableBlackListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDisableBlackListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeBlackListRulesOfWebRuleResult
-(id) initWithDataList:(NSArray<WebBlackListRule*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            WebBlackListRule* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        WebBlackListRule* item = [[WebBlackListRule alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiSwitchWebRuleOriginResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiSwitchWebRuleOriginResult* result = [[IpantiSwitchWebRuleOriginResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiSwitchWebRuleOriginResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiEnableWebRuleCCResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiEnableWebRuleCCResult* result = [[IpantiEnableWebRuleCCResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiEnableWebRuleCCResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDisableWebRuleWhiteListResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDisableWebRuleWhiteListResult* result = [[IpantiDisableWebRuleWhiteListResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDisableWebRuleWhiteListResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeWebRuleBlackListUsageResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeWebRuleBlackListUsageResult* result = [[IpantiDescribeWebRuleBlackListUsageResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeWebRuleBlackListUsageResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeBlackListRulesOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeBlackListRulesOfWebRuleResult* result = [[IpantiDescribeBlackListRulesOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeBlackListRulesOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiEnableWebRuleBlackListResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiEnableWebRuleBlackListResult* result = [[IpantiEnableWebRuleBlackListResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiEnableWebRuleBlackListResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeWebRuleResult* result = [[IpantiDescribeWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiEnableBlackListRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiEnableBlackListRuleOfWebRuleResult* result = [[IpantiEnableBlackListRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiEnableBlackListRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiCreateCCProtectionRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiCreateCCProtectionRuleOfWebRuleResult* result = [[IpantiCreateCCProtectionRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiCreateCCProtectionRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiSwitchWebRuleProtectResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiSwitchWebRuleProtectResult* result = [[IpantiSwitchWebRuleProtectResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiSwitchWebRuleProtectResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeCCProtectionRulesOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeCCProtectionRulesOfWebRuleResult* result = [[IpantiDescribeCCProtectionRulesOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeCCProtectionRulesOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiModifyCCProtectionRuleOfWebRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyCCProtectionRuleOfWebRuleResult* result = [[IpantiModifyCCProtectionRuleOfWebRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyCCProtectionRuleOfWebRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiEnableBlackListRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiEnableBlackListRuleOfForwardRuleResult* result = [[IpantiEnableBlackListRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiEnableBlackListRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiCreateForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiCreateForwardRuleResult* result = [[IpantiCreateForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiCreateForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeGeoAreasResult
-(id) initWithDataList:(NSArray<Country*>*) dataList { 
    self.dataList = dataList;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            Country* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        Country* item = [[Country alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    return self;
} 

@end
  
@implementation IpantiDescribeGeoAreasResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeGeoAreasResult* result = [[IpantiDescribeGeoAreasResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeGeoAreasResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeProtectionRuleOfForwardRuleResult
-(id) initWithProtectionRule:(ForwardProtectionRule*) protectionRule { 
    self.protectionRule = protectionRule;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self protectionRule])
    {
        [result setValue:[[self protectionRule] dictionary]forKey:@"protectionRule"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.protectionRule = [[ForwardProtectionRule alloc]initWithDic:[dictionary objectForKey:@"protectionRule"]];
    return self;
} 

@end
  
@implementation IpantiModifyWhiteListRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyWhiteListRuleOfForwardRuleResult* result = [[IpantiModifyWhiteListRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyWhiteListRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiModifyBlackListRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyBlackListRuleOfForwardRuleResult* result = [[IpantiModifyBlackListRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyBlackListRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeWhiteListRuleOfForwardRuleResult
-(id) initWithData:(ForwardWhiteListRule*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[ForwardWhiteListRule alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDescribeWhiteListRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeWhiteListRuleOfForwardRuleResult* result = [[IpantiDescribeWhiteListRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeWhiteListRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeGeoAreasRequest
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation IpantiDisableWhiteListRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDisableWhiteListRuleOfForwardRuleResult* result = [[IpantiDisableWhiteListRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDisableWhiteListRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeForwardRuleResult
-(id) initWithData:(ForwardRule*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[ForwardRule alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDescribeForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeForwardRuleResult* result = [[IpantiDescribeForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiModifyForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
forwardRuleSpec:(ForwardRuleSpec*)forwardRuleSpec
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.forwardRuleSpec = forwardRuleSpec;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
forwardRuleSpec:(ForwardRuleSpec*)forwardRuleSpec
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.forwardRuleSpec = forwardRuleSpec;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self forwardRuleSpec])
    {
        [result setValue:[[self forwardRuleSpec] dictionary]forKey:@"forwardRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.forwardRuleSpec = [[ForwardRuleSpec alloc]initWithDic:[dictionary objectForKey:@"forwardRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiDescribeForwardRulesResult
-(id) initWithDataList:(NSArray<ForwardRule*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            ForwardRule* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        ForwardRule* item = [[ForwardRule alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiModifyForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyForwardRuleResult* result = [[IpantiModifyForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeProtectionRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeProtectionRuleOfForwardRuleResult* result = [[IpantiDescribeProtectionRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeProtectionRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiEnableWhiteListRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiEnableWhiteListRuleOfForwardRuleResult* result = [[IpantiEnableWhiteListRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiEnableWhiteListRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiCreateForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
forwardRuleSpec:(ForwardRuleSpec*)forwardRuleSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.forwardRuleSpec = forwardRuleSpec;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
forwardRuleSpec:(ForwardRuleSpec*)forwardRuleSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.forwardRuleSpec = forwardRuleSpec;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self forwardRuleSpec])
    {
        [result setValue:[[self forwardRuleSpec] dictionary]forKey:@"forwardRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.forwardRuleSpec = [[ForwardRuleSpec alloc]initWithDic:[dictionary objectForKey:@"forwardRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
  
@implementation IpantiModifyProtectionRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyProtectionRuleOfForwardRuleResult* result = [[IpantiModifyProtectionRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyProtectionRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeForwardRulesResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeForwardRulesResult* result = [[IpantiDescribeForwardRulesResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeForwardRulesResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiModifyBlackListRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
modifySpec:(ModifyBlackListRuleOfForwardRuleSpec*)modifySpec
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.modifySpec = modifySpec;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
modifySpec:(ModifyBlackListRuleOfForwardRuleSpec*)modifySpec
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.modifySpec = modifySpec;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self modifySpec])
    {
        [result setValue:[[self modifySpec] dictionary]forKey:@"modifySpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.modifySpec = [[ModifyBlackListRuleOfForwardRuleSpec alloc]initWithDic:[dictionary objectForKey:@"modifySpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
  
@implementation IpantiSwitchForwardRuleProtectResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiSwitchForwardRuleProtectResult* result = [[IpantiSwitchForwardRuleProtectResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiSwitchForwardRuleProtectResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiSwitchForwardRuleOriginResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiSwitchForwardRuleOriginResult* result = [[IpantiSwitchForwardRuleOriginResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiSwitchForwardRuleOriginResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeBlackListRuleOfForwardRuleResult
-(id) initWithData:(ForwardBlackListRule*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[ForwardBlackListRule alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDescribeBlackListRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeBlackListRuleOfForwardRuleResult* result = [[IpantiDescribeBlackListRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeBlackListRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDeleteForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDeleteForwardRuleResult* result = [[IpantiDeleteForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDeleteForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiModifyProtectionRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
forwardProtectionRuleSpec:(ForwardProtectionRuleSpec*)forwardProtectionRuleSpec
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.forwardProtectionRuleSpec = forwardProtectionRuleSpec;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
forwardProtectionRuleSpec:(ForwardProtectionRuleSpec*)forwardProtectionRuleSpec
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.forwardProtectionRuleSpec = forwardProtectionRuleSpec;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self forwardProtectionRuleSpec])
    {
        [result setValue:[[self forwardProtectionRuleSpec] dictionary]forKey:@"forwardProtectionRuleSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.forwardProtectionRuleSpec = [[ForwardProtectionRuleSpec alloc]initWithDic:[dictionary objectForKey:@"forwardProtectionRuleSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
@implementation IpantiModifyWhiteListRuleOfForwardRuleRequest
-(id) initWithRegion:(NSString *)regionId
modifySpec:(ModifyWhiteListRuleOfForwardRuleSpec*)modifySpec
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.modifySpec = modifySpec;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
modifySpec:(ModifyWhiteListRuleOfForwardRuleSpec*)modifySpec
instanceId:(NSString*)instanceId
forwardRuleId:(NSString*)forwardRuleId { 
    self.regionId = regionId;
    self.version = version;
    self.modifySpec = modifySpec;
    self.instanceId = instanceId;
    self.forwardRuleId = forwardRuleId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self modifySpec])
    {
        [result setValue:[[self modifySpec] dictionary]forKey:@"modifySpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    if([self forwardRuleId])
    {
        [result setValue:[self forwardRuleId] forKey:@"forwardRuleId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.modifySpec = [[ModifyWhiteListRuleOfForwardRuleSpec alloc]initWithDic:[dictionary objectForKey:@"modifySpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    self.forwardRuleId = [dictionary objectForKey:@"forwardRuleId"];
    return self;
} 

@end
  
@implementation IpantiDisableBlackListRuleOfForwardRuleResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDisableBlackListRuleOfForwardRuleResult* result = [[IpantiDisableBlackListRuleOfForwardRuleResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDisableBlackListRuleOfForwardRuleResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeCCAttackLogsResult
-(id) initWithDataList:(NSArray<CCAttackLog*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            CCAttackLog* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        CCAttackLog* item = [[CCAttackLog alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiDescribeCCAttackLogsResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeCCAttackLogsResult* result = [[IpantiDescribeCCAttackLogsResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeCCAttackLogsResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeCCAttackLogDetailsResult
-(id) initWithDataList:(NSArray<CCAttackLogDetail*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            CCAttackLogDetail* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        CCAttackLogDetail* item = [[CCAttackLogDetail alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiDescribeAttackStatisticsResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeAttackStatisticsResult* result = [[IpantiDescribeAttackStatisticsResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeAttackStatisticsResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeDDoSAttackLogsResult
-(id) initWithDataList:(NSArray<DDoSAttackLog*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            DDoSAttackLog* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        DDoSAttackLog* item = [[DDoSAttackLog alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
@implementation IpantiDescribeAttackTypeCountResult
-(id) initWithDataList:(NSArray<AttackTypeCount*>*) dataList { 
    self.dataList = dataList;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            AttackTypeCount* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        AttackTypeCount* item = [[AttackTypeCount alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    return self;
} 

@end
  
@implementation IpantiDescribeAttackTypeCountResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeAttackTypeCountResult* result = [[IpantiDescribeAttackTypeCountResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeAttackTypeCountResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeDDoSAttackLogsResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeDDoSAttackLogsResult* result = [[IpantiDescribeDDoSAttackLogsResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeDDoSAttackLogsResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeCCAttackLogDetailsResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeCCAttackLogDetailsResult* result = [[IpantiDescribeCCAttackLogDetailsResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeCCAttackLogDetailsResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiModifyInstanceNameRequest
-(id) initWithRegion:(NSString *)regionId
renameInstanceSpec:(RenameInstanceSpec*)renameInstanceSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.renameInstanceSpec = renameInstanceSpec;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
renameInstanceSpec:(RenameInstanceSpec*)renameInstanceSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.renameInstanceSpec = renameInstanceSpec;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self renameInstanceSpec])
    {
        [result setValue:[[self renameInstanceSpec] dictionary]forKey:@"renameInstanceSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.renameInstanceSpec = [[RenameInstanceSpec alloc]initWithDic:[dictionary objectForKey:@"renameInstanceSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiModifyAlarmConfigRequest
-(id) initWithRegion:(NSString *)regionId
alarmConfigSpec:(AlarmConfigSpec*)alarmConfigSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.alarmConfigSpec = alarmConfigSpec;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
alarmConfigSpec:(AlarmConfigSpec*)alarmConfigSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.alarmConfigSpec = alarmConfigSpec;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self alarmConfigSpec])
    {
        [result setValue:[[self alarmConfigSpec] dictionary]forKey:@"alarmConfigSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.alarmConfigSpec = [[AlarmConfigSpec alloc]initWithDic:[dictionary objectForKey:@"alarmConfigSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDescribeInstanceResult
-(id) initWithData:(Instance*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[Instance alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
@implementation IpantiDescribeAlarmConfigResult
-(id) initWithData:(AlarmConfig*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[AlarmConfig alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDescribeAlarmConfigResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeAlarmConfigResult* result = [[IpantiDescribeAlarmConfigResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeAlarmConfigResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeVpcIpListResult
-(id) initWithDataList:(NSArray<VpcIpResource*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            VpcIpResource* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        VpcIpResource* item = [[VpcIpResource alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiDescribeVpcIpListResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeVpcIpListResult* result = [[IpantiDescribeVpcIpListResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeVpcIpListResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeProtectionStatisticsResult
-(id) initWithData:(ProtectionStatistics*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[ProtectionStatistics alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDescribeProtectionStatisticsResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeProtectionStatisticsResult* result = [[IpantiDescribeProtectionStatisticsResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeProtectionStatisticsResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeCpsIpListResult
-(id) initWithDataList:(NSArray<CpsIpResource*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            CpsIpResource* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        CpsIpResource* item = [[CpsIpResource alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiModifyEPBResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyEPBResult* result = [[IpantiModifyEPBResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyEPBResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiCreateInstanceRequest
-(id) initWithRegion:(NSString *)regionId
createInstanceSpec:(CreateInstanceSpec*)createInstanceSpec { 
    self.regionId = regionId;
    self.createInstanceSpec = createInstanceSpec;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
createInstanceSpec:(CreateInstanceSpec*)createInstanceSpec { 
    self.regionId = regionId;
    self.version = version;
    self.createInstanceSpec = createInstanceSpec;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self createInstanceSpec])
    {
        [result setValue:[[self createInstanceSpec] dictionary]forKey:@"createInstanceSpec"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.createInstanceSpec = [[CreateInstanceSpec alloc]initWithDic:[dictionary objectForKey:@"createInstanceSpec"]];
    return self;
} 

@end
  
@implementation IpantiCreateInstanceResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiCreateInstanceResult* result = [[IpantiCreateInstanceResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiCreateInstanceResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeInstancesResult
-(id) initWithDataList:(NSArray<Instance*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            Instance* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        Instance* item = [[Instance alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiDescribeInstancesResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeInstancesResult* result = [[IpantiDescribeInstancesResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeInstancesResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeInstanceResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeInstanceResult* result = [[IpantiDescribeInstanceResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeInstanceResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeNameListResult
-(id) initWithDataList:(NSArray<InstanceIdName*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            InstanceIdName* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        InstanceIdName* item = [[InstanceIdName alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiDescribeNameListResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeNameListResult* result = [[IpantiDescribeNameListResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeNameListResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiModifyAlarmConfigResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyAlarmConfigResult* result = [[IpantiModifyAlarmConfigResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyAlarmConfigResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeProtectionStatisticsRequest
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
  
@implementation IpantiDescribeCpsIpListResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeCpsIpListResult* result = [[IpantiDescribeCpsIpListResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeCpsIpListResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiCheckNameResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiCheckNameResult* result = [[IpantiCheckNameResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiCheckNameResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiModifyEPBRequest
-(id) initWithRegion:(NSString *)regionId
modifyInstanceEPBSpec:(ModifyInstanceEPBSpec*)modifyInstanceEPBSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.modifyInstanceEPBSpec = modifyInstanceEPBSpec;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
modifyInstanceEPBSpec:(ModifyInstanceEPBSpec*)modifyInstanceEPBSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.modifyInstanceEPBSpec = modifyInstanceEPBSpec;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self modifyInstanceEPBSpec])
    {
        [result setValue:[[self modifyInstanceEPBSpec] dictionary]forKey:@"modifyInstanceEPBSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.modifyInstanceEPBSpec = [[ModifyInstanceEPBSpec alloc]initWithDic:[dictionary objectForKey:@"modifyInstanceEPBSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
  
@implementation IpantiModifyInstanceNameResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiModifyInstanceNameResult* result = [[IpantiModifyInstanceNameResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiModifyInstanceNameResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeDDoSGraphResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeDDoSGraphResult* result = [[IpantiDescribeDDoSGraphResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeDDoSGraphResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeFwdGraphResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeFwdGraphResult* result = [[IpantiDescribeFwdGraphResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeFwdGraphResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeCCGraphResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeCCGraphResult* result = [[IpantiDescribeCCGraphResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeCCGraphResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeIpSetResult
-(id) initWithData:(IpSet*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[IpSet alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDescribeIpSetResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeIpSetResult* result = [[IpantiDescribeIpSetResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeIpSetResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiCreateIpSetRequest
-(id) initWithRegion:(NSString *)regionId
ipSetSpec:(IpSetSpec*)ipSetSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.ipSetSpec = ipSetSpec;
    self.instanceId = instanceId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
ipSetSpec:(IpSetSpec*)ipSetSpec
instanceId:(NSString*)instanceId { 
    self.regionId = regionId;
    self.version = version;
    self.ipSetSpec = ipSetSpec;
    self.instanceId = instanceId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self ipSetSpec])
    {
        [result setValue:[[self ipSetSpec] dictionary]forKey:@"ipSetSpec"];
    }
    if([self instanceId])
    {
        [result setValue:[self instanceId] forKey:@"instanceId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.ipSetSpec = [[IpSetSpec alloc]initWithDic:[dictionary objectForKey:@"ipSetSpec"]];
    self.instanceId = [dictionary objectForKey:@"instanceId"];
    return self;
} 

@end
@implementation IpantiDeleteIpSetResult
-(id) initWithData:(BatchResultDetail*) data { 
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.data = [[BatchResultDetail alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation IpantiDeleteIpSetResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDeleteIpSetResult* result = [[IpantiDeleteIpSetResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDeleteIpSetResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiCreateIpSetResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiCreateIpSetResult* result = [[IpantiCreateIpSetResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiCreateIpSetResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation IpantiDescribeIpSetUsageResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeIpSetUsageResult* result = [[IpantiDescribeIpSetUsageResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeIpSetUsageResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation IpantiDescribeIpSetsResult
-(id) initWithDataList:(NSArray<IpSet*>*) dataList
        currentCount:(NSNumber*)currentCount
        totalCount:(NSNumber*)totalCount
        totalPage:(NSNumber*)totalPage { 
    self.dataList = dataList;               
    self.currentCount = currentCount;               
    self.totalCount = totalCount;               
    self.totalPage = totalPage;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self dataList])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self dataList] count]; i++) {
            IpSet* item = [[self dataList] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"dataList"];
    }
    if([self currentCount])
    {
        [result setValue:[self currentCount] forKey:@"currentCount"];
    }
    if([self totalCount])
    {
        [result setValue:[self totalCount] forKey:@"totalCount"];
    }
    if([self totalPage])
    {
        [result setValue:[self totalPage] forKey:@"totalPage"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    NSArray* dataListArray = [dictionary objectForKey:@"dataList"];
    if(dataListArray&&![dataListArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataListArray count];i++)
        {
        IpSet* item = [[IpSet alloc]initWithDic:[dataListArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.dataList = propertyArray;
    }
    self.currentCount = [dictionary objectForKey:@"currentCount"];
    self.totalCount = [dictionary objectForKey:@"totalCount"];
    self.totalPage = [dictionary objectForKey:@"totalPage"];
    return self;
} 

@end
  
@implementation IpantiDescribeIpSetsResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
IpantiDescribeIpSetsResult* result = [[IpantiDescribeIpSetsResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(IpantiDescribeIpSetsResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
 
