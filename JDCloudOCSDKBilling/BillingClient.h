/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

计费
计费系统API接口

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/


#ifndef BillingClient_h
#define BillingClient_h


#import <JDCloudOCSDKCore/JDCloudOCSDKCore.h>
#import <JDCloudOCSDKBilling/BillingApiModel.h>

@interface BillingClient : NSObject<JDCloudClient>{
    @private
    NSString* _userAgent;
    NSString* _serviceName;
    NSString* _version;
    }

    @property (strong,readonly,nonatomic) NSString* userAgent;

    @property (strong,readonly,nonatomic) NSString* serviceName;

    @property (strong,readonly,nonatomic) NSString* version;

    @property (strong,nonatomic) NSString* contentType;

    @property (strong,nonatomic) Credential* credential;

    @property (strong,nonatomic) SDKEnvironment* sdkEnvironment;

    @property (strong,nonatomic) NSMutableDictionary* customHeader;

    @property  (strong,nonatomic) NSString* httpRequestProtocol;

    -(void) addCustomerHeaderWithKey:(NSString*) key
    value:(NSString*) value;

    -(id)initWithGlobalConfig;

    -(id)initWithCredential:(Credential*)credential
    sdkEnvironment:(SDKEnvironment*)sdkEnvironment;
    -(id)initWithCredential:(Credential*)credential;
    /**
    calculateTotalPrice sync request
    @param calculateTotalPriceRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `calculateTotalPriceResponse` the request response data model
    */
    -(NSDictionary*) calculateTotalPriceSyncWithRequest:(BillingCalculateTotalPriceRequest*) calculateTotalPriceRequest;

    -(void)calculateTotalPriceAsyncWithRequest:(BillingCalculateTotalPriceRequest*) calculateTotalPriceRequest
    completionHandler:(void(^)(int statusCode,BillingCalculateTotalPriceResponse* _Nullable calculateTotalPriceResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    queryBillSummary sync request
    @param queryBillSummaryRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `queryBillSummaryResponse` the request response data model
    */
    -(NSDictionary*) queryBillSummarySyncWithRequest:(BillingQueryBillSummaryRequest*) queryBillSummaryRequest;

    -(void)queryBillSummaryAsyncWithRequest:(BillingQueryBillSummaryRequest*) queryBillSummaryRequest
    completionHandler:(void(^)(int statusCode,BillingQueryBillSummaryResponse* _Nullable queryBillSummaryResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    queryBillDetail sync request
    @param queryBillDetailRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `queryBillDetailResponse` the request response data model
    */
    -(NSDictionary*) queryBillDetailSyncWithRequest:(BillingQueryBillDetailRequest*) queryBillDetailRequest;

    -(void)queryBillDetailAsyncWithRequest:(BillingQueryBillDetailRequest*) queryBillDetailRequest
    completionHandler:(void(^)(int statusCode,BillingQueryBillDetailResponse* _Nullable queryBillDetailResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    /**
    billing common sync request
    @param  jdcloudDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
    */
    -(NSDictionary*) billingCommonSyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                           url:(NSString*) url
                                        method:(NSString*) method;

    -(void)billingCommonAsyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                  url:(NSString*) url
                               method:(NSString*) method
                    completionHandler:(void(^)(int statusCode, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    @end


    #endif /* BillingClient_h */
