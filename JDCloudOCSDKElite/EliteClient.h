/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

elite相关API
elite相关API

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/


#ifndef EliteClient_h
#define EliteClient_h


#import <JDCloudOCSDKCore/JDCloudOCSDKCore.h>
#import <JDCloudOCSDKElite/EliteApiModel.h>

@interface EliteClient : NSObject<JDCloudClient>{
    @private
    NSString* _userAgent;
    NSString* _serviceName;
    NSString* _version;
    }

    @property (strong,readonly,nonatomic) NSString* userAgent;

    @property (strong,readonly,nonatomic) NSString* serviceName;

    @property (strong,readonly,nonatomic) NSString* version;

    @property (strong,nonatomic) NSString* contentType;

    @property (strong,nonatomic) Credential* credential;

    @property (strong,nonatomic) SDKEnvironment* sdkEnvironment;

    @property (strong,nonatomic) NSMutableDictionary* customHeader;

    @property  (strong,nonatomic) NSString* httpRequestProtocol;

    -(void) addCustomerHeaderWithKey:(NSString*) key
    value:(NSString*) value;

    -(id)initWithGlobalConfig;

    -(id)initWithCredential:(Credential*)credential
    sdkEnvironment:(SDKEnvironment*)sdkEnvironment;
    -(id)initWithCredential:(Credential*)credential;
    /**
    listSaleService sync request
    @param listSaleServiceRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `listSaleServiceResponse` the request response data model
    */
    -(NSDictionary*) listSaleServiceSyncWithRequest:(EliteListSaleServiceRequest*) listSaleServiceRequest;

    -(void)listSaleServiceAsyncWithRequest:(EliteListSaleServiceRequest*) listSaleServiceRequest
    completionHandler:(void(^)(int statusCode,EliteListSaleServiceResponse* _Nullable listSaleServiceResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    jdxQueryPrice sync request
    @param jdxQueryPriceRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `jdxQueryPriceResponse` the request response data model
    */
    -(NSDictionary*) jdxQueryPriceSyncWithRequest:(EliteJdxQueryPriceRequest*) jdxQueryPriceRequest;

    -(void)jdxQueryPriceAsyncWithRequest:(EliteJdxQueryPriceRequest*) jdxQueryPriceRequest
    completionHandler:(void(^)(int statusCode,EliteJdxQueryPriceResponse* _Nullable jdxQueryPriceResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    jdxQueryDeliveryInfo sync request
    @param jdxQueryDeliveryInfoRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `jdxQueryDeliveryInfoResponse` the request response data model
    */
    -(NSDictionary*) jdxQueryDeliveryInfoSyncWithRequest:(EliteJdxQueryDeliveryInfoRequest*) jdxQueryDeliveryInfoRequest;

    -(void)jdxQueryDeliveryInfoAsyncWithRequest:(EliteJdxQueryDeliveryInfoRequest*) jdxQueryDeliveryInfoRequest
    completionHandler:(void(^)(int statusCode,EliteJdxQueryDeliveryInfoResponse* _Nullable jdxQueryDeliveryInfoResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    getStoreService sync request
    @param getStoreServiceRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `getStoreServiceResponse` the request response data model
    */
    -(NSDictionary*) getStoreServiceSyncWithRequest:(EliteGetStoreServiceRequest*) getStoreServiceRequest;

    -(void)getStoreServiceAsyncWithRequest:(EliteGetStoreServiceRequest*) getStoreServiceRequest
    completionHandler:(void(^)(int statusCode,EliteGetStoreServiceResponse* _Nullable getStoreServiceResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    jdxReportOrder sync request
    @param jdxReportOrderRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `jdxReportOrderResponse` the request response data model
    */
    -(NSDictionary*) jdxReportOrderSyncWithRequest:(EliteJdxReportOrderRequest*) jdxReportOrderRequest;

    -(void)jdxReportOrderAsyncWithRequest:(EliteJdxReportOrderRequest*) jdxReportOrderRequest
    completionHandler:(void(^)(int statusCode,EliteJdxReportOrderResponse* _Nullable jdxReportOrderResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    getSaleServiceByDeliverNumber sync request
    @param getSaleServiceByDeliverNumberRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `getSaleServiceByDeliverNumberResponse` the request response data model
    */
    -(NSDictionary*) getSaleServiceByDeliverNumberSyncWithRequest:(EliteGetSaleServiceByDeliverNumberRequest*) getSaleServiceByDeliverNumberRequest;

    -(void)getSaleServiceByDeliverNumberAsyncWithRequest:(EliteGetSaleServiceByDeliverNumberRequest*) getSaleServiceByDeliverNumberRequest
    completionHandler:(void(^)(int statusCode,EliteGetSaleServiceByDeliverNumberResponse* _Nullable getSaleServiceByDeliverNumberResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    jdxCreateOrder sync request
    @param jdxCreateOrderRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `jdxCreateOrderResponse` the request response data model
    */
    -(NSDictionary*) jdxCreateOrderSyncWithRequest:(EliteJdxCreateOrderRequest*) jdxCreateOrderRequest;

    -(void)jdxCreateOrderAsyncWithRequest:(EliteJdxCreateOrderRequest*) jdxCreateOrderRequest
    completionHandler:(void(^)(int statusCode,EliteJdxCreateOrderResponse* _Nullable jdxCreateOrderResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    jdxQueryProduct sync request
    @param jdxQueryProductRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `jdxQueryProductResponse` the request response data model
    */
    -(NSDictionary*) jdxQueryProductSyncWithRequest:(EliteJdxQueryProductRequest*) jdxQueryProductRequest;

    -(void)jdxQueryProductAsyncWithRequest:(EliteJdxQueryProductRequest*) jdxQueryProductRequest
    completionHandler:(void(^)(int statusCode,EliteJdxQueryProductResponse* _Nullable jdxQueryProductResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    confirmSaleServiceDelivery sync request
    @param confirmSaleServiceDeliveryRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `confirmSaleServiceDeliveryResponse` the request response data model
    */
    -(NSDictionary*) confirmSaleServiceDeliverySyncWithRequest:(EliteConfirmSaleServiceDeliveryRequest*) confirmSaleServiceDeliveryRequest;

    -(void)confirmSaleServiceDeliveryAsyncWithRequest:(EliteConfirmSaleServiceDeliveryRequest*) confirmSaleServiceDeliveryRequest
    completionHandler:(void(^)(int statusCode,EliteConfirmSaleServiceDeliveryResponse* _Nullable confirmSaleServiceDeliveryResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    /**
    elite common sync request
    @param  jdcloudDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
    */
    -(NSDictionary*) eliteCommonSyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                           url:(NSString*) url
                                        method:(NSString*) method;

    -(void)eliteCommonAsyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                  url:(NSString*) url
                               method:(NSString*) method
                    completionHandler:(void(^)(int statusCode, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    @end


    #endif /* EliteClient_h */
