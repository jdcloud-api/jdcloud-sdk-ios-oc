
/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

数据计算服务API
数据计算服务相关API

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/

#import <Foundation/Foundation.h>

#import <JDCloudOCSDKXdata/XdataExecutor.h>


/// 终止用户Spark SQL脚本查询
@implementation  XdataCancelRasQueryExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/dwQuery:cancelRasQuery";
    return self;
}
@end

/// 创建属于用户实例的数据库
@implementation  XdataCreateDatabaseExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/dwDatabase/{databaseName}";
    return self;
}
@end

/// 获取用户PySpark脚本的执行状态
@implementation  XdataGetPySparkExecuteStateExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwQuery:getPySparkExecuteState";
    return self;
}
@end

/// 查询用户实例的所有数据库信息
@implementation  XdataListDatabaseInfoExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwDatabase";
    return self;
}
@end

/// 查询用户实例的指定数据库信息
@implementation  XdataGetDatabaseInfoExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwDatabase/{databaseName}";
    return self;
}
@end

/// 查询用户实例指定数据库下的所有数据表信息
@implementation  XdataListTableInfoExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwTable";
    return self;
}
@end

/// 获取用户Spark SQL脚本的查询状态
@implementation  XdataGetRasQueryStateExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwQuery:getRasQueryState";
    return self;
}
@end

/// 执行用户编写的Spark SQL脚本
@implementation  XdataExecuteRasQueryExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/dwQuery:executeRasQuery";
    return self;
}
@end

/// 终止用户PySpark脚本任务
@implementation  XdataCancelPySparkJobExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/dwQuery:cancelPySparkQuery";
    return self;
}
@end

/// 获取用户PySpark脚本的执行结果
@implementation  XdataGetPySparkExecuteResultExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwQuery:getPySparkExecuteResult";
    return self;
}
@end

/// 查询用户所属的实例信息
@implementation  XdataListInstanceInfoExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwInstance";
    return self;
}
@end

/// 删除用户实例的指定数据库
@implementation  XdataDeleteDatabaseExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/dwDatabase/{databaseName}";
    return self;
}
@end

/// 查询用户实例的指定数据表信息
@implementation  XdataGetTableInfoExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwTable/{tableName}";
    return self;
}
@end

/// 执行用户编写的PySpark脚本
@implementation  XdataExecutePySparkQueryExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/dwQuery:executePySparkQuery";
    return self;
}
@end

/// 获取用户Spark SQL脚本的查询结果
@implementation  XdataGetRasQueryResultExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwQuery:getRasQueryResult";
    return self;
}
@end

/// 创建用户实例的数据表
@implementation  XdataCreateTableExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"POST";
    self.url = @"/regions/{regionId}/dwTable";
    return self;
}
@end

/// 获取用户Spark SQL脚本的查询日志
@implementation  XdataGetRasQueryLogExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"GET";
    self.url = @"/regions/{regionId}/dwQuery:getRasQueryLog";
    return self;
}
@end

/// 删除用户实例的指定数据表
@implementation  XdataDeleteTableExecutor

-(id) initWithJDCloudClient:(XdataClient*)JDCloudClient
{
    self.jdCloudClient = JDCloudClient;
    self.method = @"DELETE";
    self.url = @"/regions/{regionId}/dwTable/{tableName}";
    return self;
}
@end
