/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

table
API related to XDATA-DW table

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/

#import <Foundation/Foundation.h>
#import <JDCloudOCSDKXdata/XdataApiModel.h>


@implementation XdataGetRasQueryLogRequest
-(id) initWithRegion:(NSString *)regionId
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.version = version;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self userName])
    {
        [result setValue:[self userName] forKey:@"userName"];
    }
    if([self queryId])
    {
        [result setValue:[self queryId] forKey:@"queryId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.userName = [dictionary objectForKey:@"userName"];
    self.queryId = [dictionary objectForKey:@"queryId"];
    return self;
} 

@end
@implementation XdataGetRasQueryResultResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message { 
    self.status = status;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation XdataExecutePySparkQueryResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(NSNumber*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
        [result setValue:[self data] forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    self.data = [dictionary objectForKey:@"data"];
    return self;
} 

@end
@implementation XdataGetPySparkExecuteResultResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message { 
    self.status = status;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation XdataGetRasQueryResultRequest
-(id) initWithRegion:(NSString *)regionId
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.version = version;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self userName])
    {
        [result setValue:[self userName] forKey:@"userName"];
    }
    if([self queryId])
    {
        [result setValue:[self queryId] forKey:@"queryId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.userName = [dictionary objectForKey:@"userName"];
    self.queryId = [dictionary objectForKey:@"queryId"];
    return self;
} 

@end
@implementation XdataExecuteRasQueryRequest
-(id) initWithRegion:(NSString *)regionId
databaseName:(NSString*)databaseName
sql:(NSString*)sql
userName:(NSString*)userName
queueName:(NSString*)queueName
source:(NSString*)source
callBackURL:(NSString*)callBackURL
instanceName:(NSString*)instanceName
instanceOwnerName:(NSString*)instanceOwnerName
isExplain:(NSString*)isExplain { 
    self.regionId = regionId;
    self.databaseName = databaseName;
    self.sql = sql;
    self.userName = userName;
    self.queueName = queueName;
    self.source = source;
    self.callBackURL = callBackURL;
    self.instanceName = instanceName;
    self.instanceOwnerName = instanceOwnerName;
    self.isExplain = isExplain;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
databaseName:(NSString*)databaseName
sql:(NSString*)sql
userName:(NSString*)userName
queueName:(NSString*)queueName
source:(NSString*)source
callBackURL:(NSString*)callBackURL
instanceName:(NSString*)instanceName
instanceOwnerName:(NSString*)instanceOwnerName
isExplain:(NSString*)isExplain { 
    self.regionId = regionId;
    self.version = version;
    self.databaseName = databaseName;
    self.sql = sql;
    self.userName = userName;
    self.queueName = queueName;
    self.source = source;
    self.callBackURL = callBackURL;
    self.instanceName = instanceName;
    self.instanceOwnerName = instanceOwnerName;
    self.isExplain = isExplain;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self databaseName])
    {
        [result setValue:[self databaseName] forKey:@"databaseName"];
    }
    if([self sql])
    {
        [result setValue:[self sql] forKey:@"sql"];
    }
    if([self userName])
    {
        [result setValue:[self userName] forKey:@"userName"];
    }
    if([self queueName])
    {
        [result setValue:[self queueName] forKey:@"queueName"];
    }
    if([self source])
    {
        [result setValue:[self source] forKey:@"source"];
    }
    if([self callBackURL])
    {
        [result setValue:[self callBackURL] forKey:@"callBackURL"];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    if([self instanceOwnerName])
    {
        [result setValue:[self instanceOwnerName] forKey:@"instanceOwnerName"];
    }
    if([self isExplain])
    {
        [result setValue:[self isExplain] forKey:@"isExplain"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.databaseName = [dictionary objectForKey:@"databaseName"];
    self.sql = [dictionary objectForKey:@"sql"];
    self.userName = [dictionary objectForKey:@"userName"];
    self.queueName = [dictionary objectForKey:@"queueName"];
    self.source = [dictionary objectForKey:@"source"];
    self.callBackURL = [dictionary objectForKey:@"callBackURL"];
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    self.instanceOwnerName = [dictionary objectForKey:@"instanceOwnerName"];
    self.isExplain = [dictionary objectForKey:@"isExplain"];
    return self;
} 

@end
@implementation XdataExecuteRasQueryResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(NSNumber*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
        [result setValue:[self data] forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    self.data = [dictionary objectForKey:@"data"];
    return self;
} 

@end
@implementation XdataCancelPySparkJobRequest
-(id) initWithRegion:(NSString *)regionId
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.version = version;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self userName])
    {
        [result setValue:[self userName] forKey:@"userName"];
    }
    if([self queryId])
    {
        [result setValue:[self queryId] forKey:@"queryId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.userName = [dictionary objectForKey:@"userName"];
    self.queryId = [dictionary objectForKey:@"queryId"];
    return self;
} 

@end
@implementation XdataGetPySparkExecuteStateResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(NSString*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
        [result setValue:[self data] forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    self.data = [dictionary objectForKey:@"data"];
    return self;
} 

@end
@implementation XdataGetRasQueryStateRequest
-(id) initWithRegion:(NSString *)regionId
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.version = version;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self userName])
    {
        [result setValue:[self userName] forKey:@"userName"];
    }
    if([self queryId])
    {
        [result setValue:[self queryId] forKey:@"queryId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.userName = [dictionary objectForKey:@"userName"];
    self.queryId = [dictionary objectForKey:@"queryId"];
    return self;
} 

@end
@implementation XdataCancelRasQueryResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message { 
    self.status = status;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation XdataGetRasQueryLogResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message { 
    self.status = status;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation XdataGetRasQueryStateResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(NSString*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
        [result setValue:[self data] forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    self.data = [dictionary objectForKey:@"data"];
    return self;
} 

@end
@implementation XdataCancelRasQueryRequest
-(id) initWithRegion:(NSString *)regionId
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.version = version;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self userName])
    {
        [result setValue:[self userName] forKey:@"userName"];
    }
    if([self queryId])
    {
        [result setValue:[self queryId] forKey:@"queryId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.userName = [dictionary objectForKey:@"userName"];
    self.queryId = [dictionary objectForKey:@"queryId"];
    return self;
} 

@end
@implementation XdataGetPySparkExecuteResultRequest
-(id) initWithRegion:(NSString *)regionId
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.version = version;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self userName])
    {
        [result setValue:[self userName] forKey:@"userName"];
    }
    if([self queryId])
    {
        [result setValue:[self queryId] forKey:@"queryId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.userName = [dictionary objectForKey:@"userName"];
    self.queryId = [dictionary objectForKey:@"queryId"];
    return self;
} 

@end
@implementation XdataExecutePySparkQueryRequest
-(id) initWithRegion:(NSString *)regionId
script:(NSString*)script
userName:(NSString*)userName
instanceName:(NSString*)instanceName
instanceOwnerName:(NSString*)instanceOwnerName
scriptType:(NSString*)scriptType { 
    self.regionId = regionId;
    self.script = script;
    self.userName = userName;
    self.instanceName = instanceName;
    self.instanceOwnerName = instanceOwnerName;
    self.scriptType = scriptType;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
script:(NSString*)script
userName:(NSString*)userName
instanceName:(NSString*)instanceName
instanceOwnerName:(NSString*)instanceOwnerName
scriptType:(NSString*)scriptType { 
    self.regionId = regionId;
    self.version = version;
    self.script = script;
    self.userName = userName;
    self.instanceName = instanceName;
    self.instanceOwnerName = instanceOwnerName;
    self.scriptType = scriptType;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self script])
    {
        [result setValue:[self script] forKey:@"script"];
    }
    if([self userName])
    {
        [result setValue:[self userName] forKey:@"userName"];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    if([self instanceOwnerName])
    {
        [result setValue:[self instanceOwnerName] forKey:@"instanceOwnerName"];
    }
    if([self scriptType])
    {
        [result setValue:[self scriptType] forKey:@"scriptType"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.script = [dictionary objectForKey:@"script"];
    self.userName = [dictionary objectForKey:@"userName"];
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    self.instanceOwnerName = [dictionary objectForKey:@"instanceOwnerName"];
    self.scriptType = [dictionary objectForKey:@"scriptType"];
    return self;
} 

@end
@implementation XdataGetPySparkExecuteStateRequest
-(id) initWithRegion:(NSString *)regionId
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
userName:(NSString*)userName
queryId:(NSString*)queryId { 
    self.regionId = regionId;
    self.version = version;
    self.userName = userName;
    self.queryId = queryId;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self userName])
    {
        [result setValue:[self userName] forKey:@"userName"];
    }
    if([self queryId])
    {
        [result setValue:[self queryId] forKey:@"queryId"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.userName = [dictionary objectForKey:@"userName"];
    self.queryId = [dictionary objectForKey:@"queryId"];
    return self;
} 

@end
@implementation XdataCancelPySparkJobResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message { 
    self.status = status;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation XdataDeleteDatabaseResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message { 
    self.status = status;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation XdataGetDatabaseInfoRequest
-(id) initWithRegion:(NSString *)regionId
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName { 
    self.regionId = regionId;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName { 
    self.regionId = regionId;
    self.version = version;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    if([self databaseName])
    {
        [result setValue:[self databaseName] forKey:@"databaseName"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    self.databaseName = [dictionary objectForKey:@"databaseName"];
    return self;
} 

@end
@implementation XdataCreateDatabaseResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message { 
    self.status = status;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
@implementation XdataListDatabaseInfoRequest
-(id) initWithRegion:(NSString *)regionId
instanceName:(NSString*)instanceName { 
    self.regionId = regionId;
    self.instanceName = instanceName;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceName:(NSString*)instanceName { 
    self.regionId = regionId;
    self.version = version;
    self.instanceName = instanceName;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    return self;
} 

@end
@implementation XdataCreateDatabaseRequest
-(id) initWithRegion:(NSString *)regionId
instanceName:(NSString*)instanceName
descriptionValue:(NSString*)descriptionValue
databaseName:(NSString*)databaseName { 
    self.regionId = regionId;
    self.instanceName = instanceName;
    self.descriptionValue = descriptionValue;
    self.databaseName = databaseName;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceName:(NSString*)instanceName
descriptionValue:(NSString*)descriptionValue
databaseName:(NSString*)databaseName { 
    self.regionId = regionId;
    self.version = version;
    self.instanceName = instanceName;
    self.descriptionValue = descriptionValue;
    self.databaseName = databaseName;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    if([self descriptionValue])
    {
        [result setValue:[self descriptionValue] forKey:@"description"];
    }
    if([self databaseName])
    {
        [result setValue:[self databaseName] forKey:@"databaseName"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    self.descriptionValue = [dictionary objectForKey:@"description"];
    self.databaseName = [dictionary objectForKey:@"databaseName"];
    return self;
} 

@end
@implementation XdataDeleteDatabaseRequest
-(id) initWithRegion:(NSString *)regionId
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName { 
    self.regionId = regionId;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName { 
    self.regionId = regionId;
    self.version = version;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    if([self databaseName])
    {
        [result setValue:[self databaseName] forKey:@"databaseName"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    self.databaseName = [dictionary objectForKey:@"databaseName"];
    return self;
} 

@end
@implementation XdataGetTableInfoRequest
-(id) initWithRegion:(NSString *)regionId
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName
tableName:(NSString*)tableName { 
    self.regionId = regionId;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    self.tableName = tableName;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName
tableName:(NSString*)tableName { 
    self.regionId = regionId;
    self.version = version;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    self.tableName = tableName;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    if([self databaseName])
    {
        [result setValue:[self databaseName] forKey:@"databaseName"];
    }
    if([self tableName])
    {
        [result setValue:[self tableName] forKey:@"tableName"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    self.databaseName = [dictionary objectForKey:@"databaseName"];
    self.tableName = [dictionary objectForKey:@"tableName"];
    return self;
} 

@end
@implementation XdataDeleteTableRequest
-(id) initWithRegion:(NSString *)regionId
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName
tableName:(NSString*)tableName { 
    self.regionId = regionId;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    self.tableName = tableName;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName
tableName:(NSString*)tableName { 
    self.regionId = regionId;
    self.version = version;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    self.tableName = tableName;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    if([self databaseName])
    {
        [result setValue:[self databaseName] forKey:@"databaseName"];
    }
    if([self tableName])
    {
        [result setValue:[self tableName] forKey:@"tableName"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    self.databaseName = [dictionary objectForKey:@"databaseName"];
    self.tableName = [dictionary objectForKey:@"tableName"];
    return self;
} 

@end
@implementation XdataDeleteTableResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(NSObject*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
        [result setValue:[self data] forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    self.data = [dictionary objectForKey:@"data"];
    return self;
} 

@end
@implementation XdataListTableInfoRequest
-(id) initWithRegion:(NSString *)regionId
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName { 
    self.regionId = regionId;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceName:(NSString*)instanceName
databaseName:(NSString*)databaseName { 
    self.regionId = regionId;
    self.version = version;
    self.instanceName = instanceName;
    self.databaseName = databaseName;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    if([self databaseName])
    {
        [result setValue:[self databaseName] forKey:@"databaseName"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    self.databaseName = [dictionary objectForKey:@"databaseName"];
    return self;
} 

@end
@implementation XdataCreateTableResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message { 
    self.status = status;               
    self.message = message;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    return self;
} 

@end
  
@implementation XdataGetRasQueryLogResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataGetRasQueryLogResult* result = [[XdataGetRasQueryLogResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataGetRasQueryLogResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataCancelPySparkJobResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataCancelPySparkJobResult* result = [[XdataCancelPySparkJobResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataCancelPySparkJobResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataGetPySparkExecuteStateResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataGetPySparkExecuteStateResult* result = [[XdataGetPySparkExecuteStateResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataGetPySparkExecuteStateResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataExecuteRasQueryResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataExecuteRasQueryResult* result = [[XdataExecuteRasQueryResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataExecuteRasQueryResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataGetPySparkExecuteResultResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataGetPySparkExecuteResultResult* result = [[XdataGetPySparkExecuteResultResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataGetPySparkExecuteResultResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataGetRasQueryResultResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataGetRasQueryResultResult* result = [[XdataGetRasQueryResultResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataGetRasQueryResultResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataGetRasQueryStateResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataGetRasQueryStateResult* result = [[XdataGetRasQueryStateResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataGetRasQueryStateResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataExecutePySparkQueryResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataExecutePySparkQueryResult* result = [[XdataExecutePySparkQueryResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataExecutePySparkQueryResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataCancelRasQueryResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataCancelRasQueryResult* result = [[XdataCancelRasQueryResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataCancelRasQueryResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation XdataListDatabaseInfoResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(NSArray<DwDatabaseInfo*>*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self data] count]; i++) {
            DwDatabaseInfo* item = [[self data] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    NSArray* dataArray = [dictionary objectForKey:@"data"];
    if(dataArray&&![dataArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataArray count];i++)
        {
        DwDatabaseInfo* item = [[DwDatabaseInfo alloc]initWithDic:[dataArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.data = propertyArray;
    }
    return self;
} 

@end
@implementation XdataGetDatabaseInfoResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(DwDatabase*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    self.data = [[DwDatabase alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation XdataDeleteDatabaseResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataDeleteDatabaseResult* result = [[XdataDeleteDatabaseResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataDeleteDatabaseResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataListDatabaseInfoResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataListDatabaseInfoResult* result = [[XdataListDatabaseInfoResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataListDatabaseInfoResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataGetDatabaseInfoResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataGetDatabaseInfoResult* result = [[XdataGetDatabaseInfoResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataGetDatabaseInfoResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataCreateDatabaseResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataCreateDatabaseResult* result = [[XdataCreateDatabaseResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataCreateDatabaseResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation XdataListInstanceInfoRequest
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    return self;
} 

@end
@implementation XdataListInstanceInfoResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(NSArray<DwInstance*>*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self data] count]; i++) {
            DwInstance* item = [[self data] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    NSArray* dataArray = [dictionary objectForKey:@"data"];
    if(dataArray&&![dataArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataArray count];i++)
        {
        DwInstance* item = [[DwInstance alloc]initWithDic:[dataArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.data = propertyArray;
    }
    return self;
} 

@end
  
@implementation XdataListInstanceInfoResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataListInstanceInfoResult* result = [[XdataListInstanceInfoResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataListInstanceInfoResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
  
@implementation XdataCreateTableResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataCreateTableResult* result = [[XdataCreateTableResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataCreateTableResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation XdataListTableInfoResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(NSArray<DwTable*>*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
            NSMutableArray<NSDictionary*>* arrayDic  = [[NSMutableArray alloc] init];
            for (int i =0 ; i< [[self data] count]; i++) {
            DwTable* item = [[self data] objectAtIndex:i];
            [arrayDic addObject:[item dictionary]];
        }
        [result setValue:arrayDic forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    NSArray* dataArray = [dictionary objectForKey:@"data"];
    if(dataArray&&![dataArray isKindOfClass:[NSNull class]])
    {
        NSMutableArray* propertyArray = [[NSMutableArray alloc]init];
        for(int i = 0 ; i< [dataArray count];i++)
        {
        DwTable* item = [[DwTable alloc]initWithDic:[dataArray objectAtIndex:i]];
            if(item)
            {
            [propertyArray addObject:item];
            }
        }
        self.data = propertyArray;
    }
    return self;
} 

@end
  
@implementation XdataListTableInfoResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataListTableInfoResult* result = [[XdataListTableInfoResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataListTableInfoResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation XdataGetTableInfoResult
-(id) initWithStatus:(NSNumber*) status
        message:(NSString*)message
        data:(DwTable*)data { 
    self.status = status;               
    self.message = message;               
    self.data = data;               
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    if([self status])
    {
        [result setValue:[self status] forKey:@"status"];
    }
    if([self message])
    {
        [result setValue:[self message] forKey:@"message"];
    }
    if([self data])
    {
        [result setValue:[[self data] dictionary]forKey:@"data"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.status = [dictionary objectForKey:@"status"];
    self.message = [dictionary objectForKey:@"message"];
    self.data = [[DwTable alloc]initWithDic:[dictionary objectForKey:@"data"]];
    return self;
} 

@end
  
@implementation XdataGetTableInfoResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataGetTableInfoResult* result = [[XdataGetTableInfoResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataGetTableInfoResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
@implementation XdataCreateTableRequest
-(id) initWithRegion:(NSString *)regionId
instanceName:(NSString*)instanceName
dbModelDBTable:(DwTableDesc*)dbModelDBTable { 
    self.regionId = regionId;
    self.instanceName = instanceName;
    self.dbModelDBTable = dbModelDBTable;
    return self;
}

-(id) initWithRegion:(NSString *)regionId
             version:(NSString *)version
instanceName:(NSString*)instanceName
dbModelDBTable:(DwTableDesc*)dbModelDBTable { 
    self.regionId = regionId;
    self.version = version;
    self.instanceName = instanceName;
    self.dbModelDBTable = dbModelDBTable;
    return self;
}
-(NSMutableDictionary*) dictionary{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *superObjectDic = [super dictionary];
    if(superObjectDic && [superObjectDic count]>0)
    {
        [result addEntriesFromDictionary:superObjectDic];
    }
    if([self instanceName])
    {
        [result setValue:[self instanceName] forKey:@"instanceName"];
    }
    if([self dbModelDBTable])
    {
        [result setValue:[[self dbModelDBTable] dictionary]forKey:@"dbModelDBTable"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary{
    self.instanceName = [dictionary objectForKey:@"instanceName"];
    self.dbModelDBTable = [[DwTableDesc alloc]initWithDic:[dictionary objectForKey:@"dbModelDBTable"]];
    return self;
} 

@end
  
@implementation XdataDeleteTableResponse
-(NSMutableDictionary*) dictionary
{
    NSMutableDictionary* result = [[NSMutableDictionary alloc] init]; 
    if([self requestId])
    {
        [result setValue:[self requestId] forKey:@"requestId"];
    } 
    if([self result])
    {
        
        [result setValue:[[self result] dictionary] forKey:@"result"];
    }
    if([self error])
    {
        
        [result setValue:[[self error] dictionary] forKey:@"error"];
    }
    return result;
}

-(id) initWithDic:(NSDictionary*)dictionary
{
    
    self.requestId = [dictionary objectForKey:@"requestId"];
XdataDeleteTableResult* result = [[XdataDeleteTableResult alloc]initWithDic:[dictionary objectForKey:@"result"]];
    self.result = result;
    ServiceError* error = [[ServiceError alloc]initWithDic:[dictionary objectForKey:@"error"]];
    self.error = error;
    return self;
}

-(id) initWithRequestId:(NSString*) requestId
                  error:(ServiceError*) error
                 result:(XdataDeleteTableResult*) result
{
    self.error = error;
    self.result =result;
    self.requestId = requestId;
    return self;
}

@end
 
