/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

CFS的API
CFS(Cloud-File-Service)的API包含CFS相关接口。

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/


#ifndef ZfsClient_h
#define ZfsClient_h


#import <JDCloudOCSDKCore/JDCloudOCSDKCore.h>
#import <JDCloudOCSDKZfs/ZfsApiModel.h>

@interface ZfsClient : NSObject<JDCloudClient>{
    @private
    NSString* _userAgent;
    NSString* _serviceName;
    NSString* _version;
    }

    @property (strong,readonly,nonatomic) NSString* userAgent;

    @property (strong,readonly,nonatomic) NSString* serviceName;

    @property (strong,readonly,nonatomic) NSString* version;

    @property (strong,nonatomic) NSString* contentType;

    @property (strong,nonatomic) Credential* credential;

    @property (strong,nonatomic) SDKEnvironment* sdkEnvironment;

    @property (strong,nonatomic) NSMutableDictionary* customHeader;

    @property  (strong,nonatomic) NSString* httpRequestProtocol;

    -(void) addCustomerHeaderWithKey:(NSString*) key
    value:(NSString*) value;

    -(id)initWithGlobalConfig;

    -(id)initWithCredential:(Credential*)credential
    sdkEnvironment:(SDKEnvironment*)sdkEnvironment;
    -(id)initWithCredential:(Credential*)credential;
    /**
    createMountTarget sync request
    @param createMountTargetRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `createMountTargetResponse` the request response data model
    */
    -(NSDictionary*) createMountTargetSyncWithRequest:(ZfsCreateMountTargetRequest*) createMountTargetRequest;

    -(void)createMountTargetAsyncWithRequest:(ZfsCreateMountTargetRequest*) createMountTargetRequest
    completionHandler:(void(^)(int statusCode,ZfsCreateMountTargetResponse* _Nullable createMountTargetResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    createFileSystem sync request
    @param createFileSystemRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `createFileSystemResponse` the request response data model
    */
    -(NSDictionary*) createFileSystemSyncWithRequest:(ZfsCreateFileSystemRequest*) createFileSystemRequest;

    -(void)createFileSystemAsyncWithRequest:(ZfsCreateFileSystemRequest*) createFileSystemRequest
    completionHandler:(void(^)(int statusCode,ZfsCreateFileSystemResponse* _Nullable createFileSystemResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeFileSystem sync request
    @param describeFileSystemRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeFileSystemResponse` the request response data model
    */
    -(NSDictionary*) describeFileSystemSyncWithRequest:(ZfsDescribeFileSystemRequest*) describeFileSystemRequest;

    -(void)describeFileSystemAsyncWithRequest:(ZfsDescribeFileSystemRequest*) describeFileSystemRequest
    completionHandler:(void(^)(int statusCode,ZfsDescribeFileSystemResponse* _Nullable describeFileSystemResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteMountTarget sync request
    @param deleteMountTargetRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteMountTargetResponse` the request response data model
    */
    -(NSDictionary*) deleteMountTargetSyncWithRequest:(ZfsDeleteMountTargetRequest*) deleteMountTargetRequest;

    -(void)deleteMountTargetAsyncWithRequest:(ZfsDeleteMountTargetRequest*) deleteMountTargetRequest
    completionHandler:(void(^)(int statusCode,ZfsDeleteMountTargetResponse* _Nullable deleteMountTargetResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeFileSystems sync request
    @param describeFileSystemsRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeFileSystemsResponse` the request response data model
    */
    -(NSDictionary*) describeFileSystemsSyncWithRequest:(ZfsDescribeFileSystemsRequest*) describeFileSystemsRequest;

    -(void)describeFileSystemsAsyncWithRequest:(ZfsDescribeFileSystemsRequest*) describeFileSystemsRequest
    completionHandler:(void(^)(int statusCode,ZfsDescribeFileSystemsResponse* _Nullable describeFileSystemsResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteFileSystem sync request
    @param deleteFileSystemRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteFileSystemResponse` the request response data model
    */
    -(NSDictionary*) deleteFileSystemSyncWithRequest:(ZfsDeleteFileSystemRequest*) deleteFileSystemRequest;

    -(void)deleteFileSystemAsyncWithRequest:(ZfsDeleteFileSystemRequest*) deleteFileSystemRequest
    completionHandler:(void(^)(int statusCode,ZfsDeleteFileSystemResponse* _Nullable deleteFileSystemResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    modifyFileSystemAttribute sync request
    @param modifyFileSystemAttributeRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `modifyFileSystemAttributeResponse` the request response data model
    */
    -(NSDictionary*) modifyFileSystemAttributeSyncWithRequest:(ZfsModifyFileSystemAttributeRequest*) modifyFileSystemAttributeRequest;

    -(void)modifyFileSystemAttributeAsyncWithRequest:(ZfsModifyFileSystemAttributeRequest*) modifyFileSystemAttributeRequest
    completionHandler:(void(^)(int statusCode,ZfsModifyFileSystemAttributeResponse* _Nullable modifyFileSystemAttributeResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeMountTargets sync request
    @param describeMountTargetsRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeMountTargetsResponse` the request response data model
    */
    -(NSDictionary*) describeMountTargetsSyncWithRequest:(ZfsDescribeMountTargetsRequest*) describeMountTargetsRequest;

    -(void)describeMountTargetsAsyncWithRequest:(ZfsDescribeMountTargetsRequest*) describeMountTargetsRequest
    completionHandler:(void(^)(int statusCode,ZfsDescribeMountTargetsResponse* _Nullable describeMountTargetsResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeMountTarget sync request
    @param describeMountTargetRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeMountTargetResponse` the request response data model
    */
    -(NSDictionary*) describeMountTargetSyncWithRequest:(ZfsDescribeMountTargetRequest*) describeMountTargetRequest;

    -(void)describeMountTargetAsyncWithRequest:(ZfsDescribeMountTargetRequest*) describeMountTargetRequest
    completionHandler:(void(^)(int statusCode,ZfsDescribeMountTargetResponse* _Nullable describeMountTargetResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    /**
    zfs common sync request
    @param  jdcloudDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
    */
    -(NSDictionary*) zfsCommonSyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                           url:(NSString*) url
                                        method:(NSString*) method;

    -(void)zfsCommonAsyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                  url:(NSString*) url
                               method:(NSString*) method
                    completionHandler:(void(^)(int statusCode, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    @end


    #endif /* ZfsClient_h */
