/* Copyright 2018 JDCLOUD.COM

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http:#www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Live-Video
视频直播相关接口

OpenAPI spec version: v1
Contact: 

NOTE: This class is auto generated by the jdcloud code generator program.
*/


#ifndef LiveClient_h
#define LiveClient_h


#import <JDCloudOCSDKCore/JDCloudOCSDKCore.h>
#import <JDCloudOCSDKLive/LiveApiModel.h>

@interface LiveClient : NSObject<JDCloudClient>{
    @private
    NSString* _userAgent;
    NSString* _serviceName;
    NSString* _version;
    }

    @property (strong,readonly,nonatomic) NSString* userAgent;

    @property (strong,readonly,nonatomic) NSString* serviceName;

    @property (strong,readonly,nonatomic) NSString* version;

    @property (strong,nonatomic) NSString* contentType;

    @property (strong,nonatomic) Credential* credential;

    @property (strong,nonatomic) SDKEnvironment* sdkEnvironment;

    @property (strong,nonatomic) NSMutableDictionary* customHeader;

    @property  (strong,nonatomic) NSString* httpRequestProtocol;

    -(void) addCustomerHeaderWithKey:(NSString*) key
    value:(NSString*) value;

    -(id)initWithGlobalConfig;

    -(id)initWithCredential:(Credential*)credential
    sdkEnvironment:(SDKEnvironment*)sdkEnvironment;
    -(id)initWithCredential:(Credential*)credential;
    /**
    describeDomainOnlineStream sync request
    @param describeDomainOnlineStreamRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeDomainOnlineStreamResponse` the request response data model
    */
    -(NSDictionary*) describeDomainOnlineStreamSyncWithRequest:(LiveDescribeDomainOnlineStreamRequest*) describeDomainOnlineStreamRequest;

    -(void)describeDomainOnlineStreamAsyncWithRequest:(LiveDescribeDomainOnlineStreamRequest*) describeDomainOnlineStreamRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeDomainOnlineStreamResponse* _Nullable describeDomainOnlineStreamResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeUrlRanking sync request
    @param describeUrlRankingRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeUrlRankingResponse` the request response data model
    */
    -(NSDictionary*) describeUrlRankingSyncWithRequest:(LiveDescribeUrlRankingRequest*) describeUrlRankingRequest;

    -(void)describeUrlRankingAsyncWithRequest:(LiveDescribeUrlRankingRequest*) describeUrlRankingRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeUrlRankingResponse* _Nullable describeUrlRankingResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    openLiveRestart sync request
    @param openLiveRestartRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `openLiveRestartResponse` the request response data model
    */
    -(NSDictionary*) openLiveRestartSyncWithRequest:(LiveOpenLiveRestartRequest*) openLiveRestartRequest;

    -(void)openLiveRestartAsyncWithRequest:(LiveOpenLiveRestartRequest*) openLiveRestartRequest
    completionHandler:(void(^)(int statusCode,LiveOpenLiveRestartResponse* _Nullable openLiveRestartResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamAppQualityDetection sync request
    @param addLiveStreamAppQualityDetectionRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamAppQualityDetectionResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamAppQualityDetectionSyncWithRequest:(LiveAddLiveStreamAppQualityDetectionRequest*) addLiveStreamAppQualityDetectionRequest;

    -(void)addLiveStreamAppQualityDetectionAsyncWithRequest:(LiveAddLiveStreamAppQualityDetectionRequest*) addLiveStreamAppQualityDetectionRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamAppQualityDetectionResponse* _Nullable addLiveStreamAppQualityDetectionResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamNotifyConfig sync request
    @param deleteLiveStreamNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamNotifyConfigSyncWithRequest:(LiveDeleteLiveStreamNotifyConfigRequest*) deleteLiveStreamNotifyConfigRequest;

    -(void)deleteLiveStreamNotifyConfigAsyncWithRequest:(LiveDeleteLiveStreamNotifyConfigRequest*) deleteLiveStreamNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamNotifyConfigResponse* _Nullable deleteLiveStreamNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addCustomLiveStreamQualityDetectionTemplate sync request
    @param addCustomLiveStreamQualityDetectionTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addCustomLiveStreamQualityDetectionTemplateResponse` the request response data model
    */
    -(NSDictionary*) addCustomLiveStreamQualityDetectionTemplateSyncWithRequest:(LiveAddCustomLiveStreamQualityDetectionTemplateRequest*) addCustomLiveStreamQualityDetectionTemplateRequest;

    -(void)addCustomLiveStreamQualityDetectionTemplateAsyncWithRequest:(LiveAddCustomLiveStreamQualityDetectionTemplateRequest*) addCustomLiveStreamQualityDetectionTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveAddCustomLiveStreamQualityDetectionTemplateResponse* _Nullable addCustomLiveStreamQualityDetectionTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    openLiveP2p sync request
    @param openLiveP2pRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `openLiveP2pResponse` the request response data model
    */
    -(NSDictionary*) openLiveP2pSyncWithRequest:(LiveOpenLiveP2pRequest*) openLiveP2pRequest;

    -(void)openLiveP2pAsyncWithRequest:(LiveOpenLiveP2pRequest*) openLiveP2pRequest
    completionHandler:(void(^)(int statusCode,LiveOpenLiveP2pResponse* _Nullable openLiveP2pResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeCustomLiveStreamRecordTemplates sync request
    @param describeCustomLiveStreamRecordTemplatesRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeCustomLiveStreamRecordTemplatesResponse` the request response data model
    */
    -(NSDictionary*) describeCustomLiveStreamRecordTemplatesSyncWithRequest:(LiveDescribeCustomLiveStreamRecordTemplatesRequest*) describeCustomLiveStreamRecordTemplatesRequest;

    -(void)describeCustomLiveStreamRecordTemplatesAsyncWithRequest:(LiveDescribeCustomLiveStreamRecordTemplatesRequest*) describeCustomLiveStreamRecordTemplatesRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeCustomLiveStreamRecordTemplatesResponse* _Nullable describeCustomLiveStreamRecordTemplatesResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeTranscodeBinding sync request
    @param describeTranscodeBindingRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeTranscodeBindingResponse` the request response data model
    */
    -(NSDictionary*) describeTranscodeBindingSyncWithRequest:(LiveDescribeTranscodeBindingRequest*) describeTranscodeBindingRequest;

    -(void)describeTranscodeBindingAsyncWithRequest:(LiveDescribeTranscodeBindingRequest*) describeTranscodeBindingRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeTranscodeBindingResponse* _Nullable describeTranscodeBindingResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeCustomLiveStreamRecordConfig sync request
    @param describeCustomLiveStreamRecordConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeCustomLiveStreamRecordConfigResponse` the request response data model
    */
    -(NSDictionary*) describeCustomLiveStreamRecordConfigSyncWithRequest:(LiveDescribeCustomLiveStreamRecordConfigRequest*) describeCustomLiveStreamRecordConfigRequest;

    -(void)describeCustomLiveStreamRecordConfigAsyncWithRequest:(LiveDescribeCustomLiveStreamRecordConfigRequest*) describeCustomLiveStreamRecordConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeCustomLiveStreamRecordConfigResponse* _Nullable describeCustomLiveStreamRecordConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveDomains sync request
    @param describeLiveDomainsRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveDomainsResponse` the request response data model
    */
    -(NSDictionary*) describeLiveDomainsSyncWithRequest:(LiveDescribeLiveDomainsRequest*) describeLiveDomainsRequest;

    -(void)describeLiveDomainsAsyncWithRequest:(LiveDescribeLiveDomainsRequest*) describeLiveDomainsRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveDomainsResponse* _Nullable describeLiveDomainsResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveApp sync request
    @param addLiveAppRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveAppResponse` the request response data model
    */
    -(NSDictionary*) addLiveAppSyncWithRequest:(LiveAddLiveAppRequest*) addLiveAppRequest;

    -(void)addLiveAppAsyncWithRequest:(LiveAddLiveAppRequest*) addLiveAppRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveAppResponse* _Nullable addLiveAppResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamAppWatermark sync request
    @param deleteLiveStreamAppWatermarkRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamAppWatermarkResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamAppWatermarkSyncWithRequest:(LiveDeleteLiveStreamAppWatermarkRequest*) deleteLiveStreamAppWatermarkRequest;

    -(void)deleteLiveStreamAppWatermarkAsyncWithRequest:(LiveDeleteLiveStreamAppWatermarkRequest*) deleteLiveStreamAppWatermarkRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamAppWatermarkResponse* _Nullable deleteLiveStreamAppWatermarkResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveRestartAuthKey sync request
    @param describeLiveRestartAuthKeyRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveRestartAuthKeyResponse` the request response data model
    */
    -(NSDictionary*) describeLiveRestartAuthKeySyncWithRequest:(LiveDescribeLiveRestartAuthKeyRequest*) describeLiveRestartAuthKeyRequest;

    -(void)describeLiveRestartAuthKeyAsyncWithRequest:(LiveDescribeLiveRestartAuthKeyRequest*) describeLiveRestartAuthKeyRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveRestartAuthKeyResponse* _Nullable describeLiveRestartAuthKeyResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamPlayerRankingData sync request
    @param describeLiveStreamPlayerRankingDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamPlayerRankingDataResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamPlayerRankingDataSyncWithRequest:(LiveDescribeLiveStreamPlayerRankingDataRequest*) describeLiveStreamPlayerRankingDataRequest;

    -(void)describeLiveStreamPlayerRankingDataAsyncWithRequest:(LiveDescribeLiveStreamPlayerRankingDataRequest*) describeLiveStreamPlayerRankingDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamPlayerRankingDataResponse* _Nullable describeLiveStreamPlayerRankingDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeWatermarkBinding sync request
    @param describeWatermarkBindingRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeWatermarkBindingResponse` the request response data model
    */
    -(NSDictionary*) describeWatermarkBindingSyncWithRequest:(LiveDescribeWatermarkBindingRequest*) describeWatermarkBindingRequest;

    -(void)describeWatermarkBindingAsyncWithRequest:(LiveDescribeWatermarkBindingRequest*) describeWatermarkBindingRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeWatermarkBindingResponse* _Nullable describeWatermarkBindingResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStatisticGroupByStream sync request
    @param describeLiveStatisticGroupByStreamRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStatisticGroupByStreamResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStatisticGroupByStreamSyncWithRequest:(LiveDescribeLiveStatisticGroupByStreamRequest*) describeLiveStatisticGroupByStreamRequest;

    -(void)describeLiveStatisticGroupByStreamAsyncWithRequest:(LiveDescribeLiveStatisticGroupByStreamRequest*) describeLiveStatisticGroupByStreamRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStatisticGroupByStreamResponse* _Nullable describeLiveStatisticGroupByStreamResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    setLiveStreamRecordNotifyConfig sync request
    @param setLiveStreamRecordNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `setLiveStreamRecordNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) setLiveStreamRecordNotifyConfigSyncWithRequest:(LiveSetLiveStreamRecordNotifyConfigRequest*) setLiveStreamRecordNotifyConfigRequest;

    -(void)setLiveStreamRecordNotifyConfigAsyncWithRequest:(LiveSetLiveStreamRecordNotifyConfigRequest*) setLiveStreamRecordNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveSetLiveStreamRecordNotifyConfigResponse* _Nullable setLiveStreamRecordNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addCustomLiveStreamSnapshotTemplate sync request
    @param addCustomLiveStreamSnapshotTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addCustomLiveStreamSnapshotTemplateResponse` the request response data model
    */
    -(NSDictionary*) addCustomLiveStreamSnapshotTemplateSyncWithRequest:(LiveAddCustomLiveStreamSnapshotTemplateRequest*) addCustomLiveStreamSnapshotTemplateRequest;

    -(void)addCustomLiveStreamSnapshotTemplateAsyncWithRequest:(LiveAddCustomLiveStreamSnapshotTemplateRequest*) addCustomLiveStreamSnapshotTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveAddCustomLiveStreamSnapshotTemplateResponse* _Nullable addCustomLiveStreamSnapshotTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    startLiveDomain sync request
    @param startLiveDomainRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `startLiveDomainResponse` the request response data model
    */
    -(NSDictionary*) startLiveDomainSyncWithRequest:(LiveStartLiveDomainRequest*) startLiveDomainRequest;

    -(void)startLiveDomainAsyncWithRequest:(LiveStartLiveDomainRequest*) startLiveDomainRequest
    completionHandler:(void(^)(int statusCode,LiveStartLiveDomainResponse* _Nullable startLiveDomainResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeCustomLiveStreamWatermarkTemplates sync request
    @param describeCustomLiveStreamWatermarkTemplatesRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeCustomLiveStreamWatermarkTemplatesResponse` the request response data model
    */
    -(NSDictionary*) describeCustomLiveStreamWatermarkTemplatesSyncWithRequest:(LiveDescribeCustomLiveStreamWatermarkTemplatesRequest*) describeCustomLiveStreamWatermarkTemplatesRequest;

    -(void)describeCustomLiveStreamWatermarkTemplatesAsyncWithRequest:(LiveDescribeCustomLiveStreamWatermarkTemplatesRequest*) describeCustomLiveStreamWatermarkTemplatesRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeCustomLiveStreamWatermarkTemplatesResponse* _Nullable describeCustomLiveStreamWatermarkTemplatesResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamAppTranscode sync request
    @param addLiveStreamAppTranscodeRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamAppTranscodeResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamAppTranscodeSyncWithRequest:(LiveAddLiveStreamAppTranscodeRequest*) addLiveStreamAppTranscodeRequest;

    -(void)addLiveStreamAppTranscodeAsyncWithRequest:(LiveAddLiveStreamAppTranscodeRequest*) addLiveStreamAppTranscodeRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamAppTranscodeResponse* _Nullable addLiveStreamAppTranscodeResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamSnapshotNotifyConfig sync request
    @param deleteLiveStreamSnapshotNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamSnapshotNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamSnapshotNotifyConfigSyncWithRequest:(LiveDeleteLiveStreamSnapshotNotifyConfigRequest*) deleteLiveStreamSnapshotNotifyConfigRequest;

    -(void)deleteLiveStreamSnapshotNotifyConfigAsyncWithRequest:(LiveDeleteLiveStreamSnapshotNotifyConfigRequest*) deleteLiveStreamSnapshotNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamSnapshotNotifyConfigResponse* _Nullable deleteLiveStreamSnapshotNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveTimeshiftConfigs sync request
    @param describeLiveTimeshiftConfigsRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveTimeshiftConfigsResponse` the request response data model
    */
    -(NSDictionary*) describeLiveTimeshiftConfigsSyncWithRequest:(LiveDescribeLiveTimeshiftConfigsRequest*) describeLiveTimeshiftConfigsRequest;

    -(void)describeLiveTimeshiftConfigsAsyncWithRequest:(LiveDescribeLiveTimeshiftConfigsRequest*) describeLiveTimeshiftConfigsRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveTimeshiftConfigsResponse* _Nullable describeLiveTimeshiftConfigsResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamAppWatermark sync request
    @param addLiveStreamAppWatermarkRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamAppWatermarkResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamAppWatermarkSyncWithRequest:(LiveAddLiveStreamAppWatermarkRequest*) addLiveStreamAppWatermarkRequest;

    -(void)addLiveStreamAppWatermarkAsyncWithRequest:(LiveAddLiveStreamAppWatermarkRequest*) addLiveStreamAppWatermarkRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamAppWatermarkResponse* _Nullable addLiveStreamAppWatermarkResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamAppSnapshot sync request
    @param deleteLiveStreamAppSnapshotRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamAppSnapshotResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamAppSnapshotSyncWithRequest:(LiveDeleteLiveStreamAppSnapshotRequest*) deleteLiveStreamAppSnapshotRequest;

    -(void)deleteLiveStreamAppSnapshotAsyncWithRequest:(LiveDeleteLiveStreamAppSnapshotRequest*) deleteLiveStreamAppSnapshotRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamAppSnapshotResponse* _Nullable deleteLiveStreamAppSnapshotResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamRecordNotifyConfig sync request
    @param deleteLiveStreamRecordNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamRecordNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamRecordNotifyConfigSyncWithRequest:(LiveDeleteLiveStreamRecordNotifyConfigRequest*) deleteLiveStreamRecordNotifyConfigRequest;

    -(void)deleteLiveStreamRecordNotifyConfigAsyncWithRequest:(LiveDeleteLiveStreamRecordNotifyConfigRequest*) deleteLiveStreamRecordNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamRecordNotifyConfigResponse* _Nullable deleteLiveStreamRecordNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeCustomLiveStreamWatermarkConfig sync request
    @param describeCustomLiveStreamWatermarkConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeCustomLiveStreamWatermarkConfigResponse` the request response data model
    */
    -(NSDictionary*) describeCustomLiveStreamWatermarkConfigSyncWithRequest:(LiveDescribeCustomLiveStreamWatermarkConfigRequest*) describeCustomLiveStreamWatermarkConfigRequest;

    -(void)describeCustomLiveStreamWatermarkConfigAsyncWithRequest:(LiveDescribeCustomLiveStreamWatermarkConfigRequest*) describeCustomLiveStreamWatermarkConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeCustomLiveStreamWatermarkConfigResponse* _Nullable describeCustomLiveStreamWatermarkConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addCustomLiveStreamRecordTemplate sync request
    @param addCustomLiveStreamRecordTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addCustomLiveStreamRecordTemplateResponse` the request response data model
    */
    -(NSDictionary*) addCustomLiveStreamRecordTemplateSyncWithRequest:(LiveAddCustomLiveStreamRecordTemplateRequest*) addCustomLiveStreamRecordTemplateRequest;

    -(void)addCustomLiveStreamRecordTemplateAsyncWithRequest:(LiveAddCustomLiveStreamRecordTemplateRequest*) addCustomLiveStreamRecordTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveAddCustomLiveStreamRecordTemplateResponse* _Nullable addCustomLiveStreamRecordTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveTranscodingDurationData sync request
    @param describeLiveTranscodingDurationDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveTranscodingDurationDataResponse` the request response data model
    */
    -(NSDictionary*) describeLiveTranscodingDurationDataSyncWithRequest:(LiveDescribeLiveTranscodingDurationDataRequest*) describeLiveTranscodingDurationDataRequest;

    -(void)describeLiveTranscodingDurationDataAsyncWithRequest:(LiveDescribeLiveTranscodingDurationDataRequest*) describeLiveTranscodingDurationDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveTranscodingDurationDataResponse* _Nullable describeLiveTranscodingDurationDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveP2pConfigs sync request
    @param describeLiveP2pConfigsRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveP2pConfigsResponse` the request response data model
    */
    -(NSDictionary*) describeLiveP2pConfigsSyncWithRequest:(LiveDescribeLiveP2pConfigsRequest*) describeLiveP2pConfigsRequest;

    -(void)describeLiveP2pConfigsAsyncWithRequest:(LiveDescribeLiveP2pConfigsRequest*) describeLiveP2pConfigsRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveP2pConfigsResponse* _Nullable describeLiveP2pConfigsResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLivePlayAuthKey sync request
    @param describeLivePlayAuthKeyRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLivePlayAuthKeyResponse` the request response data model
    */
    -(NSDictionary*) describeLivePlayAuthKeySyncWithRequest:(LiveDescribeLivePlayAuthKeyRequest*) describeLivePlayAuthKeyRequest;

    -(void)describeLivePlayAuthKeyAsyncWithRequest:(LiveDescribeLivePlayAuthKeyRequest*) describeLivePlayAuthKeyRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLivePlayAuthKeyResponse* _Nullable describeLivePlayAuthKeyResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeSnapshotBinding sync request
    @param describeSnapshotBindingRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeSnapshotBindingResponse` the request response data model
    */
    -(NSDictionary*) describeSnapshotBindingSyncWithRequest:(LiveDescribeSnapshotBindingRequest*) describeSnapshotBindingRequest;

    -(void)describeSnapshotBindingAsyncWithRequest:(LiveDescribeSnapshotBindingRequest*) describeSnapshotBindingRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeSnapshotBindingResponse* _Nullable describeSnapshotBindingResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteCustomLiveStreamTranscodeTemplate sync request
    @param deleteCustomLiveStreamTranscodeTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteCustomLiveStreamTranscodeTemplateResponse` the request response data model
    */
    -(NSDictionary*) deleteCustomLiveStreamTranscodeTemplateSyncWithRequest:(LiveDeleteCustomLiveStreamTranscodeTemplateRequest*) deleteCustomLiveStreamTranscodeTemplateRequest;

    -(void)deleteCustomLiveStreamTranscodeTemplateAsyncWithRequest:(LiveDeleteCustomLiveStreamTranscodeTemplateRequest*) deleteCustomLiveStreamTranscodeTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteCustomLiveStreamTranscodeTemplateResponse* _Nullable deleteCustomLiveStreamTranscodeTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeCustomLiveStreamTranscodeTemplates sync request
    @param describeCustomLiveStreamTranscodeTemplatesRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeCustomLiveStreamTranscodeTemplatesResponse` the request response data model
    */
    -(NSDictionary*) describeCustomLiveStreamTranscodeTemplatesSyncWithRequest:(LiveDescribeCustomLiveStreamTranscodeTemplatesRequest*) describeCustomLiveStreamTranscodeTemplatesRequest;

    -(void)describeCustomLiveStreamTranscodeTemplatesAsyncWithRequest:(LiveDescribeCustomLiveStreamTranscodeTemplatesRequest*) describeCustomLiveStreamTranscodeTemplatesRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeCustomLiveStreamTranscodeTemplatesResponse* _Nullable describeCustomLiveStreamTranscodeTemplatesResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLivePornData sync request
    @param describeLivePornDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLivePornDataResponse` the request response data model
    */
    -(NSDictionary*) describeLivePornDataSyncWithRequest:(LiveDescribeLivePornDataRequest*) describeLivePornDataRequest;

    -(void)describeLivePornDataAsyncWithRequest:(LiveDescribeLivePornDataRequest*) describeLivePornDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLivePornDataResponse* _Nullable describeLivePornDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    stopLiveDomain sync request
    @param stopLiveDomainRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `stopLiveDomainResponse` the request response data model
    */
    -(NSDictionary*) stopLiveDomainSyncWithRequest:(LiveStopLiveDomainRequest*) stopLiveDomainRequest;

    -(void)stopLiveDomainAsyncWithRequest:(LiveStopLiveDomainRequest*) stopLiveDomainRequest
    completionHandler:(void(^)(int statusCode,LiveStopLiveDomainResponse* _Nullable stopLiveDomainResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveFileStorageData sync request
    @param describeLiveFileStorageDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveFileStorageDataResponse` the request response data model
    */
    -(NSDictionary*) describeLiveFileStorageDataSyncWithRequest:(LiveDescribeLiveFileStorageDataRequest*) describeLiveFileStorageDataRequest;

    -(void)describeLiveFileStorageDataAsyncWithRequest:(LiveDescribeLiveFileStorageDataRequest*) describeLiveFileStorageDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveFileStorageDataResponse* _Nullable describeLiveFileStorageDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamOnlineList sync request
    @param describeLiveStreamOnlineListRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamOnlineListResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamOnlineListSyncWithRequest:(LiveDescribeLiveStreamOnlineListRequest*) describeLiveStreamOnlineListRequest;

    -(void)describeLiveStreamOnlineListAsyncWithRequest:(LiveDescribeLiveStreamOnlineListRequest*) describeLiveStreamOnlineListRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamOnlineListResponse* _Nullable describeLiveStreamOnlineListResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamRecordNotifyConfig sync request
    @param describeLiveStreamRecordNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamRecordNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamRecordNotifyConfigSyncWithRequest:(LiveDescribeLiveStreamRecordNotifyConfigRequest*) describeLiveStreamRecordNotifyConfigRequest;

    -(void)describeLiveStreamRecordNotifyConfigAsyncWithRequest:(LiveDescribeLiveStreamRecordNotifyConfigRequest*) describeLiveStreamRecordNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamRecordNotifyConfigResponse* _Nullable describeLiveStreamRecordNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamDomainSnapshot sync request
    @param addLiveStreamDomainSnapshotRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamDomainSnapshotResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamDomainSnapshotSyncWithRequest:(LiveAddLiveStreamDomainSnapshotRequest*) addLiveStreamDomainSnapshotRequest;

    -(void)addLiveStreamDomainSnapshotAsyncWithRequest:(LiveAddLiveStreamDomainSnapshotRequest*) addLiveStreamDomainSnapshotRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamDomainSnapshotResponse* _Nullable addLiveStreamDomainSnapshotResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    setLiveStreamNotifyConfig sync request
    @param setLiveStreamNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `setLiveStreamNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) setLiveStreamNotifyConfigSyncWithRequest:(LiveSetLiveStreamNotifyConfigRequest*) setLiveStreamNotifyConfigRequest;

    -(void)setLiveStreamNotifyConfigAsyncWithRequest:(LiveSetLiveStreamNotifyConfigRequest*) setLiveStreamNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveSetLiveStreamNotifyConfigResponse* _Nullable setLiveStreamNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamHistoryUserNum sync request
    @param describeLiveStreamHistoryUserNumRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamHistoryUserNumResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamHistoryUserNumSyncWithRequest:(LiveDescribeLiveStreamHistoryUserNumRequest*) describeLiveStreamHistoryUserNumRequest;

    -(void)describeLiveStreamHistoryUserNumAsyncWithRequest:(LiveDescribeLiveStreamHistoryUserNumRequest*) describeLiveStreamHistoryUserNumRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamHistoryUserNumResponse* _Nullable describeLiveStreamHistoryUserNumResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    setLiveStreamSnapshotNotifyConfig sync request
    @param setLiveStreamSnapshotNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `setLiveStreamSnapshotNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) setLiveStreamSnapshotNotifyConfigSyncWithRequest:(LiveSetLiveStreamSnapshotNotifyConfigRequest*) setLiveStreamSnapshotNotifyConfigRequest;

    -(void)setLiveStreamSnapshotNotifyConfigAsyncWithRequest:(LiveSetLiveStreamSnapshotNotifyConfigRequest*) setLiveStreamSnapshotNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveSetLiveStreamSnapshotNotifyConfigResponse* _Nullable setLiveStreamSnapshotNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamDomainQualityDetection sync request
    @param addLiveStreamDomainQualityDetectionRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamDomainQualityDetectionResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamDomainQualityDetectionSyncWithRequest:(LiveAddLiveStreamDomainQualityDetectionRequest*) addLiveStreamDomainQualityDetectionRequest;

    -(void)addLiveStreamDomainQualityDetectionAsyncWithRequest:(LiveAddLiveStreamDomainQualityDetectionRequest*) addLiveStreamDomainQualityDetectionRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamDomainQualityDetectionResponse* _Nullable addLiveStreamDomainQualityDetectionResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    closeLiveP2p sync request
    @param closeLiveP2pRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `closeLiveP2pResponse` the request response data model
    */
    -(NSDictionary*) closeLiveP2pSyncWithRequest:(LiveCloseLiveP2pRequest*) closeLiveP2pRequest;

    -(void)closeLiveP2pAsyncWithRequest:(LiveCloseLiveP2pRequest*) closeLiveP2pRequest
    completionHandler:(void(^)(int statusCode,LiveCloseLiveP2pResponse* _Nullable closeLiveP2pResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveDomain sync request
    @param deleteLiveDomainRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveDomainResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveDomainSyncWithRequest:(LiveDeleteLiveDomainRequest*) deleteLiveDomainRequest;

    -(void)deleteLiveDomainAsyncWithRequest:(LiveDeleteLiveDomainRequest*) deleteLiveDomainRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveDomainResponse* _Nullable deleteLiveDomainResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamPublishBandwidthData sync request
    @param describeLiveStreamPublishBandwidthDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamPublishBandwidthDataResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamPublishBandwidthDataSyncWithRequest:(LiveDescribeLiveStreamPublishBandwidthDataRequest*) describeLiveStreamPublishBandwidthDataRequest;

    -(void)describeLiveStreamPublishBandwidthDataAsyncWithRequest:(LiveDescribeLiveStreamPublishBandwidthDataRequest*) describeLiveStreamPublishBandwidthDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamPublishBandwidthDataResponse* _Nullable describeLiveStreamPublishBandwidthDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    resumeLiveStream sync request
    @param resumeLiveStreamRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `resumeLiveStreamResponse` the request response data model
    */
    -(NSDictionary*) resumeLiveStreamSyncWithRequest:(LiveResumeLiveStreamRequest*) resumeLiveStreamRequest;

    -(void)resumeLiveStreamAsyncWithRequest:(LiveResumeLiveStreamRequest*) resumeLiveStreamRequest
    completionHandler:(void(^)(int statusCode,LiveResumeLiveStreamResponse* _Nullable resumeLiveStreamResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    setLiveDomainCertificate sync request
    @param setLiveDomainCertificateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `setLiveDomainCertificateResponse` the request response data model
    */
    -(NSDictionary*) setLiveDomainCertificateSyncWithRequest:(LiveSetLiveDomainCertificateRequest*) setLiveDomainCertificateRequest;

    -(void)setLiveDomainCertificateAsyncWithRequest:(LiveSetLiveDomainCertificateRequest*) setLiveDomainCertificateRequest
    completionHandler:(void(^)(int statusCode,LiveSetLiveDomainCertificateResponse* _Nullable setLiveDomainCertificateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeCustomLiveStreamSnapshotConfig sync request
    @param describeCustomLiveStreamSnapshotConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeCustomLiveStreamSnapshotConfigResponse` the request response data model
    */
    -(NSDictionary*) describeCustomLiveStreamSnapshotConfigSyncWithRequest:(LiveDescribeCustomLiveStreamSnapshotConfigRequest*) describeCustomLiveStreamSnapshotConfigRequest;

    -(void)describeCustomLiveStreamSnapshotConfigAsyncWithRequest:(LiveDescribeCustomLiveStreamSnapshotConfigRequest*) describeCustomLiveStreamSnapshotConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeCustomLiveStreamSnapshotConfigResponse* _Nullable describeCustomLiveStreamSnapshotConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeQualityDetectionBinding sync request
    @param describeQualityDetectionBindingRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeQualityDetectionBindingResponse` the request response data model
    */
    -(NSDictionary*) describeQualityDetectionBindingSyncWithRequest:(LiveDescribeQualityDetectionBindingRequest*) describeQualityDetectionBindingRequest;

    -(void)describeQualityDetectionBindingAsyncWithRequest:(LiveDescribeQualityDetectionBindingRequest*) describeQualityDetectionBindingRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeQualityDetectionBindingResponse* _Nullable describeQualityDetectionBindingResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveRestartConfigs sync request
    @param describeLiveRestartConfigsRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveRestartConfigsResponse` the request response data model
    */
    -(NSDictionary*) describeLiveRestartConfigsSyncWithRequest:(LiveDescribeLiveRestartConfigsRequest*) describeLiveRestartConfigsRequest;

    -(void)describeLiveRestartConfigsAsyncWithRequest:(LiveDescribeLiveRestartConfigsRequest*) describeLiveRestartConfigsRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveRestartConfigsResponse* _Nullable describeLiveRestartConfigsResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeRecordBinding sync request
    @param describeRecordBindingRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeRecordBindingResponse` the request response data model
    */
    -(NSDictionary*) describeRecordBindingSyncWithRequest:(LiveDescribeRecordBindingRequest*) describeRecordBindingRequest;

    -(void)describeRecordBindingAsyncWithRequest:(LiveDescribeRecordBindingRequest*) describeRecordBindingRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeRecordBindingResponse* _Nullable describeRecordBindingResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeCustomLiveStreamTranscodeTemplate sync request
    @param describeCustomLiveStreamTranscodeTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeCustomLiveStreamTranscodeTemplateResponse` the request response data model
    */
    -(NSDictionary*) describeCustomLiveStreamTranscodeTemplateSyncWithRequest:(LiveDescribeCustomLiveStreamTranscodeTemplateRequest*) describeCustomLiveStreamTranscodeTemplateRequest;

    -(void)describeCustomLiveStreamTranscodeTemplateAsyncWithRequest:(LiveDescribeCustomLiveStreamTranscodeTemplateRequest*) describeCustomLiveStreamTranscodeTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeCustomLiveStreamTranscodeTemplateResponse* _Nullable describeCustomLiveStreamTranscodeTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    closeLiveRestart sync request
    @param closeLiveRestartRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `closeLiveRestartResponse` the request response data model
    */
    -(NSDictionary*) closeLiveRestartSyncWithRequest:(LiveCloseLiveRestartRequest*) closeLiveRestartRequest;

    -(void)closeLiveRestartAsyncWithRequest:(LiveCloseLiveRestartRequest*) closeLiveRestartRequest
    completionHandler:(void(^)(int statusCode,LiveCloseLiveRestartResponse* _Nullable closeLiveRestartResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamAppSnapshot sync request
    @param addLiveStreamAppSnapshotRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamAppSnapshotResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamAppSnapshotSyncWithRequest:(LiveAddLiveStreamAppSnapshotRequest*) addLiveStreamAppSnapshotRequest;

    -(void)addLiveStreamAppSnapshotAsyncWithRequest:(LiveAddLiveStreamAppSnapshotRequest*) addLiveStreamAppSnapshotRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamAppSnapshotResponse* _Nullable addLiveStreamAppSnapshotResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveTranscodeStreamList sync request
    @param describeLiveTranscodeStreamListRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveTranscodeStreamListResponse` the request response data model
    */
    -(NSDictionary*) describeLiveTranscodeStreamListSyncWithRequest:(LiveDescribeLiveTranscodeStreamListRequest*) describeLiveTranscodeStreamListRequest;

    -(void)describeLiveTranscodeStreamListAsyncWithRequest:(LiveDescribeLiveTranscodeStreamListRequest*) describeLiveTranscodeStreamListRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveTranscodeStreamListResponse* _Nullable describeLiveTranscodeStreamListResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    closeLiveTimeshift sync request
    @param closeLiveTimeshiftRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `closeLiveTimeshiftResponse` the request response data model
    */
    -(NSDictionary*) closeLiveTimeshiftSyncWithRequest:(LiveCloseLiveTimeshiftRequest*) closeLiveTimeshiftRequest;

    -(void)closeLiveTimeshiftAsyncWithRequest:(LiveCloseLiveTimeshiftRequest*) closeLiveTimeshiftRequest
    completionHandler:(void(^)(int statusCode,LiveCloseLiveTimeshiftResponse* _Nullable closeLiveTimeshiftResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteCustomLiveStreamQualityDetectionTemplate sync request
    @param deleteCustomLiveStreamQualityDetectionTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteCustomLiveStreamQualityDetectionTemplateResponse` the request response data model
    */
    -(NSDictionary*) deleteCustomLiveStreamQualityDetectionTemplateSyncWithRequest:(LiveDeleteCustomLiveStreamQualityDetectionTemplateRequest*) deleteCustomLiveStreamQualityDetectionTemplateRequest;

    -(void)deleteCustomLiveStreamQualityDetectionTemplateAsyncWithRequest:(LiveDeleteCustomLiveStreamQualityDetectionTemplateRequest*) deleteCustomLiveStreamQualityDetectionTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteCustomLiveStreamQualityDetectionTemplateResponse* _Nullable deleteCustomLiveStreamQualityDetectionTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveDomainCertificate sync request
    @param describeLiveDomainCertificateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveDomainCertificateResponse` the request response data model
    */
    -(NSDictionary*) describeLiveDomainCertificateSyncWithRequest:(LiveDescribeLiveDomainCertificateRequest*) describeLiveDomainCertificateRequest;

    -(void)describeLiveDomainCertificateAsyncWithRequest:(LiveDescribeLiveDomainCertificateRequest*) describeLiveDomainCertificateRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveDomainCertificateResponse* _Nullable describeLiveDomainCertificateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveTranscodeStreamPlayerUserNum sync request
    @param describeLiveTranscodeStreamPlayerUserNumRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveTranscodeStreamPlayerUserNumResponse` the request response data model
    */
    -(NSDictionary*) describeLiveTranscodeStreamPlayerUserNumSyncWithRequest:(LiveDescribeLiveTranscodeStreamPlayerUserNumRequest*) describeLiveTranscodeStreamPlayerUserNumRequest;

    -(void)describeLiveTranscodeStreamPlayerUserNumAsyncWithRequest:(LiveDescribeLiveTranscodeStreamPlayerUserNumRequest*) describeLiveTranscodeStreamPlayerUserNumRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveTranscodeStreamPlayerUserNumResponse* _Nullable describeLiveTranscodeStreamPlayerUserNumResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveRecordTask sync request
    @param addLiveRecordTaskRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveRecordTaskResponse` the request response data model
    */
    -(NSDictionary*) addLiveRecordTaskSyncWithRequest:(LiveAddLiveRecordTaskRequest*) addLiveRecordTaskRequest;

    -(void)addLiveRecordTaskAsyncWithRequest:(LiveAddLiveRecordTaskRequest*) addLiveRecordTaskRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveRecordTaskResponse* _Nullable addLiveRecordTaskResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamDomainWatermark sync request
    @param addLiveStreamDomainWatermarkRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamDomainWatermarkResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamDomainWatermarkSyncWithRequest:(LiveAddLiveStreamDomainWatermarkRequest*) addLiveStreamDomainWatermarkRequest;

    -(void)addLiveStreamDomainWatermarkAsyncWithRequest:(LiveAddLiveStreamDomainWatermarkRequest*) addLiveStreamDomainWatermarkRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamDomainWatermarkResponse* _Nullable addLiveStreamDomainWatermarkResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamDomainSnapshot sync request
    @param deleteLiveStreamDomainSnapshotRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamDomainSnapshotResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamDomainSnapshotSyncWithRequest:(LiveDeleteLiveStreamDomainSnapshotRequest*) deleteLiveStreamDomainSnapshotRequest;

    -(void)deleteLiveStreamDomainSnapshotAsyncWithRequest:(LiveDeleteLiveStreamDomainSnapshotRequest*) deleteLiveStreamDomainSnapshotRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamDomainSnapshotResponse* _Nullable deleteLiveStreamDomainSnapshotResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    setLiveStreamQualityDetectionNotifyConfig sync request
    @param setLiveStreamQualityDetectionNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `setLiveStreamQualityDetectionNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) setLiveStreamQualityDetectionNotifyConfigSyncWithRequest:(LiveSetLiveStreamQualityDetectionNotifyConfigRequest*) setLiveStreamQualityDetectionNotifyConfigRequest;

    -(void)setLiveStreamQualityDetectionNotifyConfigAsyncWithRequest:(LiveSetLiveStreamQualityDetectionNotifyConfigRequest*) setLiveStreamQualityDetectionNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveSetLiveStreamQualityDetectionNotifyConfigResponse* _Nullable setLiveStreamQualityDetectionNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamBandwidthData sync request
    @param describeLiveStreamBandwidthDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamBandwidthDataResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamBandwidthDataSyncWithRequest:(LiveDescribeLiveStreamBandwidthDataRequest*) describeLiveStreamBandwidthDataRequest;

    -(void)describeLiveStreamBandwidthDataAsyncWithRequest:(LiveDescribeLiveStreamBandwidthDataRequest*) describeLiveStreamBandwidthDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamBandwidthDataResponse* _Nullable describeLiveStreamBandwidthDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeDomainsLog sync request
    @param describeDomainsLogRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeDomainsLogResponse` the request response data model
    */
    -(NSDictionary*) describeDomainsLogSyncWithRequest:(LiveDescribeDomainsLogRequest*) describeDomainsLogRequest;

    -(void)describeDomainsLogAsyncWithRequest:(LiveDescribeDomainsLogRequest*) describeDomainsLogRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeDomainsLogResponse* _Nullable describeDomainsLogResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveRestartDomain sync request
    @param addLiveRestartDomainRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveRestartDomainResponse` the request response data model
    */
    -(NSDictionary*) addLiveRestartDomainSyncWithRequest:(LiveAddLiveRestartDomainRequest*) addLiveRestartDomainRequest;

    -(void)addLiveRestartDomainAsyncWithRequest:(LiveAddLiveRestartDomainRequest*) addLiveRestartDomainRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveRestartDomainResponse* _Nullable addLiveRestartDomainResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamDomainQualityDetection sync request
    @param deleteLiveStreamDomainQualityDetectionRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamDomainQualityDetectionResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamDomainQualityDetectionSyncWithRequest:(LiveDeleteLiveStreamDomainQualityDetectionRequest*) deleteLiveStreamDomainQualityDetectionRequest;

    -(void)deleteLiveStreamDomainQualityDetectionAsyncWithRequest:(LiveDeleteLiveStreamDomainQualityDetectionRequest*) deleteLiveStreamDomainQualityDetectionRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamDomainQualityDetectionResponse* _Nullable deleteLiveStreamDomainQualityDetectionResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveRestartDomainCertificate sync request
    @param describeLiveRestartDomainCertificateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveRestartDomainCertificateResponse` the request response data model
    */
    -(NSDictionary*) describeLiveRestartDomainCertificateSyncWithRequest:(LiveDescribeLiveRestartDomainCertificateRequest*) describeLiveRestartDomainCertificateRequest;

    -(void)describeLiveRestartDomainCertificateAsyncWithRequest:(LiveDescribeLiveRestartDomainCertificateRequest*) describeLiveRestartDomainCertificateRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveRestartDomainCertificateResponse* _Nullable describeLiveRestartDomainCertificateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    forbidLiveStream sync request
    @param forbidLiveStreamRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `forbidLiveStreamResponse` the request response data model
    */
    -(NSDictionary*) forbidLiveStreamSyncWithRequest:(LiveForbidLiveStreamRequest*) forbidLiveStreamRequest;

    -(void)forbidLiveStreamAsyncWithRequest:(LiveForbidLiveStreamRequest*) forbidLiveStreamRequest
    completionHandler:(void(^)(int statusCode,LiveForbidLiveStreamResponse* _Nullable forbidLiveStreamResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describePublishStreamInfoData sync request
    @param describePublishStreamInfoDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describePublishStreamInfoDataResponse` the request response data model
    */
    -(NSDictionary*) describePublishStreamInfoDataSyncWithRequest:(LiveDescribePublishStreamInfoDataRequest*) describePublishStreamInfoDataRequest;

    -(void)describePublishStreamInfoDataAsyncWithRequest:(LiveDescribePublishStreamInfoDataRequest*) describePublishStreamInfoDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribePublishStreamInfoDataResponse* _Nullable describePublishStreamInfoDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveTranscodeStreamNum sync request
    @param describeLiveTranscodeStreamNumRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveTranscodeStreamNumResponse` the request response data model
    */
    -(NSDictionary*) describeLiveTranscodeStreamNumSyncWithRequest:(LiveDescribeLiveTranscodeStreamNumRequest*) describeLiveTranscodeStreamNumRequest;

    -(void)describeLiveTranscodeStreamNumAsyncWithRequest:(LiveDescribeLiveTranscodeStreamNumRequest*) describeLiveTranscodeStreamNumRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveTranscodeStreamNumResponse* _Nullable describeLiveTranscodeStreamNumResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    setLiveRestartAuthKey sync request
    @param setLiveRestartAuthKeyRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `setLiveRestartAuthKeyResponse` the request response data model
    */
    -(NSDictionary*) setLiveRestartAuthKeySyncWithRequest:(LiveSetLiveRestartAuthKeyRequest*) setLiveRestartAuthKeyRequest;

    -(void)setLiveRestartAuthKeyAsyncWithRequest:(LiveSetLiveRestartAuthKeyRequest*) setLiveRestartAuthKeyRequest
    completionHandler:(void(^)(int statusCode,LiveSetLiveRestartAuthKeyResponse* _Nullable setLiveRestartAuthKeyResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveDomainDetail sync request
    @param describeLiveDomainDetailRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveDomainDetailResponse` the request response data model
    */
    -(NSDictionary*) describeLiveDomainDetailSyncWithRequest:(LiveDescribeLiveDomainDetailRequest*) describeLiveDomainDetailRequest;

    -(void)describeLiveDomainDetailAsyncWithRequest:(LiveDescribeLiveDomainDetailRequest*) describeLiveDomainDetailRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveDomainDetailResponse* _Nullable describeLiveDomainDetailResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteCustomLiveStreamSnapshotTemplate sync request
    @param deleteCustomLiveStreamSnapshotTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteCustomLiveStreamSnapshotTemplateResponse` the request response data model
    */
    -(NSDictionary*) deleteCustomLiveStreamSnapshotTemplateSyncWithRequest:(LiveDeleteCustomLiveStreamSnapshotTemplateRequest*) deleteCustomLiveStreamSnapshotTemplateRequest;

    -(void)deleteCustomLiveStreamSnapshotTemplateAsyncWithRequest:(LiveDeleteCustomLiveStreamSnapshotTemplateRequest*) deleteCustomLiveStreamSnapshotTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteCustomLiveStreamSnapshotTemplateResponse* _Nullable deleteCustomLiveStreamSnapshotTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addCustomLiveStreamWatermarkTemplate sync request
    @param addCustomLiveStreamWatermarkTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addCustomLiveStreamWatermarkTemplateResponse` the request response data model
    */
    -(NSDictionary*) addCustomLiveStreamWatermarkTemplateSyncWithRequest:(LiveAddCustomLiveStreamWatermarkTemplateRequest*) addCustomLiveStreamWatermarkTemplateRequest;

    -(void)addCustomLiveStreamWatermarkTemplateAsyncWithRequest:(LiveAddCustomLiveStreamWatermarkTemplateRequest*) addCustomLiveStreamWatermarkTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveAddCustomLiveStreamWatermarkTemplateResponse* _Nullable addCustomLiveStreamWatermarkTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteCustomLiveStreamWatermarkTemplate sync request
    @param deleteCustomLiveStreamWatermarkTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteCustomLiveStreamWatermarkTemplateResponse` the request response data model
    */
    -(NSDictionary*) deleteCustomLiveStreamWatermarkTemplateSyncWithRequest:(LiveDeleteCustomLiveStreamWatermarkTemplateRequest*) deleteCustomLiveStreamWatermarkTemplateRequest;

    -(void)deleteCustomLiveStreamWatermarkTemplateAsyncWithRequest:(LiveDeleteCustomLiveStreamWatermarkTemplateRequest*) deleteCustomLiveStreamWatermarkTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteCustomLiveStreamWatermarkTemplateResponse* _Nullable deleteCustomLiveStreamWatermarkTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamDomainWatermark sync request
    @param deleteLiveStreamDomainWatermarkRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamDomainWatermarkResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamDomainWatermarkSyncWithRequest:(LiveDeleteLiveStreamDomainWatermarkRequest*) deleteLiveStreamDomainWatermarkRequest;

    -(void)deleteLiveStreamDomainWatermarkAsyncWithRequest:(LiveDeleteLiveStreamDomainWatermarkRequest*) deleteLiveStreamDomainWatermarkRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamDomainWatermarkResponse* _Nullable deleteLiveStreamDomainWatermarkResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamAppRecord sync request
    @param deleteLiveStreamAppRecordRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamAppRecordResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamAppRecordSyncWithRequest:(LiveDeleteLiveStreamAppRecordRequest*) deleteLiveStreamAppRecordRequest;

    -(void)deleteLiveStreamAppRecordAsyncWithRequest:(LiveDeleteLiveStreamAppRecordRequest*) deleteLiveStreamAppRecordRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamAppRecordResponse* _Nullable deleteLiveStreamAppRecordResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteCustomLiveStreamRecordTemplate sync request
    @param deleteCustomLiveStreamRecordTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteCustomLiveStreamRecordTemplateResponse` the request response data model
    */
    -(NSDictionary*) deleteCustomLiveStreamRecordTemplateSyncWithRequest:(LiveDeleteCustomLiveStreamRecordTemplateRequest*) deleteCustomLiveStreamRecordTemplateRequest;

    -(void)deleteCustomLiveStreamRecordTemplateAsyncWithRequest:(LiveDeleteCustomLiveStreamRecordTemplateRequest*) deleteCustomLiveStreamRecordTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteCustomLiveStreamRecordTemplateResponse* _Nullable deleteCustomLiveStreamRecordTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamQualityDetectionNotifyConfig sync request
    @param deleteLiveStreamQualityDetectionNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamQualityDetectionNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamQualityDetectionNotifyConfigSyncWithRequest:(LiveDeleteLiveStreamQualityDetectionNotifyConfigRequest*) deleteLiveStreamQualityDetectionNotifyConfigRequest;

    -(void)deleteLiveStreamQualityDetectionNotifyConfigAsyncWithRequest:(LiveDeleteLiveStreamQualityDetectionNotifyConfigRequest*) deleteLiveStreamQualityDetectionNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamQualityDetectionNotifyConfigResponse* _Nullable deleteLiveStreamQualityDetectionNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    setLiveRestartDomainCertificate sync request
    @param setLiveRestartDomainCertificateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `setLiveRestartDomainCertificateResponse` the request response data model
    */
    -(NSDictionary*) setLiveRestartDomainCertificateSyncWithRequest:(LiveSetLiveRestartDomainCertificateRequest*) setLiveRestartDomainCertificateRequest;

    -(void)setLiveRestartDomainCertificateAsyncWithRequest:(LiveSetLiveRestartDomainCertificateRequest*) setLiveRestartDomainCertificateRequest
    completionHandler:(void(^)(int statusCode,LiveSetLiveRestartDomainCertificateResponse* _Nullable setLiveRestartDomainCertificateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveSnapshotData sync request
    @param describeLiveSnapshotDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveSnapshotDataResponse` the request response data model
    */
    -(NSDictionary*) describeLiveSnapshotDataSyncWithRequest:(LiveDescribeLiveSnapshotDataRequest*) describeLiveSnapshotDataRequest;

    -(void)describeLiveSnapshotDataAsyncWithRequest:(LiveDescribeLiveSnapshotDataRequest*) describeLiveSnapshotDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveSnapshotDataResponse* _Nullable describeLiveSnapshotDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamDomainTranscode sync request
    @param deleteLiveStreamDomainTranscodeRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamDomainTranscodeResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamDomainTranscodeSyncWithRequest:(LiveDeleteLiveStreamDomainTranscodeRequest*) deleteLiveStreamDomainTranscodeRequest;

    -(void)deleteLiveStreamDomainTranscodeAsyncWithRequest:(LiveDeleteLiveStreamDomainTranscodeRequest*) deleteLiveStreamDomainTranscodeRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamDomainTranscodeResponse* _Nullable deleteLiveStreamDomainTranscodeResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamAppQualityDetection sync request
    @param deleteLiveStreamAppQualityDetectionRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamAppQualityDetectionResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamAppQualityDetectionSyncWithRequest:(LiveDeleteLiveStreamAppQualityDetectionRequest*) deleteLiveStreamAppQualityDetectionRequest;

    -(void)deleteLiveStreamAppQualityDetectionAsyncWithRequest:(LiveDeleteLiveStreamAppQualityDetectionRequest*) deleteLiveStreamAppQualityDetectionRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamAppQualityDetectionResponse* _Nullable deleteLiveStreamAppQualityDetectionResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamDomainRecord sync request
    @param deleteLiveStreamDomainRecordRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamDomainRecordResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamDomainRecordSyncWithRequest:(LiveDeleteLiveStreamDomainRecordRequest*) deleteLiveStreamDomainRecordRequest;

    -(void)deleteLiveStreamDomainRecordAsyncWithRequest:(LiveDeleteLiveStreamDomainRecordRequest*) deleteLiveStreamDomainRecordRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamDomainRecordResponse* _Nullable deleteLiveStreamDomainRecordResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLivePublishStreamNum sync request
    @param describeLivePublishStreamNumRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLivePublishStreamNumResponse` the request response data model
    */
    -(NSDictionary*) describeLivePublishStreamNumSyncWithRequest:(LiveDescribeLivePublishStreamNumRequest*) describeLivePublishStreamNumRequest;

    -(void)describeLivePublishStreamNumAsyncWithRequest:(LiveDescribeLivePublishStreamNumRequest*) describeLivePublishStreamNumRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLivePublishStreamNumResponse* _Nullable describeLivePublishStreamNumResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeSystemLiveStreamTranscodeTemplates sync request
    @param describeSystemLiveStreamTranscodeTemplatesRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeSystemLiveStreamTranscodeTemplatesResponse` the request response data model
    */
    -(NSDictionary*) describeSystemLiveStreamTranscodeTemplatesSyncWithRequest:(LiveDescribeSystemLiveStreamTranscodeTemplatesRequest*) describeSystemLiveStreamTranscodeTemplatesRequest;

    -(void)describeSystemLiveStreamTranscodeTemplatesAsyncWithRequest:(LiveDescribeSystemLiveStreamTranscodeTemplatesRequest*) describeSystemLiveStreamTranscodeTemplatesRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeSystemLiveStreamTranscodeTemplatesResponse* _Nullable describeSystemLiveStreamTranscodeTemplatesResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStatisticGroupByArea sync request
    @param describeLiveStatisticGroupByAreaRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStatisticGroupByAreaResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStatisticGroupByAreaSyncWithRequest:(LiveDescribeLiveStatisticGroupByAreaRequest*) describeLiveStatisticGroupByAreaRequest;

    -(void)describeLiveStatisticGroupByAreaAsyncWithRequest:(LiveDescribeLiveStatisticGroupByAreaRequest*) describeLiveStatisticGroupByAreaRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStatisticGroupByAreaResponse* _Nullable describeLiveStatisticGroupByAreaResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamPublishList sync request
    @param describeLiveStreamPublishListRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamPublishListResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamPublishListSyncWithRequest:(LiveDescribeLiveStreamPublishListRequest*) describeLiveStreamPublishListRequest;

    -(void)describeLiveStreamPublishListAsyncWithRequest:(LiveDescribeLiveStreamPublishListRequest*) describeLiveStreamPublishListRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamPublishListResponse* _Nullable describeLiveStreamPublishListResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamPublishTrafficData sync request
    @param describeLiveStreamPublishTrafficDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamPublishTrafficDataResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamPublishTrafficDataSyncWithRequest:(LiveDescribeLiveStreamPublishTrafficDataRequest*) describeLiveStreamPublishTrafficDataRequest;

    -(void)describeLiveStreamPublishTrafficDataAsyncWithRequest:(LiveDescribeLiveStreamPublishTrafficDataRequest*) describeLiveStreamPublishTrafficDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamPublishTrafficDataResponse* _Nullable describeLiveStreamPublishTrafficDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamAppRecord sync request
    @param addLiveStreamAppRecordRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamAppRecordResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamAppRecordSyncWithRequest:(LiveAddLiveStreamAppRecordRequest*) addLiveStreamAppRecordRequest;

    -(void)addLiveStreamAppRecordAsyncWithRequest:(LiveAddLiveStreamAppRecordRequest*) addLiveStreamAppRecordRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamAppRecordResponse* _Nullable addLiveStreamAppRecordResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamDomainRecord sync request
    @param addLiveStreamDomainRecordRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamDomainRecordResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamDomainRecordSyncWithRequest:(LiveAddLiveStreamDomainRecordRequest*) addLiveStreamDomainRecordRequest;

    -(void)addLiveStreamDomainRecordAsyncWithRequest:(LiveAddLiveStreamDomainRecordRequest*) addLiveStreamDomainRecordRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamDomainRecordResponse* _Nullable addLiveStreamDomainRecordResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStatisticGroupByAreaIsp sync request
    @param describeLiveStatisticGroupByAreaIspRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStatisticGroupByAreaIspResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStatisticGroupByAreaIspSyncWithRequest:(LiveDescribeLiveStatisticGroupByAreaIspRequest*) describeLiveStatisticGroupByAreaIspRequest;

    -(void)describeLiveStatisticGroupByAreaIspAsyncWithRequest:(LiveDescribeLiveStatisticGroupByAreaIspRequest*) describeLiveStatisticGroupByAreaIspRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStatisticGroupByAreaIspResponse* _Nullable describeLiveStatisticGroupByAreaIspResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamSnapshotNotifyConfig sync request
    @param describeLiveStreamSnapshotNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamSnapshotNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamSnapshotNotifyConfigSyncWithRequest:(LiveDescribeLiveStreamSnapshotNotifyConfigRequest*) describeLiveStreamSnapshotNotifyConfigRequest;

    -(void)describeLiveStreamSnapshotNotifyConfigAsyncWithRequest:(LiveDescribeLiveStreamSnapshotNotifyConfigRequest*) describeLiveStreamSnapshotNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamSnapshotNotifyConfigResponse* _Nullable describeLiveStreamSnapshotNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamTranscodeConfig sync request
    @param describeLiveStreamTranscodeConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamTranscodeConfigResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamTranscodeConfigSyncWithRequest:(LiveDescribeLiveStreamTranscodeConfigRequest*) describeLiveStreamTranscodeConfigRequest;

    -(void)describeLiveStreamTranscodeConfigAsyncWithRequest:(LiveDescribeLiveStreamTranscodeConfigRequest*) describeLiveStreamTranscodeConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamTranscodeConfigResponse* _Nullable describeLiveStreamTranscodeConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    setLivePlayAuthKey sync request
    @param setLivePlayAuthKeyRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `setLivePlayAuthKeyResponse` the request response data model
    */
    -(NSDictionary*) setLivePlayAuthKeySyncWithRequest:(LiveSetLivePlayAuthKeyRequest*) setLivePlayAuthKeyRequest;

    -(void)setLivePlayAuthKeyAsyncWithRequest:(LiveSetLivePlayAuthKeyRequest*) setLivePlayAuthKeyRequest
    completionHandler:(void(^)(int statusCode,LiveSetLivePlayAuthKeyResponse* _Nullable setLivePlayAuthKeyResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveApp sync request
    @param describeLiveAppRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveAppResponse` the request response data model
    */
    -(NSDictionary*) describeLiveAppSyncWithRequest:(LiveDescribeLiveAppRequest*) describeLiveAppRequest;

    -(void)describeLiveAppAsyncWithRequest:(LiveDescribeLiveAppRequest*) describeLiveAppRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveAppResponse* _Nullable describeLiveAppResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    interruptLiveStream sync request
    @param interruptLiveStreamRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `interruptLiveStreamResponse` the request response data model
    */
    -(NSDictionary*) interruptLiveStreamSyncWithRequest:(LiveInterruptLiveStreamRequest*) interruptLiveStreamRequest;

    -(void)interruptLiveStreamAsyncWithRequest:(LiveInterruptLiveStreamRequest*) interruptLiveStreamRequest
    completionHandler:(void(^)(int statusCode,LiveInterruptLiveStreamResponse* _Nullable interruptLiveStreamResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamQualityDetectionNotifyConfig sync request
    @param describeLiveStreamQualityDetectionNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamQualityDetectionNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamQualityDetectionNotifyConfigSyncWithRequest:(LiveDescribeLiveStreamQualityDetectionNotifyConfigRequest*) describeLiveStreamQualityDetectionNotifyConfigRequest;

    -(void)describeLiveStreamQualityDetectionNotifyConfigAsyncWithRequest:(LiveDescribeLiveStreamQualityDetectionNotifyConfigRequest*) describeLiveStreamQualityDetectionNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamQualityDetectionNotifyConfigResponse* _Nullable describeLiveStreamQualityDetectionNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveDomain sync request
    @param addLiveDomainRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveDomainResponse` the request response data model
    */
    -(NSDictionary*) addLiveDomainSyncWithRequest:(LiveAddLiveDomainRequest*) addLiveDomainRequest;

    -(void)addLiveDomainAsyncWithRequest:(LiveAddLiveDomainRequest*) addLiveDomainRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveDomainResponse* _Nullable addLiveDomainResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveTranscodeStreamBandwidth sync request
    @param describeLiveTranscodeStreamBandwidthRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveTranscodeStreamBandwidthResponse` the request response data model
    */
    -(NSDictionary*) describeLiveTranscodeStreamBandwidthSyncWithRequest:(LiveDescribeLiveTranscodeStreamBandwidthRequest*) describeLiveTranscodeStreamBandwidthRequest;

    -(void)describeLiveTranscodeStreamBandwidthAsyncWithRequest:(LiveDescribeLiveTranscodeStreamBandwidthRequest*) describeLiveTranscodeStreamBandwidthRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveTranscodeStreamBandwidthResponse* _Nullable describeLiveTranscodeStreamBandwidthResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamInfo sync request
    @param describeLiveStreamInfoRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamInfoResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamInfoSyncWithRequest:(LiveDescribeLiveStreamInfoRequest*) describeLiveStreamInfoRequest;

    -(void)describeLiveStreamInfoAsyncWithRequest:(LiveDescribeLiveStreamInfoRequest*) describeLiveStreamInfoRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamInfoResponse* _Nullable describeLiveStreamInfoResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeCustomLiveStreamQualityDetectionTemplates sync request
    @param describeCustomLiveStreamQualityDetectionTemplatesRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeCustomLiveStreamQualityDetectionTemplatesResponse` the request response data model
    */
    -(NSDictionary*) describeCustomLiveStreamQualityDetectionTemplatesSyncWithRequest:(LiveDescribeCustomLiveStreamQualityDetectionTemplatesRequest*) describeCustomLiveStreamQualityDetectionTemplatesRequest;

    -(void)describeCustomLiveStreamQualityDetectionTemplatesAsyncWithRequest:(LiveDescribeCustomLiveStreamQualityDetectionTemplatesRequest*) describeCustomLiveStreamQualityDetectionTemplatesRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeCustomLiveStreamQualityDetectionTemplatesResponse* _Nullable describeCustomLiveStreamQualityDetectionTemplatesResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamNotifyConfig sync request
    @param describeLiveStreamNotifyConfigRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamNotifyConfigResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamNotifyConfigSyncWithRequest:(LiveDescribeLiveStreamNotifyConfigRequest*) describeLiveStreamNotifyConfigRequest;

    -(void)describeLiveStreamNotifyConfigAsyncWithRequest:(LiveDescribeLiveStreamNotifyConfigRequest*) describeLiveStreamNotifyConfigRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamNotifyConfigResponse* _Nullable describeLiveStreamNotifyConfigResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeCustomLiveStreamSnapshotTemplates sync request
    @param describeCustomLiveStreamSnapshotTemplatesRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeCustomLiveStreamSnapshotTemplatesResponse` the request response data model
    */
    -(NSDictionary*) describeCustomLiveStreamSnapshotTemplatesSyncWithRequest:(LiveDescribeCustomLiveStreamSnapshotTemplatesRequest*) describeCustomLiveStreamSnapshotTemplatesRequest;

    -(void)describeCustomLiveStreamSnapshotTemplatesAsyncWithRequest:(LiveDescribeCustomLiveStreamSnapshotTemplatesRequest*) describeCustomLiveStreamSnapshotTemplatesRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeCustomLiveStreamSnapshotTemplatesResponse* _Nullable describeCustomLiveStreamSnapshotTemplatesResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    stopLiveApp sync request
    @param stopLiveAppRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `stopLiveAppResponse` the request response data model
    */
    -(NSDictionary*) stopLiveAppSyncWithRequest:(LiveStopLiveAppRequest*) stopLiveAppRequest;

    -(void)stopLiveAppAsyncWithRequest:(LiveStopLiveAppRequest*) stopLiveAppRequest
    completionHandler:(void(^)(int statusCode,LiveStopLiveAppResponse* _Nullable stopLiveAppResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    describeLiveStreamTrafficData sync request
    @param describeLiveStreamTrafficDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `describeLiveStreamTrafficDataResponse` the request response data model
    */
    -(NSDictionary*) describeLiveStreamTrafficDataSyncWithRequest:(LiveDescribeLiveStreamTrafficDataRequest*) describeLiveStreamTrafficDataRequest;

    -(void)describeLiveStreamTrafficDataAsyncWithRequest:(LiveDescribeLiveStreamTrafficDataRequest*) describeLiveStreamTrafficDataRequest
    completionHandler:(void(^)(int statusCode,LiveDescribeLiveStreamTrafficDataResponse* _Nullable describeLiveStreamTrafficDataResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addCustomLiveStreamTranscodeTemplate sync request
    @param addCustomLiveStreamTranscodeTemplateRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addCustomLiveStreamTranscodeTemplateResponse` the request response data model
    */
    -(NSDictionary*) addCustomLiveStreamTranscodeTemplateSyncWithRequest:(LiveAddCustomLiveStreamTranscodeTemplateRequest*) addCustomLiveStreamTranscodeTemplateRequest;

    -(void)addCustomLiveStreamTranscodeTemplateAsyncWithRequest:(LiveAddCustomLiveStreamTranscodeTemplateRequest*) addCustomLiveStreamTranscodeTemplateRequest
    completionHandler:(void(^)(int statusCode,LiveAddCustomLiveStreamTranscodeTemplateResponse* _Nullable addCustomLiveStreamTranscodeTemplateResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    addLiveStreamDomainTranscode sync request
    @param addLiveStreamDomainTranscodeRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `addLiveStreamDomainTranscodeResponse` the request response data model
    */
    -(NSDictionary*) addLiveStreamDomainTranscodeSyncWithRequest:(LiveAddLiveStreamDomainTranscodeRequest*) addLiveStreamDomainTranscodeRequest;

    -(void)addLiveStreamDomainTranscodeAsyncWithRequest:(LiveAddLiveStreamDomainTranscodeRequest*) addLiveStreamDomainTranscodeRequest
    completionHandler:(void(^)(int statusCode,LiveAddLiveStreamDomainTranscodeResponse* _Nullable addLiveStreamDomainTranscodeResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    deleteLiveStreamAppTranscode sync request
    @param deleteLiveStreamAppTranscodeRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `deleteLiveStreamAppTranscodeResponse` the request response data model
    */
    -(NSDictionary*) deleteLiveStreamAppTranscodeSyncWithRequest:(LiveDeleteLiveStreamAppTranscodeRequest*) deleteLiveStreamAppTranscodeRequest;

    -(void)deleteLiveStreamAppTranscodeAsyncWithRequest:(LiveDeleteLiveStreamAppTranscodeRequest*) deleteLiveStreamAppTranscodeRequest
    completionHandler:(void(^)(int statusCode,LiveDeleteLiveStreamAppTranscodeResponse* _Nullable deleteLiveStreamAppTranscodeResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;
    /**
    openLiveTimeshift sync request
    @param openLiveTimeshiftRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
            `openLiveTimeshiftResponse` the request response data model
    */
    -(NSDictionary*) openLiveTimeshiftSyncWithRequest:(LiveOpenLiveTimeshiftRequest*) openLiveTimeshiftRequest;

    -(void)openLiveTimeshiftAsyncWithRequest:(LiveOpenLiveTimeshiftRequest*) openLiveTimeshiftRequest
    completionHandler:(void(^)(int statusCode,LiveOpenLiveTimeshiftResponse* _Nullable openLiveTimeshiftResponse, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    /**
    live common sync request
    @param  jdcloudDataRequest request param
    @return key `statusCode` http request status code type is int
            `dataResult` the http request response data  type is NSData
            `requestError` the request error type is NSError
    */
    -(NSDictionary*) liveCommonSyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                           url:(NSString*) url
                                        method:(NSString*) method;

    -(void)liveCommonAsyncWithRequest:(JDCloudDataRequest*) jdcloudDataRequest
                                  url:(NSString*) url
                               method:(NSString*) method
                    completionHandler:(void(^)(int statusCode, NSData* _Nullable responseData,NSError * _Nullable error))completionHandler;

    @end


    #endif /* LiveClient_h */
